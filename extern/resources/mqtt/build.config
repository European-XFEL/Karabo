CUSTOM_BUILD=y
CWD=$(pwd)

# for evaluation purposes we include both `mqtt_cpp` and `paho_mqtt` libraries.
# In the future only one library will be used.

PAHO_MQTTC=paho.mqtt.c-1.3.6
PAHO_MQTTCPP=paho.mqtt.cpp-1.1
MQTT_CPP=mqtt_cpp-8.0.0

echo
echo "### Trying to build and install $PAHO_MQTTC"
echo

rm -rf $PAHO_MQTTC

if [ ! -d "$PAHO_MQTTC" ]; then
	tar -xf ${PAHO_MQTTC}.tar
fi
cd $PAHO_MQTTC
CMAKE=$INSTALL_PREFIX/bin/cmake
if [ ! -f "$CMAKE" ]; then
        CMAKE=/usr/bin/cmake
fi 
# make
$CMAKE -Bbuild -H. -DCMAKE_BUILD_TYPE=Release -DPAHO_WITH_SSL=OFF -DPAHO_ENABLE_TESTING=OFF \
      -DCMAKE_INSTALL_PREFIX=$INSTALL_PREFIX
$CMAKE --build build/ --target install

echo "-- move C libraries $CWD/$PAHO_MQTTC/build/src/libpaho* to $INSTALL_PREFIX/lib/."
mv $CWD/$PAHO_MQTTC/build/src/libpaho* $INSTALL_PREFIX/lib/.

PAHO_MQTTC_DIR=$INSTALL_PREFIX/lib   # C libraries directory

# build and install paho.mqtt.cpp

cd $CWD

echo
echo "### Trying to build and install $PAHO_MQTTCPP"
echo



rm -rf $PAHO_MQTTCPP
rm -rf $INSTALL_PREFIX/include/mqtt

if [ ! -d "$PAHO_MQTTCPP" ]; then
        tar -xf ${PAHO_MQTTCPP}.tar
fi
cd $PAHO_MQTTCPP

$CMAKE -Bbuild -H. -DCMAKE_BUILD_TYPE=Release -DPAHO_BUILD_DOCUMENTATION=FALSE -DPAHO_BUILD_SAMPLES=TRUE \
      -DCMAKE_INSTALL_PREFIX=$INSTALL_PREFIX \
      -DPAHO_MQTT_C_LIBRARIES=$PAHO_MQTTC_DIR/libpaho-mqtt3a.so
$CMAKE --build build/ --target install

echo "-- move C++ libraries $CWD/$PAHO_MQTTCPP/build/src/libpaho* to $INSTALL_PREFIX/lib/."
mv $CWD/$PAHO_MQTTCPP/build/src/libpaho* $INSTALL_PREFIX/lib/.

cd $CWD

echo
echo "### Trying to build and install $MQTT_CPP"
echo
cmake_version=`$CMAKE --version`
echo "### $cmake_version"
echo
rm -rf $MQTT_CPP

if [ ! -d "$MQTT_CPP" ]; then
        tar -xf ${MQTT_CPP}.tar
fi
cd $MQTT_CPP
$CMAKE -Bbuild -H. -DCMAKE_INSTALL_PREFIX=$INSTALL_PREFIX \
      -DBOOST_ROOT=$INSTALL_PREFIX \
      -DMQTT_BUILD_TESTS=OFF -DMQTT_BUILD_EXAMPLES=OFF
$CMAKE --build build/ --target install

cd $CWD
