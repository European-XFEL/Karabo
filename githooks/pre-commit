#!/bin/bash
#
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#

__lint_clang_format() {
    # Put all staged files that conform to C++ source filename suffixes and
    # that are not Deleted or Renamed into the collection of files to be
    # checked for formatting.
    SRC_FILES=($(git diff --cached --name-only --diff-filter=dr | grep -e ".cc\'" -e ".cpp\'"  -e ".hh\'" -e ".h\'" -e ".hpp\'"))
    local -i num_files=${#SRC_FILES[@]}
    if [[ $num_files -eq 0 ]]; then
        return 0  # no file to be checked
    fi
    echo "clang-format version in use: `clang-format --version`"

    local -i ok_files=0
    local -i err_files=0
    local file_check_code
    for SRC_FILE in "${SRC_FILES[@]}"; do
        eval "clang-format -n -i --Werror $SRC_FILE"
        file_check_code=$?
        if [[ $file_check_code != 0 ]]; then
            ((err_files+=1))
        else
            echo "--- OK for format of '$SRC_FILE'"
            ((ok_files+=1))
        fi
    done
    if [[ $err_files -gt 0 ]]; then
        echo "--- $err_files file(s) (out of $((err_files+ok_files))) failed verification for formatting compliance."
        return $err_files
    else
        echo "--- $ok_files file(s) successfully verified for formatting compliance."
        return 0
    fi
}

# Performs linting of the C++ files in the Framework

# Checks if clang-format is available and its version matches the CI (13.0.0)
CI_CLANG_FORMAT_VERSION="13.0.0"
CLANG_FORMAT_VERSION=$(clang-format --version)
ret_code=$?
if [[ $ret_code != 0 ]]; then
    echo "WARNING: pre-commit C++ format linting SKIPPED."
    echo "         Reason: clang-format not available. Please install clang-format version $CI_CLANG_FORMAT_VERSION."
    exit 0
fi
if [[ "$CLANG_FORMAT_VERSION" != *"$CI_CLANG_FORMAT_VERSION"* ]]; then
    echo "WARNING: pre-commit C++ format linting SKIPPED."
    echo "         Reason: clang-format version does not match the CI's version, $CI_CLANG_FORMAT_VERSION"
    echo "                 Local clang-format version is '$CLANG_FORMAT_VERSION'."
    exit 0
fi

__lint_clang_format
retval=$?
if [[ retval -eq 0 ]]; then
    echo "Commit will proceed."
    exit 0
else
    echo "Commit will not proceed."
    exit 1
fi
