#
#  There exist several targets which are by default empty and which can be 
#  used for execution of your targets. These targets are usually executed 
#  before and after some main targets. They are: 
#
#     .build-pre:              called before 'build' target
#     .build-post:             called after 'build' target
#     .clean-pre:              called before 'clean' target
#     .clean-post:             called after 'clean' target
#     .clobber-pre:            called before 'clobber' target
#     .clobber-post:           called after 'clobber' target
#     .all-pre:                called before 'all' target
#     .all-post:               called after 'all' target
#     .help-pre:               called before 'help' target
#     .help-post:              called after 'help' target
#
#  Targets beginning with '.' are not intended to be called on their own.
#
#  Main targets can be executed directly, and they are:
#  
#     build                    build a specific configuration
#     clean                    remove built files from a configuration
#     clobber                  remove all built files
#     all                      build all configurations
#     help                     print help mesage
#    
#  Targets .build-impl, .clean-impl, .clobber-impl, .all-impl, and
#  .help-impl are implemented in nbproject/makefile-impl.mk.
#
#  Available make variables:
#
#     CND_BASEDIR                base directory for relative paths
#     CND_DISTDIR                default top distribution directory (build artifacts)
#     CND_BUILDDIR               default top build directory (object files, ...)
#     CONF                       name of current configuration
#     CND_PLATFORM_${CONF}       platform name (current configuration)
#     CND_ARTIFACT_DIR_${CONF}   directory of build artifact (current configuration)
#     CND_ARTIFACT_NAME_${CONF}  name of build artifact (current configuration)
#     CND_ARTIFACT_PATH_${CONF}  path to build artifact (current configuration)
#     CND_PACKAGE_DIR_${CONF}    directory of package (current configuration)
#     CND_PACKAGE_NAME_${CONF}   name of package (current configuration)
#     CND_PACKAGE_PATH_${CONF}   path to package (current configuration)
#
# NOCDDL

# Environment 
MKDIR=mkdir
CP=cp
CCADMIN=CCadmin
CURRENT_PLATFORM=`uname -s`
GUIOPT?=GUI

# Copy back platform-specific copies generated by the latest netbeans build on this platform
CONF ?= Debug
ifeq ($(wildcard nbproject/Makefile-impl.mk),)
$(shell $(CP) -f nbproject/Karabo-$(CONF)-$(CURRENT_PLATFORM).mk nbproject/Makefile-$(CONF).mk;\
$(CP) -f nbproject/Karabo-impl-$(CURRENT_PLATFORM).mk nbproject/Makefile-impl.mk;\
$(CP) -f nbproject/Karabo-variables-$(CURRENT_PLATFORM).mk nbproject/Makefile-variables.mk)
endif

# Custom Karabo variables
KARABO = $(CND_BASEDIR)/$(CND_DISTDIR)/$(CONF)/$(CND_PLATFORM_$(CONF))
EXTERN_DIR ?= $(CND_BASEDIR)/../../../extern
EXTERN_DISTDIR = $(EXTERN_DIR)/$(CND_PLATFORM_$(CONF))

# build
build: .build-post

.build-pre:
# Add your pre 'build' code here...

# Make sure the KARABO folder always exists
	@if test ! -d $(KARABO)/bin;     then $(MKDIR) -p $(KARABO)/bin; fi
	@if test ! -d $(KARABO)/include; then $(MKDIR) -p $(KARABO)/include; fi
	@if test ! -d $(KARABO)/lib;     then $(MKDIR) -p $(KARABO)/lib; fi

# Check whether external dependencies are installed, if not build them
	@if test -d $(EXTERN_DISTDIR);\
	then echo "### Found external dependencies, skipping build";\
	else ./.installExtern.sh $(EXTERN_DIR) $(EXTERN_DISTDIR) $(GUIOPT);\
	fi
	if [ ! -h ${KARABO}/extern ]; then cd $(KARABO); ln -sf ../../../../../../extern/$(CND_PLATFORM_$(CONF)) extern; cd -; fi

.build-post: .build-impl
# Create platform-specific copies of the current makefiles generated by netbeans
	@$(CP) -f $(CND_BASEDIR)/nbproject/Makefile-variables.mk $(CND_BASEDIR)/nbproject/Karabo-variables-$(CURRENT_PLATFORM).mk
	@$(CP) -f $(CND_BASEDIR)/nbproject/Makefile-impl.mk $(CND_BASEDIR)/nbproject/Karabo-impl-$(CURRENT_PLATFORM).mk
	@$(CP) -f $(CND_BASEDIR)/nbproject/Makefile-$(CONF).mk $(CND_BASEDIR)/nbproject/Karabo-$(CONF)-$(CURRENT_PLATFORM).mk

# Add your post 'build' code here...
	@if test ! -d $(KARABO)/include/karabo/core;    then $(MKDIR) -p  $(KARABO)/include/karabo/core; fi
	@if test ! -d $(KARABO)/include/karabo/io/h5; then $(MKDIR) -p  $(KARABO)/include/karabo/io/h5; fi
	@if test ! -d $(KARABO)/include/karabo/log;     then $(MKDIR) -p  $(KARABO)/include/karabo/log; fi
	@if test ! -d $(KARABO)/include/karabo/net;     then $(MKDIR) -p  $(KARABO)/include/karabo/net; fi
	@if test ! -d $(KARABO)/include/karabo/python;  then $(MKDIR) -p  $(KARABO)/include/karabo/python; fi
	@if test ! -d $(KARABO)/include/karabo/util;    then $(MKDIR) -p  $(KARABO)/include/karabo/util; fi
	@if test ! -d $(KARABO)/include/karabo/xip;     then $(MKDIR) -p  $(KARABO)/include/karabo/xip; fi
	@if test ! -d $(KARABO)/include/karabo/xml;     then $(MKDIR) -p  $(KARABO)/include/karabo/xml; fi
	@if test ! -d $(KARABO)/include/karabo/xms;     then $(MKDIR) -p  $(KARABO)/include/karabo/xms; fi
	@$(CP) $(CND_BASEDIR)/../../../src/karabo/core/*.hh $(KARABO)/include/karabo/core
	@$(CP) $(CND_BASEDIR)/../../../src/karabo/io/*.hh $(KARABO)/include/karabo/io
	@$(CP) $(CND_BASEDIR)/../../../src/karabo/io/h5/*.hh $(KARABO)/include/karabo/io/h5
	@$(CP) $(CND_BASEDIR)/../../../src/karabo/log/*.hh $(KARABO)/include/karabo/log
	@$(CP) $(CND_BASEDIR)/../../../src/karabo/net/*.hh $(KARABO)/include/karabo/net
	@$(CP) $(CND_BASEDIR)/../../../src/karabo/python/*.hh $(KARABO)/include/karabo/python
	@$(CP) $(CND_BASEDIR)/../../../src/karabo/util/*.hh $(KARABO)/include/karabo/util
	@$(CP) $(CND_BASEDIR)/../../../src/karabo/xip/*.hh $(KARABO)/include/karabo/xip
	@$(CP) $(CND_BASEDIR)/../../../src/karabo/xip/*.h  $(KARABO)/include/karabo/xip
	@$(CP) $(CND_BASEDIR)/../../../src/karabo/xml/*.hh $(KARABO)/include/karabo/xml
	@$(CP) $(CND_BASEDIR)/../../../src/karabo/xml/*.h  $(KARABO)/include/karabo/xml
	@$(CP) $(CND_BASEDIR)/../../../src/karabo/xms/*.hh $(KARABO)/include/karabo/xms

# Force extern re-build
.PHONY: extern package cmd
extern:
	@mkdir -p $(KARABO)
	@./.installExtern.sh $(EXTERN_DIR) $(EXTERN_DISTDIR) $(GUIOPT) $(WHAT)

# Package
package:
	@./.package.sh $(CND_DISTDIR) $(CONF) $(CND_PLATFORM_$(CONF)) tar $(GUIOPT)

install:
	@./.package.sh $(CND_DISTDIR) $(CONF) $(CND_PLATFORM_$(CONF)) install $(GUIOPT)

# clean
clean: .clean-post

.clean-pre:
# Add your pre 'clean' code here...

.clean-post: .clean-impl
# Add your post 'clean' code here...


# clobber
clobber: .clobber-post

.clobber-pre:
# Add your pre 'clobber' code here...

.clobber-post: .clobber-impl
# Add your post 'clobber' code here...


# all
all: .all-post

.all-pre:
# Add your pre 'all' code here...

.all-post: .all-impl
# Add your post 'all' code here...


# build tests
build-tests: .build-tests-post

.build-tests-pre:
# Add your pre 'build-tests' code here...

.build-tests-post: .build-tests-impl
# Add your post 'build-tests' code here...


# run tests
test: .test-post

.test-pre:
# Add your pre 'test' code here...
	@if test ! -d testresults;    then $(MKDIR) -p  testresults; fi

.test-post: .test-impl
# Add your post 'test' code here...


# help
help: .help-post

.help-pre:
# Add your pre 'help' code here...

.help-post: .help-impl
# Add your post 'help' code here...



# include project implementation makefile
include nbproject/Makefile-impl.mk

# include project make variables
include nbproject/Makefile-variables.mk

