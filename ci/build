#!/usr/bin/env bash

set -e
set -o pipefail

SSH_USER_HOST=xkarabo@exflserv05
SSH_KARABO_DIR=/var/www/html/karabo
SSH_PREFIX=$SSH_USER_HOST:$SSH_KARABO_DIR
CURL_PREFIX=http://exflserv05.desy.de/karabo
LATEST_TAG=latest_build
NIGHTLY_TAG=Nightly

__check_existence() {
    local status=$(curl --silent --head -r 0-0 "$1" | head -n 1)
    local fileNotFound=$(echo $status | grep 404)
    if [ -z "$fileNotFound" -a "$REL_TAG" != "Nightly" ]; then
        echo "That build exists already!"
        exit 1
    fi
}

__release_build() {
    case "$2" in
        nightly)
            export REL_TAG=$NIGHTLY_TAG
            export FRAMEWORK_DEST_DIR=karaboFramework/nightly
            export GUI_DEST_DIR=$FRAMEWORK_DEST_DIR
            ;;
        release)
            export REL_TAG=$CI_COMMIT_REF_NAME
            export FRAMEWORK_DEST_DIR=karaboFramework/tags/$REL_TAG
            export FRAMEWORK_LATEST_DIR=karaboFramework/tags/$LATEST_TAG
            export GUI_DEST_DIR=karaboGui
            ;;
        *) echo "unknown job type: $2" ;;
    esac

    case "$1" in
        miniconda)
            source ./ci/utils/enable_internet.sh
            source ./ci/miniconda/build.sh
            source ./ci/miniconda/deploy.sh
            source ./ci/utils/disable_internet.sh
            ;;
        ubuntu*|centos*)
            export REL_OS_NAME=$(lsb_release -is)
            export REL_OS_VERS_LONG=$(lsb_release -rs | sed -r "s/^([0-9]+).*/\1/")
            export REL_ARTIFACT_NAME=karabo-$REL_TAG-Release-$REL_OS_NAME-$REL_OS_VERS_LONG-x86_64.sh
            export REL_LATEST_NAME=karabo-$LATEST_TAG-Release-$REL_OS_NAME-$REL_OS_VERS_LONG-x86_64.sh
            export REL_ARTIFACT_DEST_PATH=$FRAMEWORK_DEST_DIR/$REL_ARTIFACT_NAME
            export REL_ARTIFACT_LATEST_PATH=$FRAMEWORK_LATEST_DIR/$REL_LATEST_NAME
            __check_existence $CURL_PREFIX/$FRAMEWORK_DEST_DIR/$REL_ARTIFACT_NAME
            bash ./auto_build_all.sh Release --bundle
            mv package/Release/$REL_OS_NAME/$REL_OS_VERS_LONG/x86_64/karabo-*.sh $REL_ARTIFACT_NAME
            sshpass -p "$XKARABO_PWD" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $SSH_USER_HOST "mkdir -p $SSH_KARABO_DIR/$FRAMEWORK_DEST_DIR"
            sshpass -p "$XKARABO_PWD" scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $REL_ARTIFACT_NAME $SSH_PREFIX/$FRAMEWORK_DEST_DIR
            ;;
        *) echo "unknown target OS: $1" ;;
    esac

    if [ "$REL_TAG" != "$NIGHTLY_TAG" ]; then
        sshpass -p "$XKARABO_PWD" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $SSH_USER_HOST "ln -fs $SSH_KARABO_DIR/$REL_ARTIFACT_DEST_PATH $SSH_KARABO_DIR/$REL_ARTIFACT_LATEST_PATH "
    fi
}

__deps_build() {
    pushd extern
    export DEPS_BASE_NAME=$(lsb_release -is)-$(lsb_release -rs | sed -r "s/^([0-9]+).*/\1/")
    export DEPS_DIR_ABS_PATH=$(pwd -P)/$DEPS_BASE_NAME
    bash build.sh -q $DEPS_BASE_NAME CI
    $DEPS_BASE_NAME/bin/python3 ./builder_path_replace.py --fix-links $DEPS_BASE_NAME/bin $DEPS_DIR_ABS_PATH __KARABO_CI_PATH__
    $DEPS_BASE_NAME/bin/python3 ./builder_path_replace.py $DEPS_BASE_NAME/lib $DEPS_DIR_ABS_PATH __KARABO_CI_PATH__
    bash build.sh -p $DEPS_BASE_NAME CI

    case "$1" in
        build)
            sshpass -p "$XKARABO_PWD" scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $DEPS_BASE_NAME*.tar.gz $SSH_PREFIX/karaboDevelopmentDeps/
            ;;
        tests)
            mv $DEPS_BASE_NAME*.tar.gz $DEPS_BASE_NAME-$CI_COMMIT_REF_SLUG.tar.gz
            sshpass -p "$XKARABO_PWD" scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $DEPS_BASE_NAME-$CI_COMMIT_REF_SLUG.tar.gz $SSH_PREFIX/karaboDevelopmentDeps/
            ;;
        *) echo "unknown job type: $1" ;;
    esac
    popd
}


echo "Start building job: {$1}"

JOB_SCOPE=$(echo $1 | cut -f1 -d' ')
JOB_TYPE=$(echo $1 | cut -f2 -d' ')
TARGET_OS=$(echo $1 | cut -f3 -d' ')

case "$JOB_SCOPE" in
    release) __release_build $TARGET_OS $JOB_SCOPE ;;
    nightly) __release_build $TARGET_OS $JOB_SCOPE ;;
    deps) __deps_build $JOB_TYPE ;;
    *) echo "unknow job scope: $JOB_SCOPE" ;;
esac
