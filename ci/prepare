__enable_gcc7() {
    # for the Centos7 build
    DIST_MAJOR=$(echo $LSB_RELEASE_VERSION | sed -r "s/^([0-9]+).*/\1/")
    if [[ $1 = "CentOS" && $DIST_MAJOR = "7" ]]; then
        source /opt/rh/devtoolset-7/enable
    fi
}

__lang_setting() {
    case "$1" in
        CentOS|AlmaLinux|Redhat)
            localedef -c -i en_US -f UTF-8 en_US.utf8
            export LANG=en_US.UTF-8
            __enable_gcc7 $1
            ;;
        Ubuntu)
            locale-gen en_US.UTF-8
            update-locale LANG=en_US.UTF-8
            ;;
        Debian)
            export DEBIAN_FRONTEND=noninteractive
            echo "en_US.UTF-8 UTF-8" > /etc/locale.gen
            locale-gen
            ;;
        *) echo "unknown target os for lang_setting: $1" ;;
    esac
}


XVFB=/usr/bin/Xvfb
XVFB_DISP=:99.0
XVFB_ARGS="$XVFB_DISP -screen 0 1024x768x24 -ac"

__start_Xvfb() {
    case "$1" in
        CentOS|AlmaLinux)
            export DISPLAY=$XVFB_DISP
            $XVFB $XVFB_ARGS &
            ;;
        Ubuntu|Debian)
            export DISPLAY=$XVFB_DISP
            start-stop-daemon --start -b -x $XVFB -- $XVFB_ARGS
            ;;
        *) echo "unknown target os for xvfb: $1" ;;
    esac
}

echo "Start to prepare environment for job: {$1}"

JOB_SCOPE=$(echo $1 | cut -f1 -d' ')
JOB_TYPE=$(echo $1 | cut -f2 -d' ')
JOB_TYPE=${JOB_TYPE//:}
TARGET_OS=$(echo $1 | cut -f3 -d' ')
TARGET_OS=${TARGET_OS//[}
TARGET_OS=${TARGET_OS//]}

if [[ $TARGET_OS == "miniconda-osx64" ]]; then
    return 0
fi

REL_OS_NAME=$LSB_RELEASE_DIST
__lang_setting $REL_OS_NAME
