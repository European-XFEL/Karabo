.build_template: &build
  script:
    - source ci/prepare "$CI_BUILD_NAME"
    - source ci/build "$CI_BUILD_NAME"

.test_template: &test
  services:
    - name: europeanxfel/existdb:2.2
      alias: existdb_host
    - name: influxdb:1.7.8
      alias: influxdb_host
  variables:
    INFLUXDB_DB: "InfluxLogTest"
    INFLUXDB_HTTP_AUTH_ENABLED: "true"
    INFLUXDB_ADMIN_USER: "infadm"
    INFLUXDB_ADMIN_PASSWORD: "admpwd"
    INFLUXDB_USER: "infusr"
    INFLUXDB_USER_PASSWORD: "usrpwd"
  script:
    - source ci/prepare "$CI_BUILD_NAME"
    - source ci/test "$CI_BUILD_NAME"
  artifacts:
    when: always
    reports:
      junit: junitoutput.xml
  
.release_build: &release-build
  <<: *build
  only:
    - /^(\d+\.)(\d+\.)(\d+)((a|b|rc|\.)\d+)?$/
  except:
    - branches
    - schedules

.release_build_conda: &release-build-conda
  script:
    - python ci/miniconda pack karabogui -D conda-recipes --clean --upload-env -E karaboEnvironments --upload-to-mirror -P $CONDA_CHANNEL_PATH -C $CONDA_CHANNEL_PATH/mirror --index-mirror
  only:
    - /^(\d+\.)(\d+\.)(\d+)((rc|\.)\d+)?$/
  except:
    - branches
    - schedules

.prerelease_build_conda: &prerelease-build-conda
  script:
    - python ci/miniconda pack karabogui -D conda-recipes --clean --upload-env -E karaboEnvironments --upload-to-mirror -P $CONDA_CHANNEL_PATH/nightly -C $CONDA_CHANNEL_PATH/mirror --index-mirror
  only:
    - /^(\d+\.)(\d+\.)(\d+)(a|b)(\d+)$/
  except:
    - branches
    - schedules

.nightly_build_conda: &nightly-build-conda
  script:
    - python ci/miniconda pack karabogui -D conda-recipes --clean --upload-env -E karaboEnvironments --upload-to-mirror -P $CONDA_CHANNEL_PATH/nightly -C $CONDA_CHANNEL_PATH/mirror --index-mirror
  only:
    - schedules

.nightly_build: &nightly-build
  <<: *build
  only:
    - schedules

.deps_build: &deps-build
  <<: *build
  only:
    - /^deps-.+$/
  except:
    - branches
    - schedules

.integration_tests: &integration-tests
  <<: *test
  only:
    - master
    - /^(\d+\.)(\d+\.)(X-hotfix)$/
  except:
    - schedules

.unit_tests: &unit-tests
  <<: *test
  only:
    - branches
  except:
    - master
    - schedules
    - /^deps-mr-.+$/

.unit_tests_conda: &unit-tests-conda
  script:
    - python ci/miniconda pack karabogui -D conda-recipes --clean --test --skip-build
  only:
    - branches
  except:
    - master
    - schedules
    - /^deps-mr-.+$/
        
.deps_build_tests: &deps-build-tests
  script:
    - source ci/prepare "$CI_BUILD_NAME"
    - source ci/build "$CI_BUILD_NAME"
    - source ci/test "$CI_BUILD_NAME"
  only:
    - /^deps-mr-.+$/
  except:
    - master
    - schedules

.long_tests: &long-tests
  <<: *test
  only:
    - schedules


### Jobs

# static source code analysis with cppcheck
cppcheck-analysis:
  before_script:
    - echo '*** Install cppcheck ***'
    # Pro tempore solution (Ubuntu-18-only): cppcheck could go to container
    - export http_proxy="http://exflwgs06.desy.de:3128/"
    - export https_proxy="http://exflwgs06.desy.de:3128/"
    - apt-get update
    - apt-get install -y cppcheck
    - unset http_proxy
    - unset https_proxy
  image: europeanxfel/karabo-ci:ubuntu-18
  allow_failure: true
  script:
    - cppcheck --error-exitcode=0 --output-file=cppcheck_performance_report.txt --enable=performance --force $CI_PROJECT_DIR/src/karabo
    - cppcheck --error-exitcode=0 --output-file=cppcheck_style_report.txt --enable=style --force $CI_PROJECT_DIR/src/karabo
    - cppcheck --error-exitcode=0 --output-file=cppcheck_warning_report.txt --enable=warning --force $CI_PROJECT_DIR/src/karabo
  only:
    - merge_requests
  artifacts:
    name: "${CI_JOB_NAME}-${CI_COMMIT_REF_SLUG}"
    when: always
    paths:
      - cppcheck_*_report.txt

# release build

release build centos8:
  image: europeanxfel/karabo-ci:centos-8
  <<: *release-build

release build centos7:
  image: europeanxfel/karabo-ci:centos-7gcc7
  <<: *release-build

release build ubuntu20:
  image: europeanxfel/karabo-ci:ubuntu-20
  <<: *release-build  
  
release build ubuntu18:
  image: europeanxfel/karabo-ci:ubuntu-18
  <<: *release-build

release build ubuntu16:
  image: europeanxfel/karabo-ci:ubuntu-16
  <<: *release-build

release build miniconda:
  image: europeanxfel/karabo-ci:miniconda-3
  <<: *release-build-conda
  
release build miniconda-osx64:
  before_script:
    - ci/miniconda/cleanup.sh
  tags:
    - macos
  <<: *release-build-conda

release build miniconda-win64:
  before_script:
    - ci/miniconda/cleanup.cmd
  tags:
    - Win10
  <<: *release-build-conda

# prerelease build for conda

prerelease build miniconda:
  image: europeanxfel/karabo-ci:miniconda-3
  <<: *prerelease-build-conda

prerelease build miniconda-osx64:
  before_script:
    - ci/miniconda/cleanup.sh
  tags:
    - macos
  <<: *prerelease-build-conda

prerelease build miniconda-win64:
  before_script:
    - ci/miniconda/cleanup.cmd
  tags:
    - Win10
  <<: *prerelease-build-conda

# nightly release build

nightly build centos8:
  image: europeanxfel/karabo-ci:centos-8
  <<: *nightly-build

nightly build centos7:
  image: europeanxfel/karabo-ci:centos-7gcc7
  <<: *nightly-build

nightly build ubuntu20:
  image: europeanxfel/karabo-ci:ubuntu-20
  <<: *nightly-build  
  
nightly build ubuntu18:
  image: europeanxfel/karabo-ci:ubuntu-18
  <<: *nightly-build

nightly build ubuntu16:
  image: europeanxfel/karabo-ci:ubuntu-16
  <<: *nightly-build

nightly build miniconda-osx64:
  before_script:
    - ci/miniconda/cleanup.sh
  tags:
    - macos
  <<: *nightly-build-conda
  
nightly build miniconda-win64:
  before_script:
    - ci/miniconda/cleanup.cmd
  tags:
    - Win10
  <<: *nightly-build-conda
          
nightly build miniconda:
  image: europeanxfel/karabo-ci:miniconda-3
  <<: *nightly-build-conda

# Dependencies build

deps build centos8:
  image: europeanxfel/karabo-ci:centos-8
  <<: *deps-build

deps build centos7:
  image: europeanxfel/karabo-ci:centos-7gcc7
  <<: *deps-build

deps build ubuntu20:
  image: europeanxfel/karabo-ci:ubuntu-20
  <<: *deps-build  
  
deps build ubuntu18:
  image: europeanxfel/karabo-ci:ubuntu-18
  <<: *deps-build

deps build ubuntu16:
  image: europeanxfel/karabo-ci:ubuntu-16
  <<: *deps-build

# Dependencies build tests

deps tests centos8:
  image: europeanxfel/karabo-ci:centos-8
  <<: *deps-build-tests

deps tests centos7:
  image: europeanxfel/karabo-ci:centos-7gcc7
  <<: *deps-build-tests

deps tests ubuntu20:
  image: europeanxfel/karabo-ci:ubuntu-20
  <<: *deps-build-tests
  
deps tests ubuntu18:
  image: europeanxfel/karabo-ci:ubuntu-18
  <<: *deps-build-tests

deps tests ubuntu16:
  image: europeanxfel/karabo-ci:ubuntu-16
  <<: *deps-build-tests

# MR test builds

#unit tests centos8:
#  image: europeanxfel/karabo-ci:centos-8
#  <<: *unit-tests

unit tests centos7:
  image: europeanxfel/karabo-ci:centos-7gcc7
  <<: *unit-tests

unit tests ubuntu20:
  image: europeanxfel/karabo-ci:ubuntu-20
  <<: *unit-tests

#unit tests ubuntu18:
#  image: europeanxfel/karabo-ci:ubuntu-18
#  <<: *unit-tests
    
unit tests ubuntu16:
  image: europeanxfel/karabo-ci:ubuntu-16
  <<: *unit-tests

unit tests miniconda:
  image: europeanxfel/karabo-ci:miniconda-3
  <<: *unit-tests-conda

unit tests miniconda-osx64:
  before_script:
    - ci/miniconda/cleanup.sh
  tags:
    - macos
  <<: *unit-tests-conda

unit tests miniconda-win64:
  before_script:
    - ci/miniconda/cleanup.cmd
  tags:
    - Win10
  <<: *unit-tests-conda

unit tests miniconda-cmake:
  image: europeanxfel/karabo-ci:miniconda-3
  <<: *unit-tests

# Post-merge integration test builds

integration tests centos8:
  image: europeanxfel/karabo-ci:centos-8
  <<: *integration-tests

integration tests centos7:
  image: europeanxfel/karabo-ci:centos-7gcc7
  <<: *integration-tests

integration tests ubuntu20:
  image: europeanxfel/karabo-ci:ubuntu-20
  <<: *integration-tests
  
integration tests ubuntu18:
  image: europeanxfel/karabo-ci:ubuntu-18
  <<: *integration-tests
    
integration tests ubuntu16:
  image: europeanxfel/karabo-ci:ubuntu-16
  <<: *integration-tests

# Scheduled coverage tests

coverage tests centos7:
  image: europeanxfel/karabo-ci:centos-7gcc7
  <<: *test
  only:
    - schedules

# Scheduled long tests

long tests centos8:
  image: europeanxfel/karabo-ci:centos-8
  <<: *long-tests

long tests centos7:
  image: europeanxfel/karabo-ci:centos-7gcc7
  <<: *long-tests

long tests ubuntu20:
  image: europeanxfel/karabo-ci:ubuntu-20
  <<: *long-tests

long tests ubuntu18:
  image: europeanxfel/karabo-ci:ubuntu-18
  <<: *long-tests
    
long tests ubuntu16:
  image: europeanxfel/karabo-ci:ubuntu-16
  <<: *long-tests

