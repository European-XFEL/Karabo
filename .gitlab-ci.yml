stages:
  - lint
  - build
  - test

.build_template: &build
  stage: build
  script:
    - source ci/prepare "$CI_BUILD_NAME"
    - source ci/build "$CI_BUILD_NAME"

.artifact_template: &artifacts-spec
  artifacts:
    name: "${CI_JOB_NAME}-${CI_COMMIT_REF_SLUG}"
    when: always
    paths:
      - junit*.xml
      - build_debug/junit*.xml
      - coverage.xml
    reports:
      junit:
        - junit*.xml
        - build_debug/junit*.xml
      cobertura:
        - coverage.xml

.services_template: &services_template
  services:
    - name: europeanxfel/existdb:2.2
      alias: existdb_host
    - name: influxdb:1.7.8
      alias: influxdb_host
  variables:
    INFLUXDB_DB: "InfluxLogTest"
    INFLUXDB_HTTP_AUTH_ENABLED: "true"
    INFLUXDB_ADMIN_USER: "infadm"
    INFLUXDB_ADMIN_PASSWORD: "admpwd"
    INFLUXDB_USER: "infusr"
    INFLUXDB_USER_PASSWORD: "usrpwd"

.test_template: &test
  stage: test
  <<: *services_template
  script:
    - source ci/prepare "$CI_BUILD_NAME"
    - source ci/test "$CI_BUILD_NAME"
  <<: *artifacts-spec

# # TODO: remove this after reporting support for ctest is working
# .test_template_miniconda_cmake: &test-miniconda-cmake
#   stage: test
#   <<: *services_template
#   script:
#     - source ci/prepare "$CI_BUILD_NAME"
#     - source ci/test "$CI_BUILD_NAME"

.release_build: &release-build
  <<: *build
  only:
    - /^(\d+\.)(\d+\.)(\d+)$/
  except:
    - branches
    - schedules

.prerelease_build: &prerelease-build
  <<: *build
  only:
    - /^(\d+\.)(\d+\.)(\d+)((a|b|rc|\.)\d+)$/
  except:
    - branches
    - schedules

.release_build_conda: &release-build-conda
  stage: build
  script:
    - >
      python ci/miniconda pack karabogui
      -D conda-recipes
      --ci --clean --upload-env
      -E karaboEnvironments
      --upload-to-mirror
      -P $CONDA_CHANNEL_PATH
      -C $CONDA_CHANNEL_PATH/mirror
      --index-mirror
  only:
    - /^(\d+\.)(\d+\.)(\d+)$/
  except:
    - branches
    - schedules

.prerelease_build_conda: &prerelease-build-conda
  stage: build
  script:
    - >
      python ci/miniconda pack karabogui
      -D conda-recipes
      --ci --clean --upload-env
      -E karaboEnvironments
      --upload-to-mirror
      -P $CONDA_CHANNEL_PATH/nightly
      -C $CONDA_CHANNEL_PATH/mirror
      --index-mirror
  only:
    - /^(\d+\.)(\d+\.)(\d+)(a|b|rc)(\d+)$/
  except:
    - branches
    - schedules

.nightly_build_conda: &nightly-build-conda
  stage: build
  script:
    - >
      python ci/miniconda pack karabogui
      -D conda-recipes
      --ci --clean --upload-env
      -E karaboEnvironments
      --upload-to-mirror
      --nightly
      -P $CONDA_CHANNEL_PATH/nightly
      -C $CONDA_CHANNEL_PATH/mirror
      --index-mirror
  only:
    - schedules

.nightly_build: &nightly-build
  <<: *build
  only:
    - schedules

.deps_build: &deps-build
  <<: *build
  only:
    refs:
      - /^deps-(add|update|remove)-.+$/
      - merge_requests
    changes:
      - "extern/**/*"
  except:
    - schedules

.integration_tests: &integration-tests
  <<: *test
  only:
    refs:
      - /^(master)$/ # the changes check will default to true
      - /^(\d+\.)(\d+\.)(X-hotfix)$/ # the changes check will default to true
      - merge_requests
    changes:
      - "src/karabo/devices/**/*"
      - "src/integrationTests/**/*"
      - "src/pythonKarabo/karabo/integration_tests/**/*"
      - "src/pythonKarabo/karabo/bound_devices/**/*"
  except:
    - schedules

.unit_tests: &unit-tests
  <<: *test
  only:
    refs:
      - merge_requests
    changes:
      - "build/netbeans/**/*"
      - "src/karabo/**/*"
      - "src/pythonKarabo/**/*"
      - "src/karathon/**/*"
      - "conda-recipes/karabo-cpp/**/*"
  except:
    refs:
      - /^(master)$/ # the changes check will default to true
      - /^(\d+\.)(\d+\.)(X-hotfix)$/ # the changes check will default to true
      - schedules
    changes:
      - "extern/**/*"

# .unit_tests_miniconda_cmake: &unit-tests-miniconda-cmake
#   <<: *test-miniconda-cmake
#   only:
#     refs:
#       - merge_requests
#     changes:
#       - "src/karabo/**/*"
#       - "src/karathon/**/*"
#       - "conda-recipes/karabo-cpp/**/*"
#   except:
#     refs:
#       - /^(master)$/  # the changes check will default to true
#       - /^(\d+\.)(\d+\.)(X-hotfix)$/ # the changes check will default to true
#       - schedules
#     changes:
#       - "extern/**/*"

.unit_tests_conda: &unit-tests-conda
  script:
    - >
      python ci/miniconda pack karabogui
      -D conda-recipes
      --ci --clean --test
      --skip-build
  only:
    refs:
      - merge_requests
    changes:
      - "src/pythonGui/**/*"
      - "src/pythonKarabo/karabo/native/**/*"
      - "src/pythonKarabo/karabo/common/**/*"
      - "conda-recipes/karabo-native/**/*"
      - "conda-recipes/karabogui/**/*"
  <<: *artifacts-spec

.deps_tests: &deps-tests
  <<: *test
  only:
    refs:
      - merge_requests
    changes:
      - "extern/**/*"

.long_tests: &long-tests
  <<: *test
  only:
    refs:
      - schedules
      - merge_requests
    changes:
      - "src/cppLongTests/**/*"

### Jobs

# static source code analysis
lint:
  stage: lint
  image: europeanxfel/karabo-ci:miniconda-3lint
  script:
    - source ci/lint "$CI_BUILD_NAME"
  only:
    refs:
      - merge_requests
    changes:
      - "src/**/*"

# release build

release build centos7:
  image: europeanxfel/karabo-ci:centos-7gcc7
  <<: *release-build

release build ubuntu20:
  image: europeanxfel/karabo-ci:ubuntu-20
  <<: *release-build

release build ubuntu18:
  image: europeanxfel/karabo-ci:ubuntu-18
  <<: *release-build

release build miniconda:
  image: europeanxfel/karabo-ci:miniconda-3
  <<: *release-build-conda

release build miniconda-osx64:
  before_script:
    - ci/miniconda/cleanup.sh
  tags:
    - macos
  <<: *release-build-conda

release build miniconda-win64:
  before_script:
    - ci/miniconda/cleanup.cmd
  tags:
    - Win10
  <<: *release-build-conda

# prerelease build

prerelease build centos7:
  image: europeanxfel/karabo-ci:centos-7gcc7
  <<: *prerelease-build

prerelease build ubuntu20:
  image: europeanxfel/karabo-ci:ubuntu-20
  <<: *prerelease-build

prerelease build ubuntu18:
  image: europeanxfel/karabo-ci:ubuntu-18
  <<: *prerelease-build

prerelease build miniconda:
  image: europeanxfel/karabo-ci:miniconda-3
  <<: *prerelease-build-conda

prerelease build miniconda-osx64:
  before_script:
    - ci/miniconda/cleanup.sh
  tags:
    - macos
  <<: *prerelease-build-conda

prerelease build miniconda-win64:
  before_script:
    - ci/miniconda/cleanup.cmd
  tags:
    - Win10
  <<: *prerelease-build-conda

# nightly release build

nightly build centos7:
  image: europeanxfel/karabo-ci:centos-7gcc7
  <<: *nightly-build

nightly build ubuntu20:
  image: europeanxfel/karabo-ci:ubuntu-20
  <<: *nightly-build

nightly build ubuntu18:
  image: europeanxfel/karabo-ci:ubuntu-18
  <<: *nightly-build

nightly build miniconda-osx64:
  before_script:
    - ci/miniconda/cleanup.sh
  tags:
    - macos
  <<: *nightly-build-conda

nightly build miniconda-win64:
  before_script:
    - ci/miniconda/cleanup.cmd
  tags:
    - Win10
  <<: *nightly-build-conda

nightly build miniconda:
  image: europeanxfel/karabo-ci:miniconda-3
  <<: *nightly-build-conda

# Dependencies build

deps build centos7:
  image: europeanxfel/karabo-ci:centos-7gcc7
  <<: *deps-build

deps build ubuntu20:
  image: europeanxfel/karabo-ci:ubuntu-20
  <<: *deps-build

deps build ubuntu18:
  image: europeanxfel/karabo-ci:ubuntu-18
  <<: *deps-build

# Dependencies build tests

deps tests centos7:
  image: europeanxfel/karabo-ci:centos-7gcc7
  <<: *deps-tests

deps tests ubuntu20:
  image: europeanxfel/karabo-ci:ubuntu-20
  <<: *deps-tests

deps tests ubuntu18:
  image: europeanxfel/karabo-ci:ubuntu-18
  <<: *deps-tests

# MR test builds

unit tests centos7:
  image: europeanxfel/karabo-ci:centos-7gcc7
  <<: *unit-tests

unit tests ubuntu20:
  image: europeanxfel/karabo-ci:ubuntu-20
  <<: *unit-tests

unit tests ubuntu18:
  image: europeanxfel/karabo-ci:ubuntu-18
  <<: *unit-tests

unit tests miniconda:
  image: europeanxfel/karabo-ci:miniconda-3
  <<: *unit-tests-conda

unit tests miniconda-osx64:
  before_script:
    - ci/miniconda/cleanup.sh
  tags:
    - macos
  <<: *unit-tests-conda

unit tests miniconda-win64:
  before_script:
    - ci/miniconda/cleanup.cmd
  tags:
    - Win10
  <<: *unit-tests-conda

# unit tests miniconda-cmake:
#   image: europeanxfel/karabo-ci:miniconda-3
#   <<: *unit-tests

# Post-merge integration test builds

integration tests centos7:
  image: europeanxfel/karabo-ci:centos-7gcc7
  <<: *integration-tests

integration tests ubuntu20:
  image: europeanxfel/karabo-ci:ubuntu-20
  <<: *integration-tests

integration tests ubuntu18:
  image: europeanxfel/karabo-ci:ubuntu-18
  <<: *integration-tests

# Scheduled coverage tests

coverage tests centos7:
  image: europeanxfel/karabo-ci:centos-7gcc7
  <<: *test
  only:
    - schedules

# Scheduled long tests

long tests centos7:
  image: europeanxfel/karabo-ci:centos-7gcc7
  <<: *long-tests

long tests ubuntu20:
  image: europeanxfel/karabo-ci:ubuntu-20
  <<: *long-tests

long tests ubuntu18:
  image: europeanxfel/karabo-ci:ubuntu-18
  <<: *long-tests
