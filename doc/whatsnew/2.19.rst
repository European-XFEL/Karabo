..
  Copyright (C) European XFEL GmbH Schenefeld. All rights reserved.

***************************
What's New in Karabo 2.19.0
***************************

Release date will be in the beginning of November 2023.

This release contains a major boost update to **1.82** (was 1.68).
Additionally, several updates for python packages have been done::

    atomicwrites==1.4.1, was 1.4.0
    backports-abc==0.5, was 0.4
    backports.ssl-match-hostname==3.7.0.1, was 3.5.0.1
    chardet==5.1.0, was 3.0.4
    Cython==0.29.35, was 0.29.24
    dill==0.3.6, was 0.2.5
    ecdsa==0.18.0, was 0.11
    flake8==6.0.0, was 3.8.4
    flit==3.9.0, was 3.8.0
    httplib2==0.22.0, was 0.9.1
    importlib-metadata==6.7.0, was 3.3.0
    matplotlib==3.7.1, was 2.1.1
    msgpack-numpy==0.4.8, was 0.4.3
    nose==1.3.7, was 1.3.0
    parse==1.19.1, was 1.6.3
    peewee==3.16.2, was 3.14.0
    pg8000==1.29.8, was 1.21.2
    platformdirs==3.8.0, was 3.5.1
    psutil==5.9.5, was 4.3.1
    pyusb==1.2.1, was 1.0.0b1
    tabulate==0.9.0, was 0.8.9
    tzlocal==5.0.1, was 1.1.1
    numpy==1.22.4, was 1.21.4
    scipy==1.7.3, was 1.6.3

Packages that have been **removed**: h5py

Packages that have been **added**:

    pytz==2020.5 (before 2.18.0 was 2013.9; missing in 2.18.0) 


Summary â€“ Release highlights
++++++++++++++++++++++++++++



Migration Guidelines
++++++++++++++++++++

General remarks:

- A lot of device repositories (python) make use of the *isort* package.
This package orders the imports. Please activate a karabo installation and type *isort .*
in the repository folder in case imports are not ordered according to CI failure.

1.
From 2.19.X onwards the namespace **middlelayer_api** has been removed.
The only supported namespaces for device developers to import from are: *karabo.middlelayer*, *karabo.bound*


.. code-block:: python

    from karabo.middlelayer_api.tests.eventloop import DeviceTest, async_tst
    # Imports moved, please use
    from karabo.middlelayer.testing import DeviceTest, async_tst


2.
Since March 2021, the `Injectable` class is not required anymore in device code
and has been deprecated. Finally, from 2.19.X onwards, the class is removed from karabo.


.. code-block:: python

    from karabo.middlelayer_api.injectable import Injectable

    class GATTPhysicalUnit(Injectable, Device):
        ...

    # Injectable is not required anymore and will throw, remove import and use

    class GATTPhysicalUnit(Device):
        ...


3.
Dependency upgrade: yaml -> use `yaml.safe_load` instead of `yaml.load`


.. code-block:: python

    # The following line will throw, yaml.load requires a kwarg `loader`
    data = yaml.load(file.read())

    # use
    data = yaml.safe_load(file.read())


4.
C++ Boost placeholders (e.g. ::_1) need to be explicitly declared, otherwise code is not compiling
To make the code working again, please add on top of the file

.. code-block:: C++

    using boost::placeholders::_1;
    using boost::placeholders::_2;

5.
`ImageData` *header* functionality has been **removed** from the Framework for both C++ and Bound.
Hence, code containing this functionality will throw or prevent compilation.


6.
`DetectorGeometry` has been removed from C++ and Bound due to non-use in operation. An import
will throw an exception.

7.
Use the `central CI template` (https://git.xfel.eu/Karabo/gitlabci)
C++ example: https://git.xfel.eu/karaboDevices/scanlabGalvo/-/merge_requests/37/diffs
Python example: https://git.xfel.eu/karaboDevices/vacuumSection/-/merge_requests/27/diffs

Please be aware that the central CI template utilizes pytest instead of nosetests. If your test file lacks the prefix 'test_', it will not be able to test the device. To resolve this issue, kindly rename your test files to include 'test_' in the name. For example, you can rename 'TestBeckhoffAssistant.py' to 'test_beckhoff_assistant.py'.

Breaking Changes
++++++++++++++++

- C++/Bound: The default value of the safeNDArray flag of the methods
  Device.writeChannel and OutputChannel.update have been switched back to true
  for safety.
  On the other hand the copyAllData flag of OutputChannel.write is ignored now
  and the method behaves as if previously the flag was false.


Detailed Merge-Log
++++++++++++++++++


MDL/Native core
===============


Bound/cpp core
==============


Graphical User Interface
========================


Core Devices
============
