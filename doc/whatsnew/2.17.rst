***************************
What's New in Karabo 2.17.0
***************************

Preliminary! Release scheduled for the 19.05.2023.

..
  Generate the Merge log with ``git log --merges --pretty=format:"- %s%b" N.(N-1).0..N.N.0rc(LAST RC) --reverse``

Summary â€“ Release highlights
++++++++++++++++++++++++++++

- MDL: New `Configurable` coroutine function `set_setter(h, only_changes=False)` provided. This is the analogon to `Configurable.set`, but calling
  the internal `setter` functions for the descriptors.

Features
++++++++

- `InstanceStatus` Widget can be added to the scene

Bugfixes
++++++++

- C++: Fixed data logger connection failure handling (Cherrypicked in 2.16.1)

Breaking Changes
++++++++++++++++


Change of behaviour
+++++++++++++++++++

- GUI: By default the property alarm color for devices in the `Configurator` is now disabled. This is intended as the
  `Configurator` can only evaluate static alarms defined by the device schema. To view property specific alarms, please use the alarm panel.
  To turn this feature back on, please use the *Application Configuration dialog** accessible via the menu bar of the client.
- GUI: Device scene links cannot be created from the device property `availableScenes` anymore. They become a scene tool widget and
  have to be created from the scene panel toolbar or via dragging a device onto a scene.
  Device scene links don't trigger itself monitoring of a device.
- MDL: Log-events do not generate a broker message anymore. For logging messages, please retrieve the last log messages on demand via the karabo gui client
       interface or view the local log file.
- MDL: Provide set_setter on Configurable
- GUI Server: Remove 'requestFromSlot' and update integration tests.
- C++: Add deviceId to exception message of Device::get

Detailed Merge-Log
++++++++++++++++++

Graphical User Interface
========================

- GUI: Prevent VectorBool to be considered for TableVectorButton
- GUI: Reconfigurable tables become state aware
- GUI: Flake base binding controller
- GUI: Better handling of Bool editing in the List Edit Dialog.
- GUI: Provide simple background task engine
- GUI: Provide toolbar in Configuration Editor when in cinema mode
- GUI: Add validator again to list regex edit
- GUI: Provide option to retrieve default scene on TableStringButton
- GUI: Toggle configurator property alarm coloring
- GUI: Add logger to karabogui api
- GUI: Move test out of unittest framework.
- GUI: Put index ref protection in filter model
- GUI: Use native filtering in Configurator filter model
- GUI: Improve image node validation
- GUI: Allow to sort by time in project dialog
- GUI: Update dependencies for the GUI: Priority to external conda-forge
- GUI: Remove not required column in project view
- GUI: Use native recursive filtering in the navigation models
- GUI: Data type casting for config singleton
- GUI: Minor optimization on device filter model selection
- GUI: DeviceSceneLink becomes a SceneTool widget
- GUI: Add offline information to device scene link
- GUI: OK button should accept the KaraboMessageBox dialog.

MDL/Native core
===============

- Common: Cleanup scene link models
- MDL: Add create_instanceId to testing namespace and enhance
- MDL: Protect NoEventLoop from launching tasks when beingoing down
- MDL: Don't start the AsyncTimer again when the loop is closed, provide success feedback and is_running method
- MDL: Bulk update of prints via timer
- MDL: Provide slotGetConfigurationSlice to get single properties via a remote call
- MDL: Assignment.INTERNAL in sanitize_write_configuration
- MDL: Rely on instanceGone to remove Child of server
- MDL: Make sure macro instances destruct their print timer at the end
- MDL: Provide set_setter on Configurable
- MDL: Provide convenient async timer handling. They are always stopped and destroyed.
- ikarabo: Command lines don't have a logger
- MDL: Provide a test for loop equal None in timer destruction
- MDL: Deprecate and remove network logging
- NATIVE: Implement Enum helpers from Schema


Bound/cpp core
==============

- C++: Report ill-formed requestGeneric info back to GUI client
- Framework: Better message for no schema found while getting past config.
- C++/Bound: Add flag to avoid NDArray data copy even if pipeline queues
- C++: Allow Device::writeChannel to specify safeNDArray for OutputChannel::update
- C++: Add deviceId to exception message of Device::get
- C++: Properly construct and initialize DeviceClient
- C++: InfluxDataLogger to log vector Hash rejection in detail


Core Devices
============

- GUI Server: Remove 'requestFromSlot' and update integration tests.


Dependencies, Documentation and Tools
=====================================

- DEP: Update openmqc to version 5.1.4.1 (fix for compilation on GCC 11.3).
- CI: Add build and test jobs for Ubuntu22.
- DOC: fix MDL library description
- DOC: add a CI test for the documentation
- DOC: Document 2.16 release
- Documentation 2.16.X: Split Core Devices
- Add more highlights to doc 2.16
- DOC: 2.16 add feature and bugfixes section
- More documentation for 2.16.X
- DOCS: remove duplication for C++ in 2.16
- Start documenting 2.17
