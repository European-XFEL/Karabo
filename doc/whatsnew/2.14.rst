***************************
What's New in Karabo 2.14.0
***************************

This major Karabo release has an important dependency update: numpy and pint. The new ufunc protocol is utilized and a few functions are
currently not supported by pint. Please have a look in the breaking changes.

Summary â€“ Release highlights
++++++++++++++++++++++++++++

Several important python packages have been updated.

- numpy 1.15.4 -> 1.21.4
- pint 0.7.1 -> 0.17
- scipy 1.5.4 -> 1.6.3
- pyzmq 18.1.0 -> 22.3.0
- cython 0.29.21 -> 0.29.24

Breaking Changes
++++++++++++++++

- The following functions are not supported with KaraboValues: np.positive, np.divmod, np.heaviside, np.gcd, np.lcm, np.bitwise_and, np.bitwise_xor, np.bitwise_or, np.invert,
  np.left_shift, np.right_shift, np.logical_and, np.logical_or, np.logical_xor, np.logical_not, np.spacing
- Numpy.mean and numpy.std do not work anymore with ``QuantityValues`` that have a number (see examples).

Change of behaviour
+++++++++++++++++++

- TBD

Detailed Merge-Log
++++++++++++++++++

Bound/cpp core
==============

- TBD

MDL/Native core
===============

- TBD

Dependencies and deployment
===========================

- TBD

Documentation
=============

- TBD


Tests
=====

- TBD

Graphical User Interface
========================

- TBD


Examples (Numpy - KaraboValues)
===============================

.. code-block:: python

    def test_mean(self):
        # THIS DOES NOT WORK
        a = QuantityValue(3, "m", timestamp=self.t1)
        b = QuantityValue(1000, "mm", timestamp=self.t2)
        # Needs unit less values
        with self.assertRaises(ValueError):
            numpy.mean([a, b])

    def test_mean_no_dim(self):
        # THIS WORKS PARTIALLY
        a = QuantityValue(3, timestamp=self.t1)
        b = QuantityValue(1000, timestamp=self.t2)
        # unit less values works
        m = numpy.mean([a, b])
        self.assertEqual(m, 501.5)
        # We have a float now, no timestamp
        self.assertIsInstance(m, float)

    def test_mean_array(self):
        # THIS WORKS
        a = QuantityValue(numpy.array([1, 2, 3, 4]), timestamp=self.t1)
        m = numpy.mean(a)
        self.assertEqual(m, 2.5 * unit.dimensionless)
        self.assertEqual(m.timestamp, self.t1)

        b = QuantityValue(numpy.array([1, 2, 3, 4]), "m",
                          timestamp=self.t1)
        m = numpy.mean(b)
        self.assertEqual(m, 2.5 * unit.meter)
        self.assertEqual(m.timestamp, self.t1)