# This file is part of Karabo.
#
# http://www.karabo.eu
#
# Copyright (C) European XFEL GmbH Schenefeld. All rights reserved.
#
# Karabo is free software: you can redistribute it and/or modify it under
# the terms of the MPL-2 Mozilla Public License.
#
# You should have received a copy of the MPL-2 Public License along with
# Karabo. If not, see <https://www.mozilla.org/en-US/MPL/2.0/>.
#
# Karabo is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.
# [[[cog
# from setuptools_scm import get_version
# from os import path as op
# root = op.join(op.dirname(cog.inFile), op.pardir, op.pardir)
# root = op.abspath(root)
# version = get_version(root=root)
# project_root = root.replace('\\', '\\\\')
# cog.outl(f'{{% set version = "{version}" %}}')
# cog.outl(f'{{% set project_root = "{project_root}" %}}')
# ]]]
# [[[end]]]

package:
  name: karabogui
  version: {{ version }}

source:
  path: {{ project_root }}
  git_rev: {{ version }}

build:
  number: 0
  entry_points:
    - karabo-gui=karabogui.programs.gui_runner:main
    - panel-runner=karabogui.programs.panel_runner:main
    - karabo-cinema=karabogui.programs.cinema:main
    - karabo-concert=karabogui.programs.concert:main
    - karabo-theatre=karabogui.programs.theatre:main
    - karabo-update-extensions=karabogui.dialogs.update_dialog:main
  # This is needed to avoid removing egg files during packaging with setuptools
  preserve_egg_dir: True
  pin_depends: strict

requirements:
  # [[[cog
  # import cog
  # import json
  # import os
  # import subprocess
  # conda = os.environ.get('CONDA_EXE', 'conda')
  # output = subprocess.check_output([conda, 'env', 'export', '-n', 'karabogui', '--json'])
  # dependencies = [dep for dep in json.loads(output)['dependencies'] if isinstance(dep, str)]
  #
  # # Format build
  # cog.outl('build:')
  # required_build_pkgs = {
  #     'python': '3.12.*',
  #     'setuptools': '69.0.*',
  #     'setuptools_scm': '7.0.5'}
  # for dep in dependencies:
  #     name = dep.split('=')[0]
  #     if name in required_build_pkgs:
  #         required_build_pkgs.pop(name)
  #     cog.outl(f'  - {dep}')
  # for pkg, version in required_build_pkgs.items():
  #     cog.outl(f'  - {pkg}={version}')
  #
  # # Format run
  # cog.outl('run:')
  # for dep in dependencies:
  #     cog.outl(f'  - {dep}')
  # ]]]
  # [[[end]]]

test:
  imports:
    - karabogui
    - karabo.native
    - karabo.common
