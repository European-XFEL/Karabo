#
# Build configuration file for __CLASS_NAME__
#
# Author: <__EMAIL__>
# Date:    __DATE__
#

# This script will be sourced in bash context within the top installation script
# This means you can use bash functionality to your liking.
# Finally you need to run 'make package' to package and install your dependency.
# The general idea is to compile/install locally, if necessary fix RPATH in shared libraries, 
# create an installation package and then use it to install your dependency in final location
#
# Following variables are available from outside:
#
# KARABO          The location of the karaboFramework base directory
# KARABOVERSION   version of karabo used
# INSTALL_PREFIX  The location where this dependency will be installed to
# PYTHON          The python interpreter
# SITE_PACKAGES_DIR  python packages directory in krabo python installation
# LOCAL_SITE_PACKAGES_DIR  local installtion directory for python modules
#
# NUM_CORES       The number of cores availabe for a parallel build
# MACHINE       architecture (x86_64, i686)
# OS            system (Linux, Darwin)
# DISTRO_ID      distribution (Ubuntu, Scientific)
# DISTRO_RELEASE  distribution version (14.04, 6)
#
# DISTDIR        directory for local installation
# PACKAGEDIR     directory where installation package is created 
#
# Below you should define how to build and install your dependency locally in DISTDIR directory
# It should reflect the final layout in INSTALL_PREFIX (set to KARABO/extern) folder, for instance:
#    DISTDIR/lib/libmydep.so
#    DISTDIR/include/myheader.hh
# For shared libraries the are tools available for fixing RPATH within .so file:
#    $KARABO/extern/bin/patchelf
#    $KARABO/bin/.set_relative_rpath.py 
# Python dependency you may install in site-packages of karabo python installation
# In this case the local structure should look like
#    DISTDIR/LOCAL_SITE_PACKAGES_DIR/mymodule/mypyfiles.py ...
#
# After your dependency is locally installed, then the top installation script creates
# installation package (self-extracting shell script) in PACKAGEDIR and run it
# in order to install this dependency in INSTALL_PREFIX
#
# 
# Do whatever you want bash scripting below this line

# this is an example
# DIST,CONF,PLATFORM are equivalents of netbeans $(CND_DISTDIR), $(CONF) and $(CND_PLATFORM_$(CONF))
# and are available here to find resulting shared library
#mkdir -p $DISTDIR/lib
#mkdir -p $DISTDIR/include/mydep


#find $DIST/$CONF/$PLATFORM -maxdepth 1 -type f -name \*.so -exec cp {} $DISTDIR/lib \;
#cp src/*.hh $DISTDIR/include/mydep

