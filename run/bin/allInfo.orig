############################################################
# allInfo contains configuration definitions to manage 
# servers and applications used in a localhost device setup
#
# management scripts: 
#   1. allStart - to start karabo processes defined by the ALLINFO environmental
#                 allStart has a single optional parameter "-nox" which controls whether
#	       	  the processes are started as individual xterms or accumulated as background jobs
#   2. allStop  - to stop started processes
#   3. allCheck - to check the definitions used by test system scripts 
#                 this script is the only check made of the definitions used
#   5. allRestart - to restart any "missing" applicationsd
#                 a candidate to a missing application is the gui which was closed at
#                 the end of the last session with all other applications left running.
# 
# author: CY 18.12.2012, largely modified: BH 09.04.2015


##################
#  Broker Hosts  #
##################

# If you are using Karabo at home and run a local broker you can you use directly
#export KARABO_BROKER_HOSTS="localhost:7777"

# If you are only at the European XFEL GmbH you may use this settings
export KARABO_BROKER_HOSTS="exfl-broker:7777"

# This setting is the default, it will try the XFEL broker first and failover to a local if unsuccessful
#export KARABO_BROKER_HOSTS="exfl-broker:7777,localhost:7777"

#################
# Broker Topic  #
#################

# By default your username will become your topic name

# You may want to fix it using:

#export KARABO_BROKER_TOPIC=xbeam


##################################
# Kill Signal (used by allStop)  #
##################################

# Better don't touch

KARABO_KILL_SIGNAL=9


################
# Applications #
################

# Component definitions, currently 6 tokens per process
# 1. relative path of the starter filename (including the starter)
# 2. blank separated parameters to starter
# 3. delay, in seconds, before starting next process
# 4. number of scroll lines of xterm
# 5. if "yes" use the x11 display specified in XUSE environmental. To start applications on the
#    control host define XUSE to the main console ($ export XUSE=":0") and, provided your login account
#    is identical to the console's owner account, all applications with 9="yes" will be displayed there. 
#    Applications started in this way will remain alive when the session is closed. 
# Note: additional servers can be added by duplicating a server line and performing
# the necessary directory [definition 2] renaming (servers have unique directories)
# and providing a unique ALLINFO array index
KARABO_SERVERS="../servers"

###################
# Service Servers #
###################

# Better don't touch

logLevel=INFO
serverId=Karabo_CentralLoggingServer
ALLINFO[0]="$KARABO_SERVERS/centralLoggingServer/startCppServer:DeviceServer.serverId=$serverId DeviceServer.Logger.priority=$logLevel:0:1000:yes"


logLevel=INFO  
serverId=Karabo_GuiServer
port=44444
ALLINFO[1]="$KARABO_SERVERS/guiServer/startCppServer:DeviceServer.serverId=$serverId DeviceServer.Logger.priority=$logLevel DeviceServer.autoStart[0].GuiServerDevice.port=$port:0:1000:yes"

logLevel=INFO
serverId=Karabo_DataLoggerServer
ALLINFO[2]="$KARABO_SERVERS/dataLoggerServer/startCppServer:DeviceServer.serverId=$serverId DeviceServer.Logger.priority=$logLevel:0:1000:yes"

logLevel=INFO
serverId=Karabo_DLManagerServer
ALLINFO[3]="$KARABO_SERVERS/dataLoggerManagerServer/startCppServer:DeviceServer.serverId=$serverId DeviceServer.Logger.priority=$logLevel:0:1000:yes"

logLevel=INFO
serverId=Karabo_ProjectServer
ALLINFO[4]="$KARABO_SERVERS/projectServer/startCppServer:DeviceServer.Logger.priority=$logLevel DeviceServer.serverId=$serverId:0:1000:yes"

logLevel=INFO
serverId=Karabo_MacroServer
ALLINFO[5]="$KARABO_SERVERS/macroServer/startPythonServerApi2:DeviceServer.serverId=$serverId:0:1000:yes"

logLevel=INFO
serverId=Karabo_AlarmServer
ALLINFO[6]="$KARABO_SERVERS/alarmServer/startCppServer:DeviceServer.Logger.priority=$logLevel DeviceServer.serverId=$serverId:0:1000:yes"


#####################
# Device Server C++ #
#####################

serverId=Karabo_CppServer
logLevel=INFO

ALLINFO[10]="$KARABO_SERVERS/cppDeviceServer/startCppServer:DeviceServer.serverId=$serverId DeviceServer.Logger.priority=$logLevel:0:1000:yes"


########################
# Device Server Python #
########################

serverId=Karabo_PythonServer
logLevel=INFO

ALLINFO[20]="$KARABO_SERVERS/pythonDeviceServer/startPythonServerApi1:DeviceServer.serverId=$serverId DeviceServer.Logger.priority=$logLevel:0:1000:yes"

#############################
# Device Server Middlelayer #
#############################

# logLevel configuration currently not supported for middlelayer
serverId=Karabo_MiddlelayerServer
ALLINFO[30]="$KARABO_SERVERS/middlelayerServer/startMiddlelayerServer:DeviceServer.serverId=$serverId:0:1000:yes"


###################
# User Interfaces #
###################

ALLINFO[40]="./startGui::0:1000:no"
