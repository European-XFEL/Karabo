############################################################
# allInfo contains configuration definitions to manage 
# servers and applications used in a localhost device setup
#
# management scripts: 
# 1. allStart   - to start karabo processes defined by the ALLINFO environmental
#                 allStart has a single optional parameter "-nox" which controls whether
#	       	  the processes are started as individual xterms or accumulated as background jobs
# 2. allStop    - to stop started processes
# 3. allCheck   - to check the definitions used by test system scripts 
#                 this script is the only check made of the definitions used
# 4. allRestart - to restart any "missing" applications
#                 a candidate to a missing application is the gui which was closed at
#                 the end of the last session with all other applications left running.
# 
# author: CY 18.12.2012, largely modified: BH 09.04.2015


##################
#  Broker Hosts  #
##################

# If you are using Karabo at home and run a local broker you can you use directly
#export KARABO_BROKER="tcp://localhost:7777"

# If you are only at the European XFEL GmbH you may use this settings
export KARABO_BROKER="tcp://exfl-broker:7777"

# This setting is the default, it will try the XFEL broker first and failover to a local if unsuccessful
#export KARABO_BROKER="tcp://exfl-broker:7777,tcp://localhost:7777"

#################
# Broker Topic  #
#################

# By default your username will become your topic name

# You may want to fix it using:

#export KARABO_BROKER_TOPIC=karabo


##################################
# Kill Signal (used by allStop)  #
##################################

# Better don't touch

KARABO_KILL_SIGNAL=9


################
# Applications #
################

# 1. command line
# 2. delay, in seconds, before starting next process
# 3. number of scroll lines of xterm
# 4. if "yes" use the x11 display specified in XUSE environmental. To start applications on the
#    control host define XUSE to the main console ($ export XUSE=":0") and, provided your login account
#    is identical to the console's owner account, all applications with 4="yes" will be displayed there. 
#    Applications started in this way will remain alive when the session is closed.
 
# Note: additional servers can be added by duplicating a server line and performing
# the necessary directory [definition 2] renaming (servers have unique directories)
# and providing a unique ALLINFO array index

###################
# Service Servers #
###################

# Better don't touch

# Default log level
logger=Logger.priority=INFO


ALLINFO[0]="karabo-cppdeviceserver serverId=karabo/guiServer devices=GuiServerDevice autoStart[0].GuiServerDevice.port=44444 $logger:0:1000:yes"

ALLINFO[1]="karabo-cppdeviceserver serverId=karabo/logAggregator devices=CentralLogging autoStart[0].CentralLogging $logger:0:1000:yes"

ALLINFO[2]="karabo-cppdeviceserver serverId=karabo/dataLogger devices=DataLogger,DataLogReader $logger:0:1000:yes"

ALLINFO[3]="karabo-cppdeviceserver serverId=karabo/dataLoggerManager devices=DataLoggerManager autoStart[0].DataLoggerManager $logger:0:1000:yes"

ALLINFO[4]="karabo-cppdeviceserver serverId=karabo/projectManager devices=ProjectManager autoStart[0].ProjectManager $logger:0:1000:yes"

#ALLINFO[5]="karabo-pythondeviceserver serverId=karabo/macroServer $logger:0:1000:yes"

#####################
# Device Server C++ #
#####################

ALLINFO[10]="karabo-cppdeviceserver serverId=generic/develop/1 Logger.priority=INFO:0:1000:yes"

########################
# Device Server Python #
########################

serverId=Karabo_PythonServer
logLevel=INFO

#ALLINFO[20]="$KARABO_SERVERS/pythonDeviceServer/startPythonServerApi1:DeviceServer.serverId=$serverId DeviceServer.Logger.priority=$logLevel:0:1000:yes"


###################
# User Interfaces #
###################

ALLINFO[30]="karabo-gui:0:1000:no"
