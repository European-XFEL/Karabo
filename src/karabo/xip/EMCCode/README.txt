

This is a software package for simulating particle reconstructions from randomly oriented diffraction patterns. To run this software you will need a C-compiler, FFTW3, and Mathematica. If you are only interested in reconstructing the 3D intensity from random diffraction patterns, and not the final step of reconstructing the particle, you do not need FFTW3. Mathematica is needed for constructing test particles and analyzing/rendering the results. If you have other means of generating data (e.g. an actual experiment), then the C-programs will reconstruct the particle provided your data file formats match those generated by the Mathematica code.

All code in this distribution was written by V. Elser and was last modified in April 2009. For background and theory, see the research paper:

"A reconstruction algorithm for single-particle diffraction imaging experiments" by Duane Ne-Te Loh and Veit Elser, 2009.

Please report bugs to duaneloh@gmail.com or ve10@cornell.edu.



Instructions:

(1) Compile the C-programs make_data.c, EMC.c and object_recon.c using the one-line commands given in the headers of the source code. Only object_recon.c requires FFTW3.

(2) In the subdirectory rotation_group you will find files quaternion#.dat, where # is an integer giving the resolution of the rotation group sampling. If you are reconstructing a really large object (# > 10), then you will have to generate a finer rotation group sampling using the Mathematica notebook 335samples.nb.

(3) Evaluate the Mathematica notebook definitions.nb.

(4) Open make_object.nb to generate a test object. The settings are at the top of the notebook. The main parameter you will be interested in is the object radius R. These objects are random labyrinths of positive contrast within a spherical shape. The volume fraction of positive contrast is specified by the parameter frac. The intrinsic resolution of the object is controlled by the damping parameter. With the default value damping = 1.5, the object contrast is controlled by a Gaussian low-pass filter with intensity damping given by I(qmax)/I(0) = exp(-2 * 1.5) = 0.05. The linear oversampling factor sigma should be fairly large to minimize interpolation errors. The parameter pad, measured in the same units as R, sets the padding of the object support. A large value of pad gives a loose support constraint.

After you have generated the object, save the support information and object density (for later comparisons) by evaluating the two Export commands at the end of the notebook.

(5) Open the notebook make_detector.dat to specify the geometry of the Fourier samples. One parameter to be set here is the maximum scattering angle, theta. This controls the curvature of the Ewald sphere. This notebook also defines the beamstop size by the first zero of the diffraction pattern produced by a uniform positive sphere of radius R. The Export command at the end of the notebook outputs the detector data used by the C-programs.

(6) Open the notebook make_intensity.dat to compute the oversampled intensity of the object and execute the Export command to output intensity.dat.

(7) Generate data using the C-program make_data from the intensity.dat file generated in (6). For example,

make_data 20000 60.

generates 20000 diffraction data sets where each has an average of 60 recorded photons. The data is written into the file photons.dat in sparse format.

(8) Reconstruct the 3D intensity from the data in photons.dat using the C-program EMC. If this is your first attempt, there will not be a file start_intensity.dat in the directory and the reconstruction will begin from scratch (random intensities). Also, to speed up the first round of intensity reconstruction you should use a lower resolution sampling of the rotation group. This is accomplished by the command

cp rotation_group/quaternion#.dat quaternion.dat

with # set at a small integer. To reconstruct with say 15 iterations use the command

nohup EMC 15 &

since this can take a long time and you will want to monitor memory usage, etc. The 3D intensity is written to finish_intensity.dat after each iteration and some simple diagnostics are recorded in EMC.log.

(9) Refine the intensity reconstruction by increasing either the rotation group sampling or the number of diffraction data sets. To do the former, execute the command

cp rotation_group/quaternion#.dat quaternion.dat

where # is set to a number larger than used previously. To increase the data, say by a factor of ten, run the command

make_data 200000 60.

Important: before executing the reconstruction command you need to copy the previous reconstruction output to the input of the current one:

cp finish_intensity.dat start_intensity.dat

Typically much fewer (one or two) iterations are needed for refinements.

(10) Monitor the intensity reconstruction using the notebook intensity_interface.nb. Note that the reconstructed intensity will have a random rotation relative to the original you used to generate the data, and so the rendered slices of the patterns will not match.

(11) If you are satisfied with the reconstructed intensity you can proceed to reconstruct the object using the C-program object_recon. You first need to execute the command

cp finish_intensity.dat object_intensity.dat

The object reconstruction will start with a random object unless you want to supply the file start_object.dat. The reconstructed object will be written to finish_object.dat and the difference-map error metric for each iteration is recorded in the output file object.log. The error metric should decrease to a steady state fluctuating value. Reconstructions are averaged during the fluctuating period and the modulation transfer function associated with phase fluctuations is computed during this period as well. The command,

object_recon 200 50

reconstructs with 200 iterations and begins averaging after the first 50.

(12) The notebook object_interface.nb will let you render the reconstructed object and compare it with your original test object. This notebook also plots the time series of the error metric and the modulation transfer function of the reconstruction.

