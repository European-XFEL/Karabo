/* soapH.h
   Generated by gSOAP 2.8.14 from ClientAuthentication.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin(soap), soap_serialize_byte(soap, data), soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin(soap), soap_serialize_int(soap, data), soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_LONG64
#define SOAP_TYPE_LONG64 (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_LONG64(struct soap*, LONG64 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_LONG64(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_LONG64(struct soap*, const char*, LONG64 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_LONG64(struct soap*, const LONG64 *, const char*, const char*);

#ifndef soap_write_LONG64
#define soap_write_LONG64(soap, data) ( soap_begin(soap), soap_serialize_LONG64(soap, data), soap_begin_send(soap) || soap_put_LONG64(soap, data, "long", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_LONG64(struct soap*, LONG64 *, const char*, const char*);

#ifndef soap_read_LONG64
#define soap_read_LONG64(soap, data) ( soap_begin_recv(soap) || !soap_get_LONG64(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


/* _wsa5__RetryAfter is a typedef element/attribute synonym for unsignedLONG64 */

#ifndef SOAP_TYPE__wsa5__RetryAfter
#define SOAP_TYPE__wsa5__RetryAfter (176)
#endif

#define soap_default__wsa5__RetryAfter(soap, a) soap_default_unsignedLONG64(soap, a)


#define soap_out__wsa5__RetryAfter soap_out_unsignedLONG64


#define soap_in__wsa5__RetryAfter soap_in_unsignedLONG64


#define soap_put__wsa5__RetryAfter soap_put_unsignedLONG64


#define soap_get__wsa5__RetryAfter soap_get_unsignedLONG64


#ifndef SOAP_TYPE_unsignedLONG64
#define SOAP_TYPE_unsignedLONG64 (141)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedLONG64(struct soap*, ULONG64 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedLONG64(struct soap*, const char*, int, const ULONG64 *, const char*);
SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_in_unsignedLONG64(struct soap*, const char*, ULONG64 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedLONG64(struct soap*, const ULONG64 *, const char*, const char*);

#ifndef soap_write_unsignedLONG64
#define soap_write_unsignedLONG64(soap, data) ( soap_begin(soap), soap_serialize_unsignedLONG64(soap, data), soap_begin_send(soap) || soap_put_unsignedLONG64(soap, data, "unsignedLong", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_get_unsignedLONG64(struct soap*, ULONG64 *, const char*, const char*);

#ifndef soap_read_unsignedLONG64
#define soap_read_unsignedLONG64(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedLONG64(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE__wsa5__IsReferenceParameter
#define SOAP_TYPE__wsa5__IsReferenceParameter (180)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsa5__IsReferenceParameter(struct soap*, enum _wsa5__IsReferenceParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsa5__IsReferenceParameter(struct soap*, const char*, int, const enum _wsa5__IsReferenceParameter *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap__wsa5__IsReferenceParameter2s(struct soap*, enum _wsa5__IsReferenceParameter);
SOAP_FMAC3 enum _wsa5__IsReferenceParameter * SOAP_FMAC4 soap_in__wsa5__IsReferenceParameter(struct soap*, const char*, enum _wsa5__IsReferenceParameter *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2_wsa5__IsReferenceParameter(struct soap*, const char*, enum _wsa5__IsReferenceParameter *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__IsReferenceParameter(struct soap*, const enum _wsa5__IsReferenceParameter *, const char*, const char*);

#ifndef soap_write__wsa5__IsReferenceParameter
#define soap_write__wsa5__IsReferenceParameter(soap, data) ( soap_begin(soap), soap_serialize__wsa5__IsReferenceParameter(soap, data), soap_begin_send(soap) || soap_put__wsa5__IsReferenceParameter(soap, data, "wsa5:IsReferenceParameter", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 enum _wsa5__IsReferenceParameter * SOAP_FMAC4 soap_get__wsa5__IsReferenceParameter(struct soap*, enum _wsa5__IsReferenceParameter *, const char*, const char*);

#ifndef soap_read__wsa5__IsReferenceParameter
#define soap_read__wsa5__IsReferenceParameter(soap, data) ( soap_begin_recv(soap) || !soap_get__wsa5__IsReferenceParameter(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_wsa5__FaultCodesType
#define SOAP_TYPE_wsa5__FaultCodesType (162)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__FaultCodesType(struct soap*, enum wsa5__FaultCodesType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__FaultCodesType(struct soap*, const char*, int, const enum wsa5__FaultCodesType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsa5__FaultCodesType2s(struct soap*, enum wsa5__FaultCodesType);
SOAP_FMAC3 enum wsa5__FaultCodesType * SOAP_FMAC4 soap_in_wsa5__FaultCodesType(struct soap*, const char*, enum wsa5__FaultCodesType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsa5__FaultCodesType(struct soap*, const char*, enum wsa5__FaultCodesType *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__FaultCodesType(struct soap*, const enum wsa5__FaultCodesType *, const char*, const char*);

#ifndef soap_write_wsa5__FaultCodesType
#define soap_write_wsa5__FaultCodesType(soap, data) ( soap_begin(soap), soap_serialize_wsa5__FaultCodesType(soap, data), soap_begin_send(soap) || soap_put_wsa5__FaultCodesType(soap, data, "wsa5:FaultCodesType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 enum wsa5__FaultCodesType * SOAP_FMAC4 soap_get_wsa5__FaultCodesType(struct soap*, enum wsa5__FaultCodesType *, const char*, const char*);

#ifndef soap_read_wsa5__FaultCodesType
#define soap_read_wsa5__FaultCodesType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__FaultCodesType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_wsa5__RelationshipType
#define SOAP_TYPE_wsa5__RelationshipType (161)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__RelationshipType(struct soap*, enum wsa5__RelationshipType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__RelationshipType(struct soap*, const char*, int, const enum wsa5__RelationshipType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsa5__RelationshipType2s(struct soap*, enum wsa5__RelationshipType);
SOAP_FMAC3 enum wsa5__RelationshipType * SOAP_FMAC4 soap_in_wsa5__RelationshipType(struct soap*, const char*, enum wsa5__RelationshipType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsa5__RelationshipType(struct soap*, const char*, enum wsa5__RelationshipType *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__RelationshipType(struct soap*, const enum wsa5__RelationshipType *, const char*, const char*);

#ifndef soap_write_wsa5__RelationshipType
#define soap_write_wsa5__RelationshipType(soap, data) ( soap_begin(soap), soap_serialize_wsa5__RelationshipType(soap, data), soap_begin_send(soap) || soap_put_wsa5__RelationshipType(soap, data, "wsa5:RelationshipType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 enum wsa5__RelationshipType * SOAP_FMAC4 soap_get_wsa5__RelationshipType(struct soap*, enum wsa5__RelationshipType *, const char*, const char*);

#ifndef soap_read_wsa5__RelationshipType
#define soap_read_wsa5__RelationshipType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__RelationshipType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_wsc__FaultCodeType
#define SOAP_TYPE_wsc__FaultCodeType (135)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsc__FaultCodeType(struct soap*, enum wsc__FaultCodeType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsc__FaultCodeType(struct soap*, const char*, int, const enum wsc__FaultCodeType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsc__FaultCodeType2s(struct soap*, enum wsc__FaultCodeType);
SOAP_FMAC3 enum wsc__FaultCodeType * SOAP_FMAC4 soap_in_wsc__FaultCodeType(struct soap*, const char*, enum wsc__FaultCodeType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsc__FaultCodeType(struct soap*, const char*, enum wsc__FaultCodeType *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsc__FaultCodeType(struct soap*, const enum wsc__FaultCodeType *, const char*, const char*);

#ifndef soap_write_wsc__FaultCodeType
#define soap_write_wsc__FaultCodeType(soap, data) ( soap_begin(soap), soap_serialize_wsc__FaultCodeType(soap, data), soap_begin_send(soap) || soap_put_wsc__FaultCodeType(soap, data, "wsc:FaultCodeType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 enum wsc__FaultCodeType * SOAP_FMAC4 soap_get_wsc__FaultCodeType(struct soap*, enum wsc__FaultCodeType *, const char*, const char*);

#ifndef soap_read_wsc__FaultCodeType
#define soap_read_wsc__FaultCodeType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsc__FaultCodeType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_wsse__FaultcodeEnum
#define SOAP_TYPE_wsse__FaultcodeEnum (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsse__FaultcodeEnum(struct soap*, enum wsse__FaultcodeEnum *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsse__FaultcodeEnum(struct soap*, const char*, int, const enum wsse__FaultcodeEnum *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsse__FaultcodeEnum2s(struct soap*, enum wsse__FaultcodeEnum);
SOAP_FMAC3 enum wsse__FaultcodeEnum * SOAP_FMAC4 soap_in_wsse__FaultcodeEnum(struct soap*, const char*, enum wsse__FaultcodeEnum *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsse__FaultcodeEnum(struct soap*, const char*, enum wsse__FaultcodeEnum *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsse__FaultcodeEnum(struct soap*, const enum wsse__FaultcodeEnum *, const char*, const char*);

#ifndef soap_write_wsse__FaultcodeEnum
#define soap_write_wsse__FaultcodeEnum(soap, data) ( soap_begin(soap), soap_serialize_wsse__FaultcodeEnum(soap, data), soap_begin_send(soap) || soap_put_wsse__FaultcodeEnum(soap, data, "wsse:FaultcodeEnum", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 enum wsse__FaultcodeEnum * SOAP_FMAC4 soap_get_wsse__FaultcodeEnum(struct soap*, enum wsse__FaultcodeEnum *, const char*, const char*);

#ifndef soap_read_wsse__FaultcodeEnum
#define soap_read_wsse__FaultcodeEnum(soap, data) ( soap_begin_recv(soap) || !soap_get_wsse__FaultcodeEnum(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_wsu__tTimestampFault
#define SOAP_TYPE_wsu__tTimestampFault (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsu__tTimestampFault(struct soap*, enum wsu__tTimestampFault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsu__tTimestampFault(struct soap*, const char*, int, const enum wsu__tTimestampFault *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsu__tTimestampFault2s(struct soap*, enum wsu__tTimestampFault);
SOAP_FMAC3 enum wsu__tTimestampFault * SOAP_FMAC4 soap_in_wsu__tTimestampFault(struct soap*, const char*, enum wsu__tTimestampFault *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsu__tTimestampFault(struct soap*, const char*, enum wsu__tTimestampFault *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsu__tTimestampFault(struct soap*, const enum wsu__tTimestampFault *, const char*, const char*);

#ifndef soap_write_wsu__tTimestampFault
#define soap_write_wsu__tTimestampFault(soap, data) ( soap_begin(soap), soap_serialize_wsu__tTimestampFault(soap, data), soap_begin_send(soap) || soap_put_wsu__tTimestampFault(soap, data, "wsu:tTimestampFault", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 enum wsu__tTimestampFault * SOAP_FMAC4 soap_get_wsu__tTimestampFault(struct soap*, enum wsu__tTimestampFault *, const char*, const char*);

#ifndef soap_read_wsu__tTimestampFault
#define soap_read_wsu__tTimestampFault(soap, data) ( soap_begin_recv(soap) || !soap_get_wsu__tTimestampFault(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

#ifndef soap_write_bool
#define soap_write_bool(soap, data) ( soap_begin(soap), soap_serialize_bool(soap, data), soap_begin_send(soap) || soap_put_bool(soap, data, "boolean", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

#ifndef soap_read_bool
#define soap_read_bool(soap, data) ( soap_begin_recv(soap) || !soap_get_bool(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_begin(soap), soap_serialize_std__string(soap, data), soap_begin_send(soap) || soap_put_std__string(soap, data, "string", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);

inline std::string * soap_new_std__string(struct soap *soap, int n = -1) { return soap_instantiate_std__string(soap, n, NULL, NULL, NULL); }

inline std::string * soap_new_req_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline std::string * soap_new_set_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline void soap_delete_std__string(struct soap *soap, std::string *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__UnsupportedEncodingException
#define SOAP_TYPE_ns1__UnsupportedEncodingException (22)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__UnsupportedEncodingException(struct soap*, const char*, int, const ns1__UnsupportedEncodingException *, const char*);
SOAP_FMAC3 ns1__UnsupportedEncodingException * SOAP_FMAC4 soap_in_ns1__UnsupportedEncodingException(struct soap*, const char*, ns1__UnsupportedEncodingException *, const char*);

#ifndef soap_write_ns1__UnsupportedEncodingException
#define soap_write_ns1__UnsupportedEncodingException(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:UnsupportedEncodingException", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__UnsupportedEncodingException * SOAP_FMAC4 soap_get_ns1__UnsupportedEncodingException(struct soap*, ns1__UnsupportedEncodingException *, const char*, const char*);

#ifndef soap_read_ns1__UnsupportedEncodingException
#define soap_read_ns1__UnsupportedEncodingException(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__UnsupportedEncodingException(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns1__UnsupportedEncodingException * SOAP_FMAC2 soap_instantiate_ns1__UnsupportedEncodingException(struct soap*, int, const char*, const char*, size_t*);

inline ns1__UnsupportedEncodingException * soap_new_ns1__UnsupportedEncodingException(struct soap *soap, int n = -1) { return soap_instantiate_ns1__UnsupportedEncodingException(soap, n, NULL, NULL, NULL); }

inline ns1__UnsupportedEncodingException * soap_new_req_ns1__UnsupportedEncodingException(struct soap *soap) { ns1__UnsupportedEncodingException *_p = soap_instantiate_ns1__UnsupportedEncodingException(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__UnsupportedEncodingException * soap_new_set_ns1__UnsupportedEncodingException(struct soap *soap, std::string *message) { ns1__UnsupportedEncodingException *_p = soap_instantiate_ns1__UnsupportedEncodingException(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__UnsupportedEncodingException::message = message; } return _p; }

inline void soap_delete_ns1__UnsupportedEncodingException(struct soap *soap, ns1__UnsupportedEncodingException *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__UnsupportedEncodingException(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__DecoderException
#define SOAP_TYPE_ns1__DecoderException (21)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__DecoderException(struct soap*, const char*, int, const ns1__DecoderException *, const char*);
SOAP_FMAC3 ns1__DecoderException * SOAP_FMAC4 soap_in_ns1__DecoderException(struct soap*, const char*, ns1__DecoderException *, const char*);

#ifndef soap_write_ns1__DecoderException
#define soap_write_ns1__DecoderException(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:DecoderException", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__DecoderException * SOAP_FMAC4 soap_get_ns1__DecoderException(struct soap*, ns1__DecoderException *, const char*, const char*);

#ifndef soap_read_ns1__DecoderException
#define soap_read_ns1__DecoderException(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__DecoderException(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns1__DecoderException * SOAP_FMAC2 soap_instantiate_ns1__DecoderException(struct soap*, int, const char*, const char*, size_t*);

inline ns1__DecoderException * soap_new_ns1__DecoderException(struct soap *soap, int n = -1) { return soap_instantiate_ns1__DecoderException(soap, n, NULL, NULL, NULL); }

inline ns1__DecoderException * soap_new_req_ns1__DecoderException(struct soap *soap) { ns1__DecoderException *_p = soap_instantiate_ns1__DecoderException(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__DecoderException * soap_new_set_ns1__DecoderException(struct soap *soap, std::string *message) { ns1__DecoderException *_p = soap_instantiate_ns1__DecoderException(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__DecoderException::message = message; } return _p; }

inline void soap_delete_ns1__DecoderException(struct soap *soap, ns1__DecoderException *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__DecoderException(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__loginResponse
#define SOAP_TYPE_ns1__loginResponse (20)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__loginResponse(struct soap*, const char*, int, const ns1__loginResponse *, const char*);
SOAP_FMAC3 ns1__loginResponse * SOAP_FMAC4 soap_in_ns1__loginResponse(struct soap*, const char*, ns1__loginResponse *, const char*);

#ifndef soap_write_ns1__loginResponse
#define soap_write_ns1__loginResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:loginResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__loginResponse * SOAP_FMAC4 soap_get_ns1__loginResponse(struct soap*, ns1__loginResponse *, const char*, const char*);

#ifndef soap_read_ns1__loginResponse
#define soap_read_ns1__loginResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__loginResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns1__loginResponse * SOAP_FMAC2 soap_instantiate_ns1__loginResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__loginResponse * soap_new_ns1__loginResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__loginResponse(soap, n, NULL, NULL, NULL); }

inline ns1__loginResponse * soap_new_req_ns1__loginResponse(struct soap *soap) { ns1__loginResponse *_p = soap_instantiate_ns1__loginResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__loginResponse * soap_new_set_ns1__loginResponse(struct soap *soap, ns1__xfelSession *return_) { ns1__loginResponse *_p = soap_instantiate_ns1__loginResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__loginResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__loginResponse(struct soap *soap, ns1__loginResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__loginResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__login
#define SOAP_TYPE_ns1__login (19)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__login(struct soap*, const char*, int, const ns1__login *, const char*);
SOAP_FMAC3 ns1__login * SOAP_FMAC4 soap_in_ns1__login(struct soap*, const char*, ns1__login *, const char*);

#ifndef soap_write_ns1__login
#define soap_write_ns1__login(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:login", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__login * SOAP_FMAC4 soap_get_ns1__login(struct soap*, ns1__login *, const char*, const char*);

#ifndef soap_read_ns1__login
#define soap_read_ns1__login(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__login(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns1__login * SOAP_FMAC2 soap_instantiate_ns1__login(struct soap*, int, const char*, const char*, size_t*);

inline ns1__login * soap_new_ns1__login(struct soap *soap, int n = -1) { return soap_instantiate_ns1__login(soap, n, NULL, NULL, NULL); }

inline ns1__login * soap_new_req_ns1__login(struct soap *soap) { ns1__login *_p = soap_instantiate_ns1__login(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__login * soap_new_set_ns1__login(struct soap *soap, std::string *username, std::string *password, std::string *provider, std::string *ipAddress, std::string *hostname, std::string *portNumber, std::string *nonce, std::string *software, std::string *time) { ns1__login *_p = soap_instantiate_ns1__login(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__login::username = username; _p->ns1__login::password = password; _p->ns1__login::provider = provider; _p->ns1__login::ipAddress = ipAddress; _p->ns1__login::hostname = hostname; _p->ns1__login::portNumber = portNumber; _p->ns1__login::nonce = nonce; _p->ns1__login::software = software; _p->ns1__login::time = time; } return _p; }

inline void soap_delete_ns1__login(struct soap *soap, ns1__login *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__login(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__hasActiveSessionResponse
#define SOAP_TYPE_ns1__hasActiveSessionResponse (18)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__hasActiveSessionResponse(struct soap*, const char*, int, const ns1__hasActiveSessionResponse *, const char*);
SOAP_FMAC3 ns1__hasActiveSessionResponse * SOAP_FMAC4 soap_in_ns1__hasActiveSessionResponse(struct soap*, const char*, ns1__hasActiveSessionResponse *, const char*);

#ifndef soap_write_ns1__hasActiveSessionResponse
#define soap_write_ns1__hasActiveSessionResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:hasActiveSessionResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__hasActiveSessionResponse * SOAP_FMAC4 soap_get_ns1__hasActiveSessionResponse(struct soap*, ns1__hasActiveSessionResponse *, const char*, const char*);

#ifndef soap_read_ns1__hasActiveSessionResponse
#define soap_read_ns1__hasActiveSessionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__hasActiveSessionResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns1__hasActiveSessionResponse * SOAP_FMAC2 soap_instantiate_ns1__hasActiveSessionResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__hasActiveSessionResponse * soap_new_ns1__hasActiveSessionResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__hasActiveSessionResponse(soap, n, NULL, NULL, NULL); }

inline ns1__hasActiveSessionResponse * soap_new_req_ns1__hasActiveSessionResponse(struct soap *soap) { ns1__hasActiveSessionResponse *_p = soap_instantiate_ns1__hasActiveSessionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__hasActiveSessionResponse * soap_new_set_ns1__hasActiveSessionResponse(struct soap *soap, bool *return_) { ns1__hasActiveSessionResponse *_p = soap_instantiate_ns1__hasActiveSessionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__hasActiveSessionResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__hasActiveSessionResponse(struct soap *soap, ns1__hasActiveSessionResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__hasActiveSessionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__hasActiveSession
#define SOAP_TYPE_ns1__hasActiveSession (17)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__hasActiveSession(struct soap*, const char*, int, const ns1__hasActiveSession *, const char*);
SOAP_FMAC3 ns1__hasActiveSession * SOAP_FMAC4 soap_in_ns1__hasActiveSession(struct soap*, const char*, ns1__hasActiveSession *, const char*);

#ifndef soap_write_ns1__hasActiveSession
#define soap_write_ns1__hasActiveSession(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:hasActiveSession", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__hasActiveSession * SOAP_FMAC4 soap_get_ns1__hasActiveSession(struct soap*, ns1__hasActiveSession *, const char*, const char*);

#ifndef soap_read_ns1__hasActiveSession
#define soap_read_ns1__hasActiveSession(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__hasActiveSession(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns1__hasActiveSession * SOAP_FMAC2 soap_instantiate_ns1__hasActiveSession(struct soap*, int, const char*, const char*, size_t*);

inline ns1__hasActiveSession * soap_new_ns1__hasActiveSession(struct soap *soap, int n = -1) { return soap_instantiate_ns1__hasActiveSession(soap, n, NULL, NULL, NULL); }

inline ns1__hasActiveSession * soap_new_req_ns1__hasActiveSession(struct soap *soap) { ns1__hasActiveSession *_p = soap_instantiate_ns1__hasActiveSession(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__hasActiveSession * soap_new_set_ns1__hasActiveSession(struct soap *soap, std::string *username, std::string *provider, std::string *software, std::string *ipAddress, std::string *hostname, std::string *portNumber) { ns1__hasActiveSession *_p = soap_instantiate_ns1__hasActiveSession(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__hasActiveSession::username = username; _p->ns1__hasActiveSession::provider = provider; _p->ns1__hasActiveSession::software = software; _p->ns1__hasActiveSession::ipAddress = ipAddress; _p->ns1__hasActiveSession::hostname = hostname; _p->ns1__hasActiveSession::portNumber = portNumber; } return _p; }

inline void soap_delete_ns1__hasActiveSession(struct soap *soap, ns1__hasActiveSession *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__hasActiveSession(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__singleSignOnResponse
#define SOAP_TYPE_ns1__singleSignOnResponse (16)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__singleSignOnResponse(struct soap*, const char*, int, const ns1__singleSignOnResponse *, const char*);
SOAP_FMAC3 ns1__singleSignOnResponse * SOAP_FMAC4 soap_in_ns1__singleSignOnResponse(struct soap*, const char*, ns1__singleSignOnResponse *, const char*);

#ifndef soap_write_ns1__singleSignOnResponse
#define soap_write_ns1__singleSignOnResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:singleSignOnResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__singleSignOnResponse * SOAP_FMAC4 soap_get_ns1__singleSignOnResponse(struct soap*, ns1__singleSignOnResponse *, const char*, const char*);

#ifndef soap_read_ns1__singleSignOnResponse
#define soap_read_ns1__singleSignOnResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__singleSignOnResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns1__singleSignOnResponse * SOAP_FMAC2 soap_instantiate_ns1__singleSignOnResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__singleSignOnResponse * soap_new_ns1__singleSignOnResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__singleSignOnResponse(soap, n, NULL, NULL, NULL); }

inline ns1__singleSignOnResponse * soap_new_req_ns1__singleSignOnResponse(struct soap *soap) { ns1__singleSignOnResponse *_p = soap_instantiate_ns1__singleSignOnResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__singleSignOnResponse * soap_new_set_ns1__singleSignOnResponse(struct soap *soap, ns1__xfelSession *return_) { ns1__singleSignOnResponse *_p = soap_instantiate_ns1__singleSignOnResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__singleSignOnResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__singleSignOnResponse(struct soap *soap, ns1__singleSignOnResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__singleSignOnResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__singleSignOn
#define SOAP_TYPE_ns1__singleSignOn (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__singleSignOn(struct soap*, const char*, int, const ns1__singleSignOn *, const char*);
SOAP_FMAC3 ns1__singleSignOn * SOAP_FMAC4 soap_in_ns1__singleSignOn(struct soap*, const char*, ns1__singleSignOn *, const char*);

#ifndef soap_write_ns1__singleSignOn
#define soap_write_ns1__singleSignOn(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:singleSignOn", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__singleSignOn * SOAP_FMAC4 soap_get_ns1__singleSignOn(struct soap*, ns1__singleSignOn *, const char*, const char*);

#ifndef soap_read_ns1__singleSignOn
#define soap_read_ns1__singleSignOn(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__singleSignOn(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns1__singleSignOn * SOAP_FMAC2 soap_instantiate_ns1__singleSignOn(struct soap*, int, const char*, const char*, size_t*);

inline ns1__singleSignOn * soap_new_ns1__singleSignOn(struct soap *soap, int n = -1) { return soap_instantiate_ns1__singleSignOn(soap, n, NULL, NULL, NULL); }

inline ns1__singleSignOn * soap_new_req_ns1__singleSignOn(struct soap *soap) { ns1__singleSignOn *_p = soap_instantiate_ns1__singleSignOn(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__singleSignOn * soap_new_set_ns1__singleSignOn(struct soap *soap, std::string *username, std::string *provider, std::string *ipAddress) { ns1__singleSignOn *_p = soap_instantiate_ns1__singleSignOn(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__singleSignOn::username = username; _p->ns1__singleSignOn::provider = provider; _p->ns1__singleSignOn::ipAddress = ipAddress; } return _p; }

inline void soap_delete_ns1__singleSignOn(struct soap *soap, ns1__singleSignOn *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__singleSignOn(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__logoutResponse
#define SOAP_TYPE_ns1__logoutResponse (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__logoutResponse(struct soap*, const char*, int, const ns1__logoutResponse *, const char*);
SOAP_FMAC3 ns1__logoutResponse * SOAP_FMAC4 soap_in_ns1__logoutResponse(struct soap*, const char*, ns1__logoutResponse *, const char*);

#ifndef soap_write_ns1__logoutResponse
#define soap_write_ns1__logoutResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:logoutResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__logoutResponse * SOAP_FMAC4 soap_get_ns1__logoutResponse(struct soap*, ns1__logoutResponse *, const char*, const char*);

#ifndef soap_read_ns1__logoutResponse
#define soap_read_ns1__logoutResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__logoutResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns1__logoutResponse * SOAP_FMAC2 soap_instantiate_ns1__logoutResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__logoutResponse * soap_new_ns1__logoutResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__logoutResponse(soap, n, NULL, NULL, NULL); }

inline ns1__logoutResponse * soap_new_req_ns1__logoutResponse(struct soap *soap) { ns1__logoutResponse *_p = soap_instantiate_ns1__logoutResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__logoutResponse * soap_new_set_ns1__logoutResponse(struct soap *soap, bool *return_) { ns1__logoutResponse *_p = soap_instantiate_ns1__logoutResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__logoutResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__logoutResponse(struct soap *soap, ns1__logoutResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__logoutResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__logout
#define SOAP_TYPE_ns1__logout (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__logout(struct soap*, const char*, int, const ns1__logout *, const char*);
SOAP_FMAC3 ns1__logout * SOAP_FMAC4 soap_in_ns1__logout(struct soap*, const char*, ns1__logout *, const char*);

#ifndef soap_write_ns1__logout
#define soap_write_ns1__logout(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:logout", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__logout * SOAP_FMAC4 soap_get_ns1__logout(struct soap*, ns1__logout *, const char*, const char*);

#ifndef soap_read_ns1__logout
#define soap_read_ns1__logout(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__logout(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns1__logout * SOAP_FMAC2 soap_instantiate_ns1__logout(struct soap*, int, const char*, const char*, size_t*);

inline ns1__logout * soap_new_ns1__logout(struct soap *soap, int n = -1) { return soap_instantiate_ns1__logout(soap, n, NULL, NULL, NULL); }

inline ns1__logout * soap_new_req_ns1__logout(struct soap *soap) { ns1__logout *_p = soap_instantiate_ns1__logout(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__logout * soap_new_set_ns1__logout(struct soap *soap, std::string *username, std::string *provider, std::string *sessionToken) { ns1__logout *_p = soap_instantiate_ns1__logout(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__logout::username = username; _p->ns1__logout::provider = provider; _p->ns1__logout::sessionToken = sessionToken; } return _p; }

inline void soap_delete_ns1__logout(struct soap *soap, ns1__logout *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__logout(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__sessionsByIpResponse
#define SOAP_TYPE_ns1__sessionsByIpResponse (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__sessionsByIpResponse(struct soap*, const char*, int, const ns1__sessionsByIpResponse *, const char*);
SOAP_FMAC3 ns1__sessionsByIpResponse * SOAP_FMAC4 soap_in_ns1__sessionsByIpResponse(struct soap*, const char*, ns1__sessionsByIpResponse *, const char*);

#ifndef soap_write_ns1__sessionsByIpResponse
#define soap_write_ns1__sessionsByIpResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:sessionsByIpResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__sessionsByIpResponse * SOAP_FMAC4 soap_get_ns1__sessionsByIpResponse(struct soap*, ns1__sessionsByIpResponse *, const char*, const char*);

#ifndef soap_read_ns1__sessionsByIpResponse
#define soap_read_ns1__sessionsByIpResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__sessionsByIpResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns1__sessionsByIpResponse * SOAP_FMAC2 soap_instantiate_ns1__sessionsByIpResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__sessionsByIpResponse * soap_new_ns1__sessionsByIpResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__sessionsByIpResponse(soap, n, NULL, NULL, NULL); }

inline ns1__sessionsByIpResponse * soap_new_req_ns1__sessionsByIpResponse(struct soap *soap) { ns1__sessionsByIpResponse *_p = soap_instantiate_ns1__sessionsByIpResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__sessionsByIpResponse * soap_new_set_ns1__sessionsByIpResponse(struct soap *soap, std::string *return_) { ns1__sessionsByIpResponse *_p = soap_instantiate_ns1__sessionsByIpResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__sessionsByIpResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__sessionsByIpResponse(struct soap *soap, ns1__sessionsByIpResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__sessionsByIpResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__sessionsByIp
#define SOAP_TYPE_ns1__sessionsByIp (11)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__sessionsByIp(struct soap*, const char*, int, const ns1__sessionsByIp *, const char*);
SOAP_FMAC3 ns1__sessionsByIp * SOAP_FMAC4 soap_in_ns1__sessionsByIp(struct soap*, const char*, ns1__sessionsByIp *, const char*);

#ifndef soap_write_ns1__sessionsByIp
#define soap_write_ns1__sessionsByIp(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:sessionsByIp", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__sessionsByIp * SOAP_FMAC4 soap_get_ns1__sessionsByIp(struct soap*, ns1__sessionsByIp *, const char*, const char*);

#ifndef soap_read_ns1__sessionsByIp
#define soap_read_ns1__sessionsByIp(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__sessionsByIp(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns1__sessionsByIp * SOAP_FMAC2 soap_instantiate_ns1__sessionsByIp(struct soap*, int, const char*, const char*, size_t*);

inline ns1__sessionsByIp * soap_new_ns1__sessionsByIp(struct soap *soap, int n = -1) { return soap_instantiate_ns1__sessionsByIp(soap, n, NULL, NULL, NULL); }

inline ns1__sessionsByIp * soap_new_req_ns1__sessionsByIp(struct soap *soap) { ns1__sessionsByIp *_p = soap_instantiate_ns1__sessionsByIp(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__sessionsByIp * soap_new_set_ns1__sessionsByIp(struct soap *soap, std::string *ipAddress) { ns1__sessionsByIp *_p = soap_instantiate_ns1__sessionsByIp(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__sessionsByIp::ipAddress = ipAddress; } return _p; }

inline void soap_delete_ns1__sessionsByIp(struct soap *soap, ns1__sessionsByIp *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__sessionsByIp(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__xfelSession
#define SOAP_TYPE_ns1__xfelSession (10)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__xfelSession(struct soap*, const char*, int, const ns1__xfelSession *, const char*);
SOAP_FMAC3 ns1__xfelSession * SOAP_FMAC4 soap_in_ns1__xfelSession(struct soap*, const char*, ns1__xfelSession *, const char*);

#ifndef soap_write_ns1__xfelSession
#define soap_write_ns1__xfelSession(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:xfelSession", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__xfelSession * SOAP_FMAC4 soap_get_ns1__xfelSession(struct soap*, ns1__xfelSession *, const char*, const char*);

#ifndef soap_read_ns1__xfelSession
#define soap_read_ns1__xfelSession(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__xfelSession(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns1__xfelSession * SOAP_FMAC2 soap_instantiate_ns1__xfelSession(struct soap*, int, const char*, const char*, size_t*);

inline ns1__xfelSession * soap_new_ns1__xfelSession(struct soap *soap, int n = -1) { return soap_instantiate_ns1__xfelSession(soap, n, NULL, NULL, NULL); }

inline ns1__xfelSession * soap_new_req_ns1__xfelSession(struct soap *soap) { ns1__xfelSession *_p = soap_instantiate_ns1__xfelSession(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__xfelSession * soap_new_set_ns1__xfelSession(struct soap *soap, std::string *familyName, std::string *firstName, std::string *operationResultMsg, int *operationSuccess, std::string *provider, std::string *roleDesc, LONG64 *roleId, std::string *sessionToken, std::string *softwareDesc, LONG64 *softwareId, LONG64 *userId, std::string *username, std::string *welcomeMessage) { ns1__xfelSession *_p = soap_instantiate_ns1__xfelSession(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__xfelSession::familyName = familyName; _p->ns1__xfelSession::firstName = firstName; _p->ns1__xfelSession::operationResultMsg = operationResultMsg; _p->ns1__xfelSession::operationSuccess = operationSuccess; _p->ns1__xfelSession::provider = provider; _p->ns1__xfelSession::roleDesc = roleDesc; _p->ns1__xfelSession::roleId = roleId; _p->ns1__xfelSession::sessionToken = sessionToken; _p->ns1__xfelSession::softwareDesc = softwareDesc; _p->ns1__xfelSession::softwareId = softwareId; _p->ns1__xfelSession::userId = userId; _p->ns1__xfelSession::username = username; _p->ns1__xfelSession::welcomeMessage = welcomeMessage; } return _p; }

inline void soap_delete_ns1__xfelSession(struct soap *soap, ns1__xfelSession *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__xfelSession(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__getUserNonceResponse
#define SOAP_TYPE_ns1__getUserNonceResponse (9)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getUserNonceResponse(struct soap*, const char*, int, const ns1__getUserNonceResponse *, const char*);
SOAP_FMAC3 ns1__getUserNonceResponse * SOAP_FMAC4 soap_in_ns1__getUserNonceResponse(struct soap*, const char*, ns1__getUserNonceResponse *, const char*);

#ifndef soap_write_ns1__getUserNonceResponse
#define soap_write_ns1__getUserNonceResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:getUserNonceResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__getUserNonceResponse * SOAP_FMAC4 soap_get_ns1__getUserNonceResponse(struct soap*, ns1__getUserNonceResponse *, const char*, const char*);

#ifndef soap_read_ns1__getUserNonceResponse
#define soap_read_ns1__getUserNonceResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__getUserNonceResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns1__getUserNonceResponse * SOAP_FMAC2 soap_instantiate_ns1__getUserNonceResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__getUserNonceResponse * soap_new_ns1__getUserNonceResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__getUserNonceResponse(soap, n, NULL, NULL, NULL); }

inline ns1__getUserNonceResponse * soap_new_req_ns1__getUserNonceResponse(struct soap *soap) { ns1__getUserNonceResponse *_p = soap_instantiate_ns1__getUserNonceResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__getUserNonceResponse * soap_new_set_ns1__getUserNonceResponse(struct soap *soap, ns1__xfelSession *return_) { ns1__getUserNonceResponse *_p = soap_instantiate_ns1__getUserNonceResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__getUserNonceResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__getUserNonceResponse(struct soap *soap, ns1__getUserNonceResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getUserNonceResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__getUserNonce
#define SOAP_TYPE_ns1__getUserNonce (8)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getUserNonce(struct soap*, const char*, int, const ns1__getUserNonce *, const char*);
SOAP_FMAC3 ns1__getUserNonce * SOAP_FMAC4 soap_in_ns1__getUserNonce(struct soap*, const char*, ns1__getUserNonce *, const char*);

#ifndef soap_write_ns1__getUserNonce
#define soap_write_ns1__getUserNonce(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:getUserNonce", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__getUserNonce * SOAP_FMAC4 soap_get_ns1__getUserNonce(struct soap*, ns1__getUserNonce *, const char*, const char*);

#ifndef soap_read_ns1__getUserNonce
#define soap_read_ns1__getUserNonce(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__getUserNonce(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns1__getUserNonce * SOAP_FMAC2 soap_instantiate_ns1__getUserNonce(struct soap*, int, const char*, const char*, size_t*);

inline ns1__getUserNonce * soap_new_ns1__getUserNonce(struct soap *soap, int n = -1) { return soap_instantiate_ns1__getUserNonce(soap, n, NULL, NULL, NULL); }

inline ns1__getUserNonce * soap_new_req_ns1__getUserNonce(struct soap *soap) { ns1__getUserNonce *_p = soap_instantiate_ns1__getUserNonce(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__getUserNonce * soap_new_set_ns1__getUserNonce(struct soap *soap, std::string *username, std::string *provider, std::string *ipAddress) { ns1__getUserNonce *_p = soap_instantiate_ns1__getUserNonce(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__getUserNonce::username = username; _p->ns1__getUserNonce::provider = provider; _p->ns1__getUserNonce::ipAddress = ipAddress; } return _p; }

inline void soap_delete_ns1__getUserNonce(struct soap *soap, ns1__getUserNonce *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getUserNonce(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (193)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Fault(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (190)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Reason(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (188)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Code(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_chan__ChannelInstanceType
#define SOAP_TYPE_chan__ChannelInstanceType (181)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_chan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_chan__ChannelInstanceType(struct soap*, const struct chan__ChannelInstanceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_chan__ChannelInstanceType(struct soap*, const char*, int, const struct chan__ChannelInstanceType *, const char*);
SOAP_FMAC3 struct chan__ChannelInstanceType * SOAP_FMAC4 soap_in_chan__ChannelInstanceType(struct soap*, const char*, struct chan__ChannelInstanceType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_chan__ChannelInstanceType(struct soap*, const struct chan__ChannelInstanceType *, const char*, const char*);

#ifndef soap_write_chan__ChannelInstanceType
#define soap_write_chan__ChannelInstanceType(soap, data) ( soap_begin(soap), soap_serialize_chan__ChannelInstanceType(soap, data), soap_begin_send(soap) || soap_put_chan__ChannelInstanceType(soap, data, "chan:ChannelInstanceType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct chan__ChannelInstanceType * SOAP_FMAC4 soap_get_chan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *, const char*, const char*);

#ifndef soap_read_chan__ChannelInstanceType
#define soap_read_chan__ChannelInstanceType(soap, data) ( soap_begin_recv(soap) || !soap_get_chan__ChannelInstanceType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct chan__ChannelInstanceType * SOAP_FMAC2 soap_instantiate_chan__ChannelInstanceType(struct soap*, int, const char*, const char*, size_t*);

inline struct chan__ChannelInstanceType * soap_new_chan__ChannelInstanceType(struct soap *soap, int n = -1) { return soap_instantiate_chan__ChannelInstanceType(soap, n, NULL, NULL, NULL); }

inline struct chan__ChannelInstanceType * soap_new_req_chan__ChannelInstanceType(struct soap *soap, int __item) { struct chan__ChannelInstanceType *_p = soap_instantiate_chan__ChannelInstanceType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_chan__ChannelInstanceType(soap, _p); _p->__item = __item; } return _p; }

inline struct chan__ChannelInstanceType * soap_new_set_chan__ChannelInstanceType(struct soap *soap, int __item, enum _wsa5__IsReferenceParameter wsa5__IsReferenceParameter) { struct chan__ChannelInstanceType *_p = soap_instantiate_chan__ChannelInstanceType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_chan__ChannelInstanceType(soap, _p); _p->__item = __item; _p->wsa5__IsReferenceParameter = wsa5__IsReferenceParameter; } return _p; }

inline void soap_delete_chan__ChannelInstanceType(struct soap *soap, struct chan__ChannelInstanceType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_chan__ChannelInstanceType(struct soap*, int, int, void*, size_t, const void*, size_t);

/* _wsa5__ProblemAction is a typedef element/attribute synonym for wsa5__ProblemActionType */

#ifndef SOAP_TYPE__wsa5__ProblemAction
#define SOAP_TYPE__wsa5__ProblemAction (179)
#endif

#define soap_default__wsa5__ProblemAction(soap, a) soap_default_wsa5__ProblemActionType(soap, a)


#define soap_serialize__wsa5__ProblemAction soap_serialize_wsa5__ProblemActionType


#define soap_out__wsa5__ProblemAction soap_out_wsa5__ProblemActionType


#define soap_in__wsa5__ProblemAction soap_in_wsa5__ProblemActionType


#define soap_put__wsa5__ProblemAction soap_put_wsa5__ProblemActionType


#define soap_get__wsa5__ProblemAction soap_get_wsa5__ProblemActionType


#define soap_instantiate__wsa5__ProblemAction soap_instantiate_wsa5__ProblemActionType


#define soap_copy__wsa5__ProblemAction soap_copy_wsa5__ProblemActionType

/* _wsa5__FaultTo is a typedef element/attribute synonym for wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__FaultTo
#define SOAP_TYPE__wsa5__FaultTo (173)
#endif

#define soap_default__wsa5__FaultTo(soap, a) soap_default_wsa5__EndpointReferenceType(soap, a)


#define soap_serialize__wsa5__FaultTo soap_serialize_wsa5__EndpointReferenceType


#define soap_out__wsa5__FaultTo soap_out_wsa5__EndpointReferenceType


#define soap_in__wsa5__FaultTo soap_in_wsa5__EndpointReferenceType


#define soap_put__wsa5__FaultTo soap_put_wsa5__EndpointReferenceType


#define soap_get__wsa5__FaultTo soap_get_wsa5__EndpointReferenceType


#define soap_instantiate__wsa5__FaultTo soap_instantiate_wsa5__EndpointReferenceType


#define soap_copy__wsa5__FaultTo soap_copy_wsa5__EndpointReferenceType

/* _wsa5__From is a typedef element/attribute synonym for wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__From
#define SOAP_TYPE__wsa5__From (172)
#endif

#define soap_default__wsa5__From(soap, a) soap_default_wsa5__EndpointReferenceType(soap, a)


#define soap_serialize__wsa5__From soap_serialize_wsa5__EndpointReferenceType


#define soap_out__wsa5__From soap_out_wsa5__EndpointReferenceType


#define soap_in__wsa5__From soap_in_wsa5__EndpointReferenceType


#define soap_put__wsa5__From soap_put_wsa5__EndpointReferenceType


#define soap_get__wsa5__From soap_get_wsa5__EndpointReferenceType


#define soap_instantiate__wsa5__From soap_instantiate_wsa5__EndpointReferenceType


#define soap_copy__wsa5__From soap_copy_wsa5__EndpointReferenceType

/* _wsa5__ReplyTo is a typedef element/attribute synonym for wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__ReplyTo
#define SOAP_TYPE__wsa5__ReplyTo (171)
#endif

#define soap_default__wsa5__ReplyTo(soap, a) soap_default_wsa5__EndpointReferenceType(soap, a)


#define soap_serialize__wsa5__ReplyTo soap_serialize_wsa5__EndpointReferenceType


#define soap_out__wsa5__ReplyTo soap_out_wsa5__EndpointReferenceType


#define soap_in__wsa5__ReplyTo soap_in_wsa5__EndpointReferenceType


#define soap_put__wsa5__ReplyTo soap_put_wsa5__EndpointReferenceType


#define soap_get__wsa5__ReplyTo soap_get_wsa5__EndpointReferenceType


#define soap_instantiate__wsa5__ReplyTo soap_instantiate_wsa5__EndpointReferenceType


#define soap_copy__wsa5__ReplyTo soap_copy_wsa5__EndpointReferenceType

/* _wsa5__RelatesTo is a typedef element/attribute synonym for wsa5__RelatesToType */

#ifndef SOAP_TYPE__wsa5__RelatesTo
#define SOAP_TYPE__wsa5__RelatesTo (170)
#endif

#define soap_default__wsa5__RelatesTo(soap, a) soap_default_wsa5__RelatesToType(soap, a)


#define soap_serialize__wsa5__RelatesTo soap_serialize_wsa5__RelatesToType


#define soap_out__wsa5__RelatesTo soap_out_wsa5__RelatesToType


#define soap_in__wsa5__RelatesTo soap_in_wsa5__RelatesToType


#define soap_put__wsa5__RelatesTo soap_put_wsa5__RelatesToType


#define soap_get__wsa5__RelatesTo soap_get_wsa5__RelatesToType


#define soap_instantiate__wsa5__RelatesTo soap_instantiate_wsa5__RelatesToType


#define soap_copy__wsa5__RelatesTo soap_copy_wsa5__RelatesToType

/* _wsa5__Metadata is a typedef element/attribute synonym for wsa5__MetadataType */

#ifndef SOAP_TYPE__wsa5__Metadata
#define SOAP_TYPE__wsa5__Metadata (168)
#endif

#define soap_default__wsa5__Metadata(soap, a) soap_default_wsa5__MetadataType(soap, a)


#define soap_serialize__wsa5__Metadata soap_serialize_wsa5__MetadataType


#define soap_out__wsa5__Metadata soap_out_wsa5__MetadataType


#define soap_in__wsa5__Metadata soap_in_wsa5__MetadataType


#define soap_put__wsa5__Metadata soap_put_wsa5__MetadataType


#define soap_get__wsa5__Metadata soap_get_wsa5__MetadataType


#define soap_instantiate__wsa5__Metadata soap_instantiate_wsa5__MetadataType


#define soap_copy__wsa5__Metadata soap_copy_wsa5__MetadataType

/* _wsa5__ReferenceParameters is a typedef element/attribute synonym for wsa5__ReferenceParametersType */

#ifndef SOAP_TYPE__wsa5__ReferenceParameters
#define SOAP_TYPE__wsa5__ReferenceParameters (167)
#endif

#define soap_default__wsa5__ReferenceParameters(soap, a) soap_default_wsa5__ReferenceParametersType(soap, a)


#define soap_serialize__wsa5__ReferenceParameters soap_serialize_wsa5__ReferenceParametersType


#define soap_out__wsa5__ReferenceParameters soap_out_wsa5__ReferenceParametersType


#define soap_in__wsa5__ReferenceParameters soap_in_wsa5__ReferenceParametersType


#define soap_put__wsa5__ReferenceParameters soap_put_wsa5__ReferenceParametersType


#define soap_get__wsa5__ReferenceParameters soap_get_wsa5__ReferenceParametersType


#define soap_instantiate__wsa5__ReferenceParameters soap_instantiate_wsa5__ReferenceParametersType


#define soap_copy__wsa5__ReferenceParameters soap_copy_wsa5__ReferenceParametersType

/* _wsa5__EndpointReference is a typedef element/attribute synonym for wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__EndpointReference
#define SOAP_TYPE__wsa5__EndpointReference (166)
#endif

#define soap_default__wsa5__EndpointReference(soap, a) soap_default_wsa5__EndpointReferenceType(soap, a)


#define soap_serialize__wsa5__EndpointReference soap_serialize_wsa5__EndpointReferenceType


#define soap_out__wsa5__EndpointReference soap_out_wsa5__EndpointReferenceType


#define soap_in__wsa5__EndpointReference soap_in_wsa5__EndpointReferenceType


#define soap_put__wsa5__EndpointReference soap_put_wsa5__EndpointReferenceType


#define soap_get__wsa5__EndpointReference soap_get_wsa5__EndpointReferenceType


#define soap_instantiate__wsa5__EndpointReference soap_instantiate_wsa5__EndpointReferenceType


#define soap_copy__wsa5__EndpointReference soap_copy_wsa5__EndpointReferenceType

#ifndef SOAP_TYPE_wsa5__ProblemActionType
#define SOAP_TYPE_wsa5__ProblemActionType (158)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__ProblemActionType(struct soap*, struct wsa5__ProblemActionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__ProblemActionType(struct soap*, const struct wsa5__ProblemActionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__ProblemActionType(struct soap*, const char*, int, const struct wsa5__ProblemActionType *, const char*);
SOAP_FMAC3 struct wsa5__ProblemActionType * SOAP_FMAC4 soap_in_wsa5__ProblemActionType(struct soap*, const char*, struct wsa5__ProblemActionType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__ProblemActionType(struct soap*, const struct wsa5__ProblemActionType *, const char*, const char*);

#ifndef soap_write_wsa5__ProblemActionType
#define soap_write_wsa5__ProblemActionType(soap, data) ( soap_begin(soap), soap_serialize_wsa5__ProblemActionType(soap, data), soap_begin_send(soap) || soap_put_wsa5__ProblemActionType(soap, data, "wsa5:ProblemActionType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct wsa5__ProblemActionType * SOAP_FMAC4 soap_get_wsa5__ProblemActionType(struct soap*, struct wsa5__ProblemActionType *, const char*, const char*);

#ifndef soap_read_wsa5__ProblemActionType
#define soap_read_wsa5__ProblemActionType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__ProblemActionType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct wsa5__ProblemActionType * SOAP_FMAC2 soap_instantiate_wsa5__ProblemActionType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsa5__ProblemActionType * soap_new_wsa5__ProblemActionType(struct soap *soap, int n = -1) { return soap_instantiate_wsa5__ProblemActionType(soap, n, NULL, NULL, NULL); }

inline struct wsa5__ProblemActionType * soap_new_req_wsa5__ProblemActionType(struct soap *soap) { struct wsa5__ProblemActionType *_p = soap_instantiate_wsa5__ProblemActionType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa5__ProblemActionType(soap, _p); } return _p; }

inline struct wsa5__ProblemActionType * soap_new_set_wsa5__ProblemActionType(struct soap *soap, char *Action, char *SoapAction, char *__anyAttribute) { struct wsa5__ProblemActionType *_p = soap_instantiate_wsa5__ProblemActionType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa5__ProblemActionType(soap, _p); _p->Action = Action; _p->SoapAction = SoapAction; _p->__anyAttribute = __anyAttribute; } return _p; }

inline void soap_delete_wsa5__ProblemActionType(struct soap *soap, struct wsa5__ProblemActionType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsa5__ProblemActionType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsa5__RelatesToType
#define SOAP_TYPE_wsa5__RelatesToType (157)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__RelatesToType(struct soap*, struct wsa5__RelatesToType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__RelatesToType(struct soap*, const struct wsa5__RelatesToType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__RelatesToType(struct soap*, const char*, int, const struct wsa5__RelatesToType *, const char*);
SOAP_FMAC3 struct wsa5__RelatesToType * SOAP_FMAC4 soap_in_wsa5__RelatesToType(struct soap*, const char*, struct wsa5__RelatesToType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__RelatesToType(struct soap*, const struct wsa5__RelatesToType *, const char*, const char*);

#ifndef soap_write_wsa5__RelatesToType
#define soap_write_wsa5__RelatesToType(soap, data) ( soap_begin(soap), soap_serialize_wsa5__RelatesToType(soap, data), soap_begin_send(soap) || soap_put_wsa5__RelatesToType(soap, data, "wsa5:RelatesToType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct wsa5__RelatesToType * SOAP_FMAC4 soap_get_wsa5__RelatesToType(struct soap*, struct wsa5__RelatesToType *, const char*, const char*);

#ifndef soap_read_wsa5__RelatesToType
#define soap_read_wsa5__RelatesToType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__RelatesToType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct wsa5__RelatesToType * SOAP_FMAC2 soap_instantiate_wsa5__RelatesToType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsa5__RelatesToType * soap_new_wsa5__RelatesToType(struct soap *soap, int n = -1) { return soap_instantiate_wsa5__RelatesToType(soap, n, NULL, NULL, NULL); }

inline struct wsa5__RelatesToType * soap_new_req_wsa5__RelatesToType(struct soap *soap) { struct wsa5__RelatesToType *_p = soap_instantiate_wsa5__RelatesToType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa5__RelatesToType(soap, _p); } return _p; }

inline struct wsa5__RelatesToType * soap_new_set_wsa5__RelatesToType(struct soap *soap, char *__item, char *RelationshipType, char *__anyAttribute) { struct wsa5__RelatesToType *_p = soap_instantiate_wsa5__RelatesToType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa5__RelatesToType(soap, _p); _p->__item = __item; _p->RelationshipType = RelationshipType; _p->__anyAttribute = __anyAttribute; } return _p; }

inline void soap_delete_wsa5__RelatesToType(struct soap *soap, struct wsa5__RelatesToType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsa5__RelatesToType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsa5__MetadataType
#define SOAP_TYPE_wsa5__MetadataType (156)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__MetadataType(struct soap*, struct wsa5__MetadataType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__MetadataType(struct soap*, const struct wsa5__MetadataType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__MetadataType(struct soap*, const char*, int, const struct wsa5__MetadataType *, const char*);
SOAP_FMAC3 struct wsa5__MetadataType * SOAP_FMAC4 soap_in_wsa5__MetadataType(struct soap*, const char*, struct wsa5__MetadataType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__MetadataType(struct soap*, const struct wsa5__MetadataType *, const char*, const char*);

#ifndef soap_write_wsa5__MetadataType
#define soap_write_wsa5__MetadataType(soap, data) ( soap_begin(soap), soap_serialize_wsa5__MetadataType(soap, data), soap_begin_send(soap) || soap_put_wsa5__MetadataType(soap, data, "wsa5:MetadataType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct wsa5__MetadataType * SOAP_FMAC4 soap_get_wsa5__MetadataType(struct soap*, struct wsa5__MetadataType *, const char*, const char*);

#ifndef soap_read_wsa5__MetadataType
#define soap_read_wsa5__MetadataType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__MetadataType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct wsa5__MetadataType * SOAP_FMAC2 soap_instantiate_wsa5__MetadataType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsa5__MetadataType * soap_new_wsa5__MetadataType(struct soap *soap, int n = -1) { return soap_instantiate_wsa5__MetadataType(soap, n, NULL, NULL, NULL); }

inline struct wsa5__MetadataType * soap_new_req_wsa5__MetadataType(struct soap *soap, int __size, char **__any) { struct wsa5__MetadataType *_p = soap_instantiate_wsa5__MetadataType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa5__MetadataType(soap, _p); _p->__size = __size; _p->__any = __any; } return _p; }

inline struct wsa5__MetadataType * soap_new_set_wsa5__MetadataType(struct soap *soap, int __size, char **__any, char *__anyAttribute) { struct wsa5__MetadataType *_p = soap_instantiate_wsa5__MetadataType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa5__MetadataType(soap, _p); _p->__size = __size; _p->__any = __any; _p->__anyAttribute = __anyAttribute; } return _p; }

inline void soap_delete_wsa5__MetadataType(struct soap *soap, struct wsa5__MetadataType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsa5__MetadataType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsa5__ReferenceParametersType
#define SOAP_TYPE_wsa5__ReferenceParametersType (155)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__ReferenceParametersType(struct soap*, const struct wsa5__ReferenceParametersType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__ReferenceParametersType(struct soap*, const char*, int, const struct wsa5__ReferenceParametersType *, const char*);
SOAP_FMAC3 struct wsa5__ReferenceParametersType * SOAP_FMAC4 soap_in_wsa5__ReferenceParametersType(struct soap*, const char*, struct wsa5__ReferenceParametersType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__ReferenceParametersType(struct soap*, const struct wsa5__ReferenceParametersType *, const char*, const char*);

#ifndef soap_write_wsa5__ReferenceParametersType
#define soap_write_wsa5__ReferenceParametersType(soap, data) ( soap_begin(soap), soap_serialize_wsa5__ReferenceParametersType(soap, data), soap_begin_send(soap) || soap_put_wsa5__ReferenceParametersType(soap, data, "wsa5:ReferenceParametersType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct wsa5__ReferenceParametersType * SOAP_FMAC4 soap_get_wsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *, const char*, const char*);

#ifndef soap_read_wsa5__ReferenceParametersType
#define soap_read_wsa5__ReferenceParametersType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__ReferenceParametersType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct wsa5__ReferenceParametersType * SOAP_FMAC2 soap_instantiate_wsa5__ReferenceParametersType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsa5__ReferenceParametersType * soap_new_wsa5__ReferenceParametersType(struct soap *soap, int n = -1) { return soap_instantiate_wsa5__ReferenceParametersType(soap, n, NULL, NULL, NULL); }

inline struct wsa5__ReferenceParametersType * soap_new_req_wsa5__ReferenceParametersType(struct soap *soap, int __size, char **__any) { struct wsa5__ReferenceParametersType *_p = soap_instantiate_wsa5__ReferenceParametersType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa5__ReferenceParametersType(soap, _p); _p->__size = __size; _p->__any = __any; } return _p; }

inline struct wsa5__ReferenceParametersType * soap_new_set_wsa5__ReferenceParametersType(struct soap *soap, int *chan__ChannelInstance, int __size, char **__any, char *__anyAttribute) { struct wsa5__ReferenceParametersType *_p = soap_instantiate_wsa5__ReferenceParametersType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa5__ReferenceParametersType(soap, _p); _p->chan__ChannelInstance = chan__ChannelInstance; _p->__size = __size; _p->__any = __any; _p->__anyAttribute = __anyAttribute; } return _p; }

inline void soap_delete_wsa5__ReferenceParametersType(struct soap *soap, struct wsa5__ReferenceParametersType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsa5__ReferenceParametersType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsa5__EndpointReferenceType
#define SOAP_TYPE_wsa5__EndpointReferenceType (154)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__EndpointReferenceType(struct soap*, struct wsa5__EndpointReferenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__EndpointReferenceType(struct soap*, const struct wsa5__EndpointReferenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__EndpointReferenceType(struct soap*, const char*, int, const struct wsa5__EndpointReferenceType *, const char*);
SOAP_FMAC3 struct wsa5__EndpointReferenceType * SOAP_FMAC4 soap_in_wsa5__EndpointReferenceType(struct soap*, const char*, struct wsa5__EndpointReferenceType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__EndpointReferenceType(struct soap*, const struct wsa5__EndpointReferenceType *, const char*, const char*);

#ifndef soap_write_wsa5__EndpointReferenceType
#define soap_write_wsa5__EndpointReferenceType(soap, data) ( soap_begin(soap), soap_serialize_wsa5__EndpointReferenceType(soap, data), soap_begin_send(soap) || soap_put_wsa5__EndpointReferenceType(soap, data, "wsa5:EndpointReferenceType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct wsa5__EndpointReferenceType * SOAP_FMAC4 soap_get_wsa5__EndpointReferenceType(struct soap*, struct wsa5__EndpointReferenceType *, const char*, const char*);

#ifndef soap_read_wsa5__EndpointReferenceType
#define soap_read_wsa5__EndpointReferenceType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__EndpointReferenceType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct wsa5__EndpointReferenceType * SOAP_FMAC2 soap_instantiate_wsa5__EndpointReferenceType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsa5__EndpointReferenceType * soap_new_wsa5__EndpointReferenceType(struct soap *soap, int n = -1) { return soap_instantiate_wsa5__EndpointReferenceType(soap, n, NULL, NULL, NULL); }

inline struct wsa5__EndpointReferenceType * soap_new_req_wsa5__EndpointReferenceType(struct soap *soap, char *Address, int __size, char **__any) { struct wsa5__EndpointReferenceType *_p = soap_instantiate_wsa5__EndpointReferenceType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa5__EndpointReferenceType(soap, _p); _p->Address = Address; _p->__size = __size; _p->__any = __any; } return _p; }

inline struct wsa5__EndpointReferenceType * soap_new_set_wsa5__EndpointReferenceType(struct soap *soap, char *Address, struct wsa5__ReferenceParametersType *ReferenceParameters, struct wsa5__MetadataType *Metadata, int __size, char **__any, char *__anyAttribute) { struct wsa5__EndpointReferenceType *_p = soap_instantiate_wsa5__EndpointReferenceType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa5__EndpointReferenceType(soap, _p); _p->Address = Address; _p->ReferenceParameters = ReferenceParameters; _p->Metadata = Metadata; _p->__size = __size; _p->__any = __any; _p->__anyAttribute = __anyAttribute; } return _p; }

inline void soap_delete_wsa5__EndpointReferenceType(struct soap *soap, struct wsa5__EndpointReferenceType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsa5__EndpointReferenceType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (152)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Header(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap, struct _wsse__Security *wsse__Security, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); _p->wsse__Security = wsse__Security; _p->wsa5__MessageID = wsa5__MessageID; _p->wsa5__RelatesTo = wsa5__RelatesTo; _p->wsa5__From = wsa5__From; _p->wsa5__ReplyTo = wsa5__ReplyTo; _p->wsa5__FaultTo = wsa5__FaultTo; _p->wsa5__To = wsa5__To; _p->wsa5__Action = wsa5__Action; _p->chan__ChannelInstance = chan__ChannelInstance; } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE__wsse__Security
#define SOAP_TYPE__wsse__Security (145)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsse__Security(struct soap*, struct _wsse__Security *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsse__Security(struct soap*, const struct _wsse__Security *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsse__Security(struct soap*, const char*, int, const struct _wsse__Security *, const char*);
SOAP_FMAC3 struct _wsse__Security * SOAP_FMAC4 soap_in__wsse__Security(struct soap*, const char*, struct _wsse__Security *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsse__Security(struct soap*, const struct _wsse__Security *, const char*, const char*);

#ifndef soap_write__wsse__Security
#define soap_write__wsse__Security(soap, data) ( soap_begin(soap), soap_serialize__wsse__Security(soap, data), soap_begin_send(soap) || soap_put__wsse__Security(soap, data, "wsse:Security", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _wsse__Security * SOAP_FMAC4 soap_get__wsse__Security(struct soap*, struct _wsse__Security *, const char*, const char*);

#ifndef soap_read__wsse__Security
#define soap_read__wsse__Security(soap, data) ( soap_begin_recv(soap) || !soap_get__wsse__Security(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct _wsse__Security * SOAP_FMAC2 soap_instantiate__wsse__Security(struct soap*, int, const char*, const char*, size_t*);

inline struct _wsse__Security * soap_new__wsse__Security(struct soap *soap, int n = -1) { return soap_instantiate__wsse__Security(soap, n, NULL, NULL, NULL); }

inline struct _wsse__Security * soap_new_req__wsse__Security(struct soap *soap) { struct _wsse__Security *_p = soap_instantiate__wsse__Security(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__wsse__Security(soap, _p); } return _p; }

inline struct _wsse__Security * soap_new_set__wsse__Security(struct soap *soap, struct _wsu__Timestamp *wsu__Timestamp, struct _wsse__UsernameToken *UsernameToken, struct _wsse__BinarySecurityToken *BinarySecurityToken, struct xenc__EncryptedKeyType *xenc__EncryptedKey, struct _xenc__ReferenceList *xenc__ReferenceList, struct wsc__SecurityContextTokenType *wsc__SecurityContextToken, struct ds__SignatureType *ds__Signature, char *SOAP_ENV__actor, char *SOAP_ENV__role) { struct _wsse__Security *_p = soap_instantiate__wsse__Security(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__wsse__Security(soap, _p); _p->wsu__Timestamp = wsu__Timestamp; _p->UsernameToken = UsernameToken; _p->BinarySecurityToken = BinarySecurityToken; _p->xenc__EncryptedKey = xenc__EncryptedKey; _p->xenc__ReferenceList = xenc__ReferenceList; _p->wsc__SecurityContextToken = wsc__SecurityContextToken; _p->ds__Signature = ds__Signature; _p->SOAP_ENV__actor = SOAP_ENV__actor; _p->SOAP_ENV__role = SOAP_ENV__role; } return _p; }

inline void soap_delete__wsse__Security(struct soap *soap, struct _wsse__Security *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsse__Security(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___wsc__DerivedKeyTokenType_sequence
#define SOAP_TYPE___wsc__DerivedKeyTokenType_sequence (140)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___wsc__DerivedKeyTokenType_sequence(struct soap*, struct __wsc__DerivedKeyTokenType_sequence *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___wsc__DerivedKeyTokenType_sequence(struct soap*, const struct __wsc__DerivedKeyTokenType_sequence *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___wsc__DerivedKeyTokenType_sequence(struct soap*, const char*, int, const struct __wsc__DerivedKeyTokenType_sequence *, const char*);
SOAP_FMAC3 struct __wsc__DerivedKeyTokenType_sequence * SOAP_FMAC4 soap_in___wsc__DerivedKeyTokenType_sequence(struct soap*, const char*, struct __wsc__DerivedKeyTokenType_sequence *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___wsc__DerivedKeyTokenType_sequence(struct soap*, const struct __wsc__DerivedKeyTokenType_sequence *, const char*, const char*);

#ifndef soap_write___wsc__DerivedKeyTokenType_sequence
#define soap_write___wsc__DerivedKeyTokenType_sequence(soap, data) ( soap_begin(soap), soap_serialize___wsc__DerivedKeyTokenType_sequence(soap, data), soap_begin_send(soap) || soap_put___wsc__DerivedKeyTokenType_sequence(soap, data, "-wsc:DerivedKeyTokenType-sequence", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __wsc__DerivedKeyTokenType_sequence * SOAP_FMAC4 soap_get___wsc__DerivedKeyTokenType_sequence(struct soap*, struct __wsc__DerivedKeyTokenType_sequence *, const char*, const char*);

#ifndef soap_read___wsc__DerivedKeyTokenType_sequence
#define soap_read___wsc__DerivedKeyTokenType_sequence(soap, data) ( soap_begin_recv(soap) || !soap_get___wsc__DerivedKeyTokenType_sequence(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __wsc__DerivedKeyTokenType_sequence * SOAP_FMAC2 soap_instantiate___wsc__DerivedKeyTokenType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline struct __wsc__DerivedKeyTokenType_sequence * soap_new___wsc__DerivedKeyTokenType_sequence(struct soap *soap, int n = -1) { return soap_instantiate___wsc__DerivedKeyTokenType_sequence(soap, n, NULL, NULL, NULL); }

inline struct __wsc__DerivedKeyTokenType_sequence * soap_new_req___wsc__DerivedKeyTokenType_sequence(struct soap *soap, int __union_DerivedKeyTokenType, union _wsc__union_DerivedKeyTokenType& union_DerivedKeyTokenType) { struct __wsc__DerivedKeyTokenType_sequence *_p = soap_instantiate___wsc__DerivedKeyTokenType_sequence(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___wsc__DerivedKeyTokenType_sequence(soap, _p); _p->__union_DerivedKeyTokenType = __union_DerivedKeyTokenType; _p->union_DerivedKeyTokenType = union_DerivedKeyTokenType; } return _p; }

inline struct __wsc__DerivedKeyTokenType_sequence * soap_new_set___wsc__DerivedKeyTokenType_sequence(struct soap *soap, int __union_DerivedKeyTokenType, union _wsc__union_DerivedKeyTokenType& union_DerivedKeyTokenType, ULONG64 *Length) { struct __wsc__DerivedKeyTokenType_sequence *_p = soap_instantiate___wsc__DerivedKeyTokenType_sequence(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___wsc__DerivedKeyTokenType_sequence(soap, _p); _p->__union_DerivedKeyTokenType = __union_DerivedKeyTokenType; _p->union_DerivedKeyTokenType = union_DerivedKeyTokenType; _p->Length = Length; } return _p; }

inline void soap_delete___wsc__DerivedKeyTokenType_sequence(struct soap *soap, struct __wsc__DerivedKeyTokenType_sequence *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___wsc__DerivedKeyTokenType_sequence(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsc__PropertiesType
#define SOAP_TYPE_wsc__PropertiesType (138)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsc__PropertiesType(struct soap*, struct wsc__PropertiesType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsc__PropertiesType(struct soap*, const struct wsc__PropertiesType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsc__PropertiesType(struct soap*, const char*, int, const struct wsc__PropertiesType *, const char*);
SOAP_FMAC3 struct wsc__PropertiesType * SOAP_FMAC4 soap_in_wsc__PropertiesType(struct soap*, const char*, struct wsc__PropertiesType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsc__PropertiesType(struct soap*, const struct wsc__PropertiesType *, const char*, const char*);

#ifndef soap_write_wsc__PropertiesType
#define soap_write_wsc__PropertiesType(soap, data) ( soap_begin(soap), soap_serialize_wsc__PropertiesType(soap, data), soap_begin_send(soap) || soap_put_wsc__PropertiesType(soap, data, "wsc:PropertiesType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct wsc__PropertiesType * SOAP_FMAC4 soap_get_wsc__PropertiesType(struct soap*, struct wsc__PropertiesType *, const char*, const char*);

#ifndef soap_read_wsc__PropertiesType
#define soap_read_wsc__PropertiesType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsc__PropertiesType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct wsc__PropertiesType * SOAP_FMAC2 soap_instantiate_wsc__PropertiesType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsc__PropertiesType * soap_new_wsc__PropertiesType(struct soap *soap, int n = -1) { return soap_instantiate_wsc__PropertiesType(soap, n, NULL, NULL, NULL); }

inline struct wsc__PropertiesType * soap_new_req_wsc__PropertiesType(struct soap *soap) { struct wsc__PropertiesType *_p = soap_instantiate_wsc__PropertiesType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsc__PropertiesType(soap, _p); } return _p; }

inline struct wsc__PropertiesType * soap_new_set_wsc__PropertiesType(struct soap *soap) { struct wsc__PropertiesType *_p = soap_instantiate_wsc__PropertiesType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsc__PropertiesType(soap, _p); } return _p; }

inline void soap_delete_wsc__PropertiesType(struct soap *soap, struct wsc__PropertiesType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsc__PropertiesType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsc__DerivedKeyTokenType
#define SOAP_TYPE_wsc__DerivedKeyTokenType (137)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsc__DerivedKeyTokenType(struct soap*, struct wsc__DerivedKeyTokenType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsc__DerivedKeyTokenType(struct soap*, const struct wsc__DerivedKeyTokenType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsc__DerivedKeyTokenType(struct soap*, const char*, int, const struct wsc__DerivedKeyTokenType *, const char*);
SOAP_FMAC3 struct wsc__DerivedKeyTokenType * SOAP_FMAC4 soap_in_wsc__DerivedKeyTokenType(struct soap*, const char*, struct wsc__DerivedKeyTokenType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsc__DerivedKeyTokenType(struct soap*, const struct wsc__DerivedKeyTokenType *, const char*, const char*);

#ifndef soap_write_wsc__DerivedKeyTokenType
#define soap_write_wsc__DerivedKeyTokenType(soap, data) ( soap_begin(soap), soap_serialize_wsc__DerivedKeyTokenType(soap, data), soap_begin_send(soap) || soap_put_wsc__DerivedKeyTokenType(soap, data, "wsc:DerivedKeyTokenType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct wsc__DerivedKeyTokenType * SOAP_FMAC4 soap_get_wsc__DerivedKeyTokenType(struct soap*, struct wsc__DerivedKeyTokenType *, const char*, const char*);

#ifndef soap_read_wsc__DerivedKeyTokenType
#define soap_read_wsc__DerivedKeyTokenType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsc__DerivedKeyTokenType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct wsc__DerivedKeyTokenType * SOAP_FMAC2 soap_instantiate_wsc__DerivedKeyTokenType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsc__DerivedKeyTokenType * soap_new_wsc__DerivedKeyTokenType(struct soap *soap, int n = -1) { return soap_instantiate_wsc__DerivedKeyTokenType(soap, n, NULL, NULL, NULL); }

inline struct wsc__DerivedKeyTokenType * soap_new_req_wsc__DerivedKeyTokenType(struct soap *soap, int __size_DerivedKeyTokenType_sequence, struct __wsc__DerivedKeyTokenType_sequence *__DerivedKeyTokenType_sequence) { struct wsc__DerivedKeyTokenType *_p = soap_instantiate_wsc__DerivedKeyTokenType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsc__DerivedKeyTokenType(soap, _p); _p->__size_DerivedKeyTokenType_sequence = __size_DerivedKeyTokenType_sequence; _p->__DerivedKeyTokenType_sequence = __DerivedKeyTokenType_sequence; } return _p; }

inline struct wsc__DerivedKeyTokenType * soap_new_set_wsc__DerivedKeyTokenType(struct soap *soap, struct _wsse__SecurityTokenReference *wsse__SecurityTokenReference, struct wsc__PropertiesType *Properties, int __size_DerivedKeyTokenType_sequence, struct __wsc__DerivedKeyTokenType_sequence *__DerivedKeyTokenType_sequence, char *Label, char *Nonce, char *wsu__Id, char *Algorithm) { struct wsc__DerivedKeyTokenType *_p = soap_instantiate_wsc__DerivedKeyTokenType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsc__DerivedKeyTokenType(soap, _p); _p->wsse__SecurityTokenReference = wsse__SecurityTokenReference; _p->Properties = Properties; _p->__size_DerivedKeyTokenType_sequence = __size_DerivedKeyTokenType_sequence; _p->__DerivedKeyTokenType_sequence = __DerivedKeyTokenType_sequence; _p->Label = Label; _p->Nonce = Nonce; _p->wsu__Id = wsu__Id; _p->Algorithm = Algorithm; } return _p; }

inline void soap_delete_wsc__DerivedKeyTokenType(struct soap *soap, struct wsc__DerivedKeyTokenType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsc__DerivedKeyTokenType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsc__SecurityContextTokenType
#define SOAP_TYPE_wsc__SecurityContextTokenType (136)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsc__SecurityContextTokenType(struct soap*, struct wsc__SecurityContextTokenType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsc__SecurityContextTokenType(struct soap*, const struct wsc__SecurityContextTokenType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsc__SecurityContextTokenType(struct soap*, const char*, int, const struct wsc__SecurityContextTokenType *, const char*);
SOAP_FMAC3 struct wsc__SecurityContextTokenType * SOAP_FMAC4 soap_in_wsc__SecurityContextTokenType(struct soap*, const char*, struct wsc__SecurityContextTokenType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsc__SecurityContextTokenType(struct soap*, const struct wsc__SecurityContextTokenType *, const char*, const char*);

#ifndef soap_write_wsc__SecurityContextTokenType
#define soap_write_wsc__SecurityContextTokenType(soap, data) ( soap_begin(soap), soap_serialize_wsc__SecurityContextTokenType(soap, data), soap_begin_send(soap) || soap_put_wsc__SecurityContextTokenType(soap, data, "wsc:SecurityContextTokenType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct wsc__SecurityContextTokenType * SOAP_FMAC4 soap_get_wsc__SecurityContextTokenType(struct soap*, struct wsc__SecurityContextTokenType *, const char*, const char*);

#ifndef soap_read_wsc__SecurityContextTokenType
#define soap_read_wsc__SecurityContextTokenType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsc__SecurityContextTokenType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct wsc__SecurityContextTokenType * SOAP_FMAC2 soap_instantiate_wsc__SecurityContextTokenType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsc__SecurityContextTokenType * soap_new_wsc__SecurityContextTokenType(struct soap *soap, int n = -1) { return soap_instantiate_wsc__SecurityContextTokenType(soap, n, NULL, NULL, NULL); }

inline struct wsc__SecurityContextTokenType * soap_new_req_wsc__SecurityContextTokenType(struct soap *soap) { struct wsc__SecurityContextTokenType *_p = soap_instantiate_wsc__SecurityContextTokenType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsc__SecurityContextTokenType(soap, _p); } return _p; }

inline struct wsc__SecurityContextTokenType * soap_new_set_wsc__SecurityContextTokenType(struct soap *soap, char *wsu__Id, char *Identifier, char *Instance) { struct wsc__SecurityContextTokenType *_p = soap_instantiate_wsc__SecurityContextTokenType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsc__SecurityContextTokenType(soap, _p); _p->wsu__Id = wsu__Id; _p->Identifier = Identifier; _p->Instance = Instance; } return _p; }

inline void soap_delete_wsc__SecurityContextTokenType(struct soap *soap, struct wsc__SecurityContextTokenType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsc__SecurityContextTokenType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___xenc__union_ReferenceList
#define SOAP_TYPE___xenc__union_ReferenceList (130)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___xenc__union_ReferenceList(struct soap*, struct __xenc__union_ReferenceList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___xenc__union_ReferenceList(struct soap*, const struct __xenc__union_ReferenceList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___xenc__union_ReferenceList(struct soap*, const char*, int, const struct __xenc__union_ReferenceList *, const char*);
SOAP_FMAC3 struct __xenc__union_ReferenceList * SOAP_FMAC4 soap_in___xenc__union_ReferenceList(struct soap*, const char*, struct __xenc__union_ReferenceList *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___xenc__union_ReferenceList(struct soap*, const struct __xenc__union_ReferenceList *, const char*, const char*);

#ifndef soap_write___xenc__union_ReferenceList
#define soap_write___xenc__union_ReferenceList(soap, data) ( soap_begin(soap), soap_serialize___xenc__union_ReferenceList(soap, data), soap_begin_send(soap) || soap_put___xenc__union_ReferenceList(soap, data, "-xenc:union-ReferenceList", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __xenc__union_ReferenceList * SOAP_FMAC4 soap_get___xenc__union_ReferenceList(struct soap*, struct __xenc__union_ReferenceList *, const char*, const char*);

#ifndef soap_read___xenc__union_ReferenceList
#define soap_read___xenc__union_ReferenceList(soap, data) ( soap_begin_recv(soap) || !soap_get___xenc__union_ReferenceList(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __xenc__union_ReferenceList * SOAP_FMAC2 soap_instantiate___xenc__union_ReferenceList(struct soap*, int, const char*, const char*, size_t*);

inline struct __xenc__union_ReferenceList * soap_new___xenc__union_ReferenceList(struct soap *soap, int n = -1) { return soap_instantiate___xenc__union_ReferenceList(soap, n, NULL, NULL, NULL); }

inline struct __xenc__union_ReferenceList * soap_new_req___xenc__union_ReferenceList(struct soap *soap) { struct __xenc__union_ReferenceList *_p = soap_instantiate___xenc__union_ReferenceList(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___xenc__union_ReferenceList(soap, _p); } return _p; }

inline struct __xenc__union_ReferenceList * soap_new_set___xenc__union_ReferenceList(struct soap *soap, struct xenc__ReferenceType *DataReference, struct xenc__ReferenceType *KeyReference) { struct __xenc__union_ReferenceList *_p = soap_instantiate___xenc__union_ReferenceList(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___xenc__union_ReferenceList(soap, _p); _p->DataReference = DataReference; _p->KeyReference = KeyReference; } return _p; }

inline void soap_delete___xenc__union_ReferenceList(struct soap *soap, struct __xenc__union_ReferenceList *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___xenc__union_ReferenceList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__xenc__ReferenceList
#define SOAP_TYPE__xenc__ReferenceList (122)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__xenc__ReferenceList(struct soap*, struct _xenc__ReferenceList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__xenc__ReferenceList(struct soap*, const struct _xenc__ReferenceList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__xenc__ReferenceList(struct soap*, const char*, int, const struct _xenc__ReferenceList *, const char*);
SOAP_FMAC3 struct _xenc__ReferenceList * SOAP_FMAC4 soap_in__xenc__ReferenceList(struct soap*, const char*, struct _xenc__ReferenceList *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put__xenc__ReferenceList(struct soap*, const struct _xenc__ReferenceList *, const char*, const char*);

#ifndef soap_write__xenc__ReferenceList
#define soap_write__xenc__ReferenceList(soap, data) ( soap_begin(soap), soap_serialize__xenc__ReferenceList(soap, data), soap_begin_send(soap) || soap_put__xenc__ReferenceList(soap, data, "xenc:ReferenceList", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _xenc__ReferenceList * SOAP_FMAC4 soap_get__xenc__ReferenceList(struct soap*, struct _xenc__ReferenceList *, const char*, const char*);

#ifndef soap_read__xenc__ReferenceList
#define soap_read__xenc__ReferenceList(soap, data) ( soap_begin_recv(soap) || !soap_get__xenc__ReferenceList(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct _xenc__ReferenceList * SOAP_FMAC2 soap_instantiate__xenc__ReferenceList(struct soap*, int, const char*, const char*, size_t*);

inline struct _xenc__ReferenceList * soap_new__xenc__ReferenceList(struct soap *soap, int n = -1) { return soap_instantiate__xenc__ReferenceList(soap, n, NULL, NULL, NULL); }

inline struct _xenc__ReferenceList * soap_new_req__xenc__ReferenceList(struct soap *soap, int __size_ReferenceList, struct __xenc__union_ReferenceList *__union_ReferenceList) { struct _xenc__ReferenceList *_p = soap_instantiate__xenc__ReferenceList(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__xenc__ReferenceList(soap, _p); _p->__size_ReferenceList = __size_ReferenceList; _p->__union_ReferenceList = __union_ReferenceList; } return _p; }

inline struct _xenc__ReferenceList * soap_new_set__xenc__ReferenceList(struct soap *soap, int __size_ReferenceList, struct __xenc__union_ReferenceList *__union_ReferenceList) { struct _xenc__ReferenceList *_p = soap_instantiate__xenc__ReferenceList(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__xenc__ReferenceList(soap, _p); _p->__size_ReferenceList = __size_ReferenceList; _p->__union_ReferenceList = __union_ReferenceList; } return _p; }

inline void soap_delete__xenc__ReferenceList(struct soap *soap, struct _xenc__ReferenceList *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__xenc__ReferenceList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xenc__EncryptionPropertyType
#define SOAP_TYPE_xenc__EncryptionPropertyType (121)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__EncryptionPropertyType(struct soap*, struct xenc__EncryptionPropertyType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__EncryptionPropertyType(struct soap*, const struct xenc__EncryptionPropertyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__EncryptionPropertyType(struct soap*, const char*, int, const struct xenc__EncryptionPropertyType *, const char*);
SOAP_FMAC3 struct xenc__EncryptionPropertyType * SOAP_FMAC4 soap_in_xenc__EncryptionPropertyType(struct soap*, const char*, struct xenc__EncryptionPropertyType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__EncryptionPropertyType(struct soap*, const struct xenc__EncryptionPropertyType *, const char*, const char*);

#ifndef soap_write_xenc__EncryptionPropertyType
#define soap_write_xenc__EncryptionPropertyType(soap, data) ( soap_begin(soap), soap_serialize_xenc__EncryptionPropertyType(soap, data), soap_begin_send(soap) || soap_put_xenc__EncryptionPropertyType(soap, data, "xenc:EncryptionPropertyType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct xenc__EncryptionPropertyType * SOAP_FMAC4 soap_get_xenc__EncryptionPropertyType(struct soap*, struct xenc__EncryptionPropertyType *, const char*, const char*);

#ifndef soap_read_xenc__EncryptionPropertyType
#define soap_read_xenc__EncryptionPropertyType(soap, data) ( soap_begin_recv(soap) || !soap_get_xenc__EncryptionPropertyType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct xenc__EncryptionPropertyType * SOAP_FMAC2 soap_instantiate_xenc__EncryptionPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline struct xenc__EncryptionPropertyType * soap_new_xenc__EncryptionPropertyType(struct soap *soap, int n = -1) { return soap_instantiate_xenc__EncryptionPropertyType(soap, n, NULL, NULL, NULL); }

inline struct xenc__EncryptionPropertyType * soap_new_req_xenc__EncryptionPropertyType(struct soap *soap) { struct xenc__EncryptionPropertyType *_p = soap_instantiate_xenc__EncryptionPropertyType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xenc__EncryptionPropertyType(soap, _p); } return _p; }

inline struct xenc__EncryptionPropertyType * soap_new_set_xenc__EncryptionPropertyType(struct soap *soap, char *Target, char *Id) { struct xenc__EncryptionPropertyType *_p = soap_instantiate_xenc__EncryptionPropertyType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xenc__EncryptionPropertyType(soap, _p); _p->Target = Target; _p->Id = Id; } return _p; }

inline void soap_delete_xenc__EncryptionPropertyType(struct soap *soap, struct xenc__EncryptionPropertyType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xenc__EncryptionPropertyType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xenc__EncryptionPropertiesType
#define SOAP_TYPE_xenc__EncryptionPropertiesType (120)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__EncryptionPropertiesType(struct soap*, struct xenc__EncryptionPropertiesType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__EncryptionPropertiesType(struct soap*, const struct xenc__EncryptionPropertiesType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__EncryptionPropertiesType(struct soap*, const char*, int, const struct xenc__EncryptionPropertiesType *, const char*);
SOAP_FMAC3 struct xenc__EncryptionPropertiesType * SOAP_FMAC4 soap_in_xenc__EncryptionPropertiesType(struct soap*, const char*, struct xenc__EncryptionPropertiesType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__EncryptionPropertiesType(struct soap*, const struct xenc__EncryptionPropertiesType *, const char*, const char*);

#ifndef soap_write_xenc__EncryptionPropertiesType
#define soap_write_xenc__EncryptionPropertiesType(soap, data) ( soap_begin(soap), soap_serialize_xenc__EncryptionPropertiesType(soap, data), soap_begin_send(soap) || soap_put_xenc__EncryptionPropertiesType(soap, data, "xenc:EncryptionPropertiesType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct xenc__EncryptionPropertiesType * SOAP_FMAC4 soap_get_xenc__EncryptionPropertiesType(struct soap*, struct xenc__EncryptionPropertiesType *, const char*, const char*);

#ifndef soap_read_xenc__EncryptionPropertiesType
#define soap_read_xenc__EncryptionPropertiesType(soap, data) ( soap_begin_recv(soap) || !soap_get_xenc__EncryptionPropertiesType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct xenc__EncryptionPropertiesType * SOAP_FMAC2 soap_instantiate_xenc__EncryptionPropertiesType(struct soap*, int, const char*, const char*, size_t*);

inline struct xenc__EncryptionPropertiesType * soap_new_xenc__EncryptionPropertiesType(struct soap *soap, int n = -1) { return soap_instantiate_xenc__EncryptionPropertiesType(soap, n, NULL, NULL, NULL); }

inline struct xenc__EncryptionPropertiesType * soap_new_req_xenc__EncryptionPropertiesType(struct soap *soap, int __sizeEncryptionProperty, struct xenc__EncryptionPropertyType *EncryptionProperty) { struct xenc__EncryptionPropertiesType *_p = soap_instantiate_xenc__EncryptionPropertiesType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xenc__EncryptionPropertiesType(soap, _p); _p->__sizeEncryptionProperty = __sizeEncryptionProperty; _p->EncryptionProperty = EncryptionProperty; } return _p; }

inline struct xenc__EncryptionPropertiesType * soap_new_set_xenc__EncryptionPropertiesType(struct soap *soap, int __sizeEncryptionProperty, struct xenc__EncryptionPropertyType *EncryptionProperty, char *Id) { struct xenc__EncryptionPropertiesType *_p = soap_instantiate_xenc__EncryptionPropertiesType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xenc__EncryptionPropertiesType(soap, _p); _p->__sizeEncryptionProperty = __sizeEncryptionProperty; _p->EncryptionProperty = EncryptionProperty; _p->Id = Id; } return _p; }

inline void soap_delete_xenc__EncryptionPropertiesType(struct soap *soap, struct xenc__EncryptionPropertiesType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xenc__EncryptionPropertiesType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xenc__ReferenceType
#define SOAP_TYPE_xenc__ReferenceType (119)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__ReferenceType(struct soap*, struct xenc__ReferenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__ReferenceType(struct soap*, const struct xenc__ReferenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__ReferenceType(struct soap*, const char*, int, const struct xenc__ReferenceType *, const char*);
SOAP_FMAC3 struct xenc__ReferenceType * SOAP_FMAC4 soap_in_xenc__ReferenceType(struct soap*, const char*, struct xenc__ReferenceType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__ReferenceType(struct soap*, const struct xenc__ReferenceType *, const char*, const char*);

#ifndef soap_write_xenc__ReferenceType
#define soap_write_xenc__ReferenceType(soap, data) ( soap_begin(soap), soap_serialize_xenc__ReferenceType(soap, data), soap_begin_send(soap) || soap_put_xenc__ReferenceType(soap, data, "xenc:ReferenceType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct xenc__ReferenceType * SOAP_FMAC4 soap_get_xenc__ReferenceType(struct soap*, struct xenc__ReferenceType *, const char*, const char*);

#ifndef soap_read_xenc__ReferenceType
#define soap_read_xenc__ReferenceType(soap, data) ( soap_begin_recv(soap) || !soap_get_xenc__ReferenceType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct xenc__ReferenceType * SOAP_FMAC2 soap_instantiate_xenc__ReferenceType(struct soap*, int, const char*, const char*, size_t*);

inline struct xenc__ReferenceType * soap_new_xenc__ReferenceType(struct soap *soap, int n = -1) { return soap_instantiate_xenc__ReferenceType(soap, n, NULL, NULL, NULL); }

inline struct xenc__ReferenceType * soap_new_req_xenc__ReferenceType(struct soap *soap, char *URI) { struct xenc__ReferenceType *_p = soap_instantiate_xenc__ReferenceType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xenc__ReferenceType(soap, _p); _p->URI = URI; } return _p; }

inline struct xenc__ReferenceType * soap_new_set_xenc__ReferenceType(struct soap *soap, char *URI) { struct xenc__ReferenceType *_p = soap_instantiate_xenc__ReferenceType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xenc__ReferenceType(soap, _p); _p->URI = URI; } return _p; }

inline void soap_delete_xenc__ReferenceType(struct soap *soap, struct xenc__ReferenceType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xenc__ReferenceType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xenc__AgreementMethodType
#define SOAP_TYPE_xenc__AgreementMethodType (118)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__AgreementMethodType(struct soap*, struct xenc__AgreementMethodType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__AgreementMethodType(struct soap*, const struct xenc__AgreementMethodType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__AgreementMethodType(struct soap*, const char*, int, const struct xenc__AgreementMethodType *, const char*);
SOAP_FMAC3 struct xenc__AgreementMethodType * SOAP_FMAC4 soap_in_xenc__AgreementMethodType(struct soap*, const char*, struct xenc__AgreementMethodType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__AgreementMethodType(struct soap*, const struct xenc__AgreementMethodType *, const char*, const char*);

#ifndef soap_write_xenc__AgreementMethodType
#define soap_write_xenc__AgreementMethodType(soap, data) ( soap_begin(soap), soap_serialize_xenc__AgreementMethodType(soap, data), soap_begin_send(soap) || soap_put_xenc__AgreementMethodType(soap, data, "xenc:AgreementMethodType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct xenc__AgreementMethodType * SOAP_FMAC4 soap_get_xenc__AgreementMethodType(struct soap*, struct xenc__AgreementMethodType *, const char*, const char*);

#ifndef soap_read_xenc__AgreementMethodType
#define soap_read_xenc__AgreementMethodType(soap, data) ( soap_begin_recv(soap) || !soap_get_xenc__AgreementMethodType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct xenc__AgreementMethodType * SOAP_FMAC2 soap_instantiate_xenc__AgreementMethodType(struct soap*, int, const char*, const char*, size_t*);

inline struct xenc__AgreementMethodType * soap_new_xenc__AgreementMethodType(struct soap *soap, int n = -1) { return soap_instantiate_xenc__AgreementMethodType(soap, n, NULL, NULL, NULL); }

inline struct xenc__AgreementMethodType * soap_new_req_xenc__AgreementMethodType(struct soap *soap, char *Algorithm) { struct xenc__AgreementMethodType *_p = soap_instantiate_xenc__AgreementMethodType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xenc__AgreementMethodType(soap, _p); _p->Algorithm = Algorithm; } return _p; }

inline struct xenc__AgreementMethodType * soap_new_set_xenc__AgreementMethodType(struct soap *soap, char *KA_Nonce, struct ds__KeyInfoType *OriginatorKeyInfo, struct ds__KeyInfoType *RecipientKeyInfo, char *Algorithm, char *__mixed) { struct xenc__AgreementMethodType *_p = soap_instantiate_xenc__AgreementMethodType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xenc__AgreementMethodType(soap, _p); _p->KA_Nonce = KA_Nonce; _p->OriginatorKeyInfo = OriginatorKeyInfo; _p->RecipientKeyInfo = RecipientKeyInfo; _p->Algorithm = Algorithm; _p->__mixed = __mixed; } return _p; }

inline void soap_delete_xenc__AgreementMethodType(struct soap *soap, struct xenc__AgreementMethodType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xenc__AgreementMethodType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xenc__EncryptedKeyType
#define SOAP_TYPE_xenc__EncryptedKeyType (117)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__EncryptedKeyType(struct soap*, struct xenc__EncryptedKeyType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__EncryptedKeyType(struct soap*, const struct xenc__EncryptedKeyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__EncryptedKeyType(struct soap*, const char*, int, const struct xenc__EncryptedKeyType *, const char*);
SOAP_FMAC3 struct xenc__EncryptedKeyType * SOAP_FMAC4 soap_in_xenc__EncryptedKeyType(struct soap*, const char*, struct xenc__EncryptedKeyType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__EncryptedKeyType(struct soap*, const struct xenc__EncryptedKeyType *, const char*, const char*);

#ifndef soap_write_xenc__EncryptedKeyType
#define soap_write_xenc__EncryptedKeyType(soap, data) ( soap_begin(soap), soap_serialize_xenc__EncryptedKeyType(soap, data), soap_begin_send(soap) || soap_put_xenc__EncryptedKeyType(soap, data, "xenc:EncryptedKeyType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct xenc__EncryptedKeyType * SOAP_FMAC4 soap_get_xenc__EncryptedKeyType(struct soap*, struct xenc__EncryptedKeyType *, const char*, const char*);

#ifndef soap_read_xenc__EncryptedKeyType
#define soap_read_xenc__EncryptedKeyType(soap, data) ( soap_begin_recv(soap) || !soap_get_xenc__EncryptedKeyType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct xenc__EncryptedKeyType * SOAP_FMAC2 soap_instantiate_xenc__EncryptedKeyType(struct soap*, int, const char*, const char*, size_t*);

inline struct xenc__EncryptedKeyType * soap_new_xenc__EncryptedKeyType(struct soap *soap, int n = -1) { return soap_instantiate_xenc__EncryptedKeyType(soap, n, NULL, NULL, NULL); }

inline struct xenc__EncryptedKeyType * soap_new_req_xenc__EncryptedKeyType(struct soap *soap, struct xenc__CipherDataType *CipherData) { struct xenc__EncryptedKeyType *_p = soap_instantiate_xenc__EncryptedKeyType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xenc__EncryptedKeyType(soap, _p); _p->CipherData = CipherData; } return _p; }

inline struct xenc__EncryptedKeyType * soap_new_set_xenc__EncryptedKeyType(struct soap *soap, struct xenc__EncryptionMethodType *EncryptionMethod, struct ds__KeyInfoType *ds__KeyInfo, struct xenc__CipherDataType *CipherData, struct xenc__EncryptionPropertiesType *EncryptionProperties, char *Id, char *Type, char *MimeType, char *Encoding, struct _xenc__ReferenceList *ReferenceList, char *CarriedKeyName, char *Recipient) { struct xenc__EncryptedKeyType *_p = soap_instantiate_xenc__EncryptedKeyType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xenc__EncryptedKeyType(soap, _p); _p->EncryptionMethod = EncryptionMethod; _p->ds__KeyInfo = ds__KeyInfo; _p->CipherData = CipherData; _p->EncryptionProperties = EncryptionProperties; _p->Id = Id; _p->Type = Type; _p->MimeType = MimeType; _p->Encoding = Encoding; _p->ReferenceList = ReferenceList; _p->CarriedKeyName = CarriedKeyName; _p->Recipient = Recipient; } return _p; }

inline void soap_delete_xenc__EncryptedKeyType(struct soap *soap, struct xenc__EncryptedKeyType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xenc__EncryptedKeyType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xenc__EncryptedDataType
#define SOAP_TYPE_xenc__EncryptedDataType (116)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__EncryptedDataType(struct soap*, struct xenc__EncryptedDataType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__EncryptedDataType(struct soap*, const struct xenc__EncryptedDataType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__EncryptedDataType(struct soap*, const char*, int, const struct xenc__EncryptedDataType *, const char*);
SOAP_FMAC3 struct xenc__EncryptedDataType * SOAP_FMAC4 soap_in_xenc__EncryptedDataType(struct soap*, const char*, struct xenc__EncryptedDataType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__EncryptedDataType(struct soap*, const struct xenc__EncryptedDataType *, const char*, const char*);

#ifndef soap_write_xenc__EncryptedDataType
#define soap_write_xenc__EncryptedDataType(soap, data) ( soap_begin(soap), soap_serialize_xenc__EncryptedDataType(soap, data), soap_begin_send(soap) || soap_put_xenc__EncryptedDataType(soap, data, "xenc:EncryptedDataType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct xenc__EncryptedDataType * SOAP_FMAC4 soap_get_xenc__EncryptedDataType(struct soap*, struct xenc__EncryptedDataType *, const char*, const char*);

#ifndef soap_read_xenc__EncryptedDataType
#define soap_read_xenc__EncryptedDataType(soap, data) ( soap_begin_recv(soap) || !soap_get_xenc__EncryptedDataType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct xenc__EncryptedDataType * SOAP_FMAC2 soap_instantiate_xenc__EncryptedDataType(struct soap*, int, const char*, const char*, size_t*);

inline struct xenc__EncryptedDataType * soap_new_xenc__EncryptedDataType(struct soap *soap, int n = -1) { return soap_instantiate_xenc__EncryptedDataType(soap, n, NULL, NULL, NULL); }

inline struct xenc__EncryptedDataType * soap_new_req_xenc__EncryptedDataType(struct soap *soap, struct xenc__CipherDataType *CipherData) { struct xenc__EncryptedDataType *_p = soap_instantiate_xenc__EncryptedDataType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xenc__EncryptedDataType(soap, _p); _p->CipherData = CipherData; } return _p; }

inline struct xenc__EncryptedDataType * soap_new_set_xenc__EncryptedDataType(struct soap *soap, struct xenc__EncryptionMethodType *EncryptionMethod, struct ds__KeyInfoType *ds__KeyInfo, struct xenc__CipherDataType *CipherData, struct xenc__EncryptionPropertiesType *EncryptionProperties, char *Id, char *Type, char *MimeType, char *Encoding) { struct xenc__EncryptedDataType *_p = soap_instantiate_xenc__EncryptedDataType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xenc__EncryptedDataType(soap, _p); _p->EncryptionMethod = EncryptionMethod; _p->ds__KeyInfo = ds__KeyInfo; _p->CipherData = CipherData; _p->EncryptionProperties = EncryptionProperties; _p->Id = Id; _p->Type = Type; _p->MimeType = MimeType; _p->Encoding = Encoding; } return _p; }

inline void soap_delete_xenc__EncryptedDataType(struct soap *soap, struct xenc__EncryptedDataType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xenc__EncryptedDataType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xenc__TransformsType
#define SOAP_TYPE_xenc__TransformsType (115)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__TransformsType(struct soap*, struct xenc__TransformsType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__TransformsType(struct soap*, const struct xenc__TransformsType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__TransformsType(struct soap*, const char*, int, const struct xenc__TransformsType *, const char*);
SOAP_FMAC3 struct xenc__TransformsType * SOAP_FMAC4 soap_in_xenc__TransformsType(struct soap*, const char*, struct xenc__TransformsType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__TransformsType(struct soap*, const struct xenc__TransformsType *, const char*, const char*);

#ifndef soap_write_xenc__TransformsType
#define soap_write_xenc__TransformsType(soap, data) ( soap_begin(soap), soap_serialize_xenc__TransformsType(soap, data), soap_begin_send(soap) || soap_put_xenc__TransformsType(soap, data, "xenc:TransformsType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct xenc__TransformsType * SOAP_FMAC4 soap_get_xenc__TransformsType(struct soap*, struct xenc__TransformsType *, const char*, const char*);

#ifndef soap_read_xenc__TransformsType
#define soap_read_xenc__TransformsType(soap, data) ( soap_begin_recv(soap) || !soap_get_xenc__TransformsType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct xenc__TransformsType * SOAP_FMAC2 soap_instantiate_xenc__TransformsType(struct soap*, int, const char*, const char*, size_t*);

inline struct xenc__TransformsType * soap_new_xenc__TransformsType(struct soap *soap, int n = -1) { return soap_instantiate_xenc__TransformsType(soap, n, NULL, NULL, NULL); }

inline struct xenc__TransformsType * soap_new_req_xenc__TransformsType(struct soap *soap, struct ds__TransformType& ds__Transform) { struct xenc__TransformsType *_p = soap_instantiate_xenc__TransformsType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xenc__TransformsType(soap, _p); _p->ds__Transform = ds__Transform; } return _p; }

inline struct xenc__TransformsType * soap_new_set_xenc__TransformsType(struct soap *soap, struct ds__TransformType& ds__Transform) { struct xenc__TransformsType *_p = soap_instantiate_xenc__TransformsType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xenc__TransformsType(soap, _p); _p->ds__Transform = ds__Transform; } return _p; }

inline void soap_delete_xenc__TransformsType(struct soap *soap, struct xenc__TransformsType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xenc__TransformsType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xenc__CipherReferenceType
#define SOAP_TYPE_xenc__CipherReferenceType (114)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__CipherReferenceType(struct soap*, struct xenc__CipherReferenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__CipherReferenceType(struct soap*, const struct xenc__CipherReferenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__CipherReferenceType(struct soap*, const char*, int, const struct xenc__CipherReferenceType *, const char*);
SOAP_FMAC3 struct xenc__CipherReferenceType * SOAP_FMAC4 soap_in_xenc__CipherReferenceType(struct soap*, const char*, struct xenc__CipherReferenceType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__CipherReferenceType(struct soap*, const struct xenc__CipherReferenceType *, const char*, const char*);

#ifndef soap_write_xenc__CipherReferenceType
#define soap_write_xenc__CipherReferenceType(soap, data) ( soap_begin(soap), soap_serialize_xenc__CipherReferenceType(soap, data), soap_begin_send(soap) || soap_put_xenc__CipherReferenceType(soap, data, "xenc:CipherReferenceType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct xenc__CipherReferenceType * SOAP_FMAC4 soap_get_xenc__CipherReferenceType(struct soap*, struct xenc__CipherReferenceType *, const char*, const char*);

#ifndef soap_read_xenc__CipherReferenceType
#define soap_read_xenc__CipherReferenceType(soap, data) ( soap_begin_recv(soap) || !soap_get_xenc__CipherReferenceType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct xenc__CipherReferenceType * SOAP_FMAC2 soap_instantiate_xenc__CipherReferenceType(struct soap*, int, const char*, const char*, size_t*);

inline struct xenc__CipherReferenceType * soap_new_xenc__CipherReferenceType(struct soap *soap, int n = -1) { return soap_instantiate_xenc__CipherReferenceType(soap, n, NULL, NULL, NULL); }

inline struct xenc__CipherReferenceType * soap_new_req_xenc__CipherReferenceType(struct soap *soap, char *URI) { struct xenc__CipherReferenceType *_p = soap_instantiate_xenc__CipherReferenceType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xenc__CipherReferenceType(soap, _p); _p->URI = URI; } return _p; }

inline struct xenc__CipherReferenceType * soap_new_set_xenc__CipherReferenceType(struct soap *soap, struct xenc__TransformsType *Transforms, char *URI) { struct xenc__CipherReferenceType *_p = soap_instantiate_xenc__CipherReferenceType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xenc__CipherReferenceType(soap, _p); _p->Transforms = Transforms; _p->URI = URI; } return _p; }

inline void soap_delete_xenc__CipherReferenceType(struct soap *soap, struct xenc__CipherReferenceType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xenc__CipherReferenceType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xenc__CipherDataType
#define SOAP_TYPE_xenc__CipherDataType (113)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__CipherDataType(struct soap*, struct xenc__CipherDataType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__CipherDataType(struct soap*, const struct xenc__CipherDataType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__CipherDataType(struct soap*, const char*, int, const struct xenc__CipherDataType *, const char*);
SOAP_FMAC3 struct xenc__CipherDataType * SOAP_FMAC4 soap_in_xenc__CipherDataType(struct soap*, const char*, struct xenc__CipherDataType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__CipherDataType(struct soap*, const struct xenc__CipherDataType *, const char*, const char*);

#ifndef soap_write_xenc__CipherDataType
#define soap_write_xenc__CipherDataType(soap, data) ( soap_begin(soap), soap_serialize_xenc__CipherDataType(soap, data), soap_begin_send(soap) || soap_put_xenc__CipherDataType(soap, data, "xenc:CipherDataType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct xenc__CipherDataType * SOAP_FMAC4 soap_get_xenc__CipherDataType(struct soap*, struct xenc__CipherDataType *, const char*, const char*);

#ifndef soap_read_xenc__CipherDataType
#define soap_read_xenc__CipherDataType(soap, data) ( soap_begin_recv(soap) || !soap_get_xenc__CipherDataType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct xenc__CipherDataType * SOAP_FMAC2 soap_instantiate_xenc__CipherDataType(struct soap*, int, const char*, const char*, size_t*);

inline struct xenc__CipherDataType * soap_new_xenc__CipherDataType(struct soap *soap, int n = -1) { return soap_instantiate_xenc__CipherDataType(soap, n, NULL, NULL, NULL); }

inline struct xenc__CipherDataType * soap_new_req_xenc__CipherDataType(struct soap *soap) { struct xenc__CipherDataType *_p = soap_instantiate_xenc__CipherDataType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xenc__CipherDataType(soap, _p); } return _p; }

inline struct xenc__CipherDataType * soap_new_set_xenc__CipherDataType(struct soap *soap, char *CipherValue, struct xenc__CipherReferenceType *CipherReference) { struct xenc__CipherDataType *_p = soap_instantiate_xenc__CipherDataType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xenc__CipherDataType(soap, _p); _p->CipherValue = CipherValue; _p->CipherReference = CipherReference; } return _p; }

inline void soap_delete_xenc__CipherDataType(struct soap *soap, struct xenc__CipherDataType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xenc__CipherDataType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xenc__EncryptionMethodType
#define SOAP_TYPE_xenc__EncryptionMethodType (112)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__EncryptionMethodType(struct soap*, struct xenc__EncryptionMethodType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__EncryptionMethodType(struct soap*, const struct xenc__EncryptionMethodType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__EncryptionMethodType(struct soap*, const char*, int, const struct xenc__EncryptionMethodType *, const char*);
SOAP_FMAC3 struct xenc__EncryptionMethodType * SOAP_FMAC4 soap_in_xenc__EncryptionMethodType(struct soap*, const char*, struct xenc__EncryptionMethodType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__EncryptionMethodType(struct soap*, const struct xenc__EncryptionMethodType *, const char*, const char*);

#ifndef soap_write_xenc__EncryptionMethodType
#define soap_write_xenc__EncryptionMethodType(soap, data) ( soap_begin(soap), soap_serialize_xenc__EncryptionMethodType(soap, data), soap_begin_send(soap) || soap_put_xenc__EncryptionMethodType(soap, data, "xenc:EncryptionMethodType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct xenc__EncryptionMethodType * SOAP_FMAC4 soap_get_xenc__EncryptionMethodType(struct soap*, struct xenc__EncryptionMethodType *, const char*, const char*);

#ifndef soap_read_xenc__EncryptionMethodType
#define soap_read_xenc__EncryptionMethodType(soap, data) ( soap_begin_recv(soap) || !soap_get_xenc__EncryptionMethodType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct xenc__EncryptionMethodType * SOAP_FMAC2 soap_instantiate_xenc__EncryptionMethodType(struct soap*, int, const char*, const char*, size_t*);

inline struct xenc__EncryptionMethodType * soap_new_xenc__EncryptionMethodType(struct soap *soap, int n = -1) { return soap_instantiate_xenc__EncryptionMethodType(soap, n, NULL, NULL, NULL); }

inline struct xenc__EncryptionMethodType * soap_new_req_xenc__EncryptionMethodType(struct soap *soap, char *Algorithm) { struct xenc__EncryptionMethodType *_p = soap_instantiate_xenc__EncryptionMethodType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xenc__EncryptionMethodType(soap, _p); _p->Algorithm = Algorithm; } return _p; }

inline struct xenc__EncryptionMethodType * soap_new_set_xenc__EncryptionMethodType(struct soap *soap, int *KeySize, char *OAEPparams, char *Algorithm, struct ds__DigestMethodType *ds__DigestMethod, char *__mixed) { struct xenc__EncryptionMethodType *_p = soap_instantiate_xenc__EncryptionMethodType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xenc__EncryptionMethodType(soap, _p); _p->KeySize = KeySize; _p->OAEPparams = OAEPparams; _p->Algorithm = Algorithm; _p->ds__DigestMethod = ds__DigestMethod; _p->__mixed = __mixed; } return _p; }

inline void soap_delete_xenc__EncryptionMethodType(struct soap *soap, struct xenc__EncryptionMethodType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xenc__EncryptionMethodType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xenc__EncryptedType
#define SOAP_TYPE_xenc__EncryptedType (111)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__EncryptedType(struct soap*, struct xenc__EncryptedType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__EncryptedType(struct soap*, const struct xenc__EncryptedType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__EncryptedType(struct soap*, const char*, int, const struct xenc__EncryptedType *, const char*);
SOAP_FMAC3 struct xenc__EncryptedType * SOAP_FMAC4 soap_in_xenc__EncryptedType(struct soap*, const char*, struct xenc__EncryptedType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__EncryptedType(struct soap*, const struct xenc__EncryptedType *, const char*, const char*);

#ifndef soap_write_xenc__EncryptedType
#define soap_write_xenc__EncryptedType(soap, data) ( soap_begin(soap), soap_serialize_xenc__EncryptedType(soap, data), soap_begin_send(soap) || soap_put_xenc__EncryptedType(soap, data, "xenc:EncryptedType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct xenc__EncryptedType * SOAP_FMAC4 soap_get_xenc__EncryptedType(struct soap*, struct xenc__EncryptedType *, const char*, const char*);

#ifndef soap_read_xenc__EncryptedType
#define soap_read_xenc__EncryptedType(soap, data) ( soap_begin_recv(soap) || !soap_get_xenc__EncryptedType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct xenc__EncryptedType * SOAP_FMAC2 soap_instantiate_xenc__EncryptedType(struct soap*, int, const char*, const char*, size_t*);

inline struct xenc__EncryptedType * soap_new_xenc__EncryptedType(struct soap *soap, int n = -1) { return soap_instantiate_xenc__EncryptedType(soap, n, NULL, NULL, NULL); }

inline struct xenc__EncryptedType * soap_new_req_xenc__EncryptedType(struct soap *soap, struct xenc__CipherDataType *CipherData) { struct xenc__EncryptedType *_p = soap_instantiate_xenc__EncryptedType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xenc__EncryptedType(soap, _p); _p->CipherData = CipherData; } return _p; }

inline struct xenc__EncryptedType * soap_new_set_xenc__EncryptedType(struct soap *soap, struct xenc__EncryptionMethodType *EncryptionMethod, struct ds__KeyInfoType *ds__KeyInfo, struct xenc__CipherDataType *CipherData, struct xenc__EncryptionPropertiesType *EncryptionProperties, char *Id, char *Type, char *MimeType, char *Encoding) { struct xenc__EncryptedType *_p = soap_instantiate_xenc__EncryptedType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xenc__EncryptedType(soap, _p); _p->EncryptionMethod = EncryptionMethod; _p->ds__KeyInfo = ds__KeyInfo; _p->CipherData = CipherData; _p->EncryptionProperties = EncryptionProperties; _p->Id = Id; _p->Type = Type; _p->MimeType = MimeType; _p->Encoding = Encoding; } return _p; }

inline void soap_delete_xenc__EncryptedType(struct soap *soap, struct xenc__EncryptedType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xenc__EncryptedType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ds__RSAKeyValueType
#define SOAP_TYPE_ds__RSAKeyValueType (100)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__RSAKeyValueType(struct soap*, struct ds__RSAKeyValueType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__RSAKeyValueType(struct soap*, const struct ds__RSAKeyValueType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__RSAKeyValueType(struct soap*, const char*, int, const struct ds__RSAKeyValueType *, const char*);
SOAP_FMAC3 struct ds__RSAKeyValueType * SOAP_FMAC4 soap_in_ds__RSAKeyValueType(struct soap*, const char*, struct ds__RSAKeyValueType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__RSAKeyValueType(struct soap*, const struct ds__RSAKeyValueType *, const char*, const char*);

#ifndef soap_write_ds__RSAKeyValueType
#define soap_write_ds__RSAKeyValueType(soap, data) ( soap_begin(soap), soap_serialize_ds__RSAKeyValueType(soap, data), soap_begin_send(soap) || soap_put_ds__RSAKeyValueType(soap, data, "ds:RSAKeyValueType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__RSAKeyValueType * SOAP_FMAC4 soap_get_ds__RSAKeyValueType(struct soap*, struct ds__RSAKeyValueType *, const char*, const char*);

#ifndef soap_read_ds__RSAKeyValueType
#define soap_read_ds__RSAKeyValueType(soap, data) ( soap_begin_recv(soap) || !soap_get_ds__RSAKeyValueType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ds__RSAKeyValueType * SOAP_FMAC2 soap_instantiate_ds__RSAKeyValueType(struct soap*, int, const char*, const char*, size_t*);

inline struct ds__RSAKeyValueType * soap_new_ds__RSAKeyValueType(struct soap *soap, int n = -1) { return soap_instantiate_ds__RSAKeyValueType(soap, n, NULL, NULL, NULL); }

inline struct ds__RSAKeyValueType * soap_new_req_ds__RSAKeyValueType(struct soap *soap, char *Modulus, char *Exponent) { struct ds__RSAKeyValueType *_p = soap_instantiate_ds__RSAKeyValueType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__RSAKeyValueType(soap, _p); _p->Modulus = Modulus; _p->Exponent = Exponent; } return _p; }

inline struct ds__RSAKeyValueType * soap_new_set_ds__RSAKeyValueType(struct soap *soap, char *Modulus, char *Exponent) { struct ds__RSAKeyValueType *_p = soap_instantiate_ds__RSAKeyValueType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__RSAKeyValueType(soap, _p); _p->Modulus = Modulus; _p->Exponent = Exponent; } return _p; }

inline void soap_delete_ds__RSAKeyValueType(struct soap *soap, struct ds__RSAKeyValueType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ds__RSAKeyValueType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ds__DSAKeyValueType
#define SOAP_TYPE_ds__DSAKeyValueType (99)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__DSAKeyValueType(struct soap*, struct ds__DSAKeyValueType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__DSAKeyValueType(struct soap*, const struct ds__DSAKeyValueType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__DSAKeyValueType(struct soap*, const char*, int, const struct ds__DSAKeyValueType *, const char*);
SOAP_FMAC3 struct ds__DSAKeyValueType * SOAP_FMAC4 soap_in_ds__DSAKeyValueType(struct soap*, const char*, struct ds__DSAKeyValueType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__DSAKeyValueType(struct soap*, const struct ds__DSAKeyValueType *, const char*, const char*);

#ifndef soap_write_ds__DSAKeyValueType
#define soap_write_ds__DSAKeyValueType(soap, data) ( soap_begin(soap), soap_serialize_ds__DSAKeyValueType(soap, data), soap_begin_send(soap) || soap_put_ds__DSAKeyValueType(soap, data, "ds:DSAKeyValueType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__DSAKeyValueType * SOAP_FMAC4 soap_get_ds__DSAKeyValueType(struct soap*, struct ds__DSAKeyValueType *, const char*, const char*);

#ifndef soap_read_ds__DSAKeyValueType
#define soap_read_ds__DSAKeyValueType(soap, data) ( soap_begin_recv(soap) || !soap_get_ds__DSAKeyValueType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ds__DSAKeyValueType * SOAP_FMAC2 soap_instantiate_ds__DSAKeyValueType(struct soap*, int, const char*, const char*, size_t*);

inline struct ds__DSAKeyValueType * soap_new_ds__DSAKeyValueType(struct soap *soap, int n = -1) { return soap_instantiate_ds__DSAKeyValueType(soap, n, NULL, NULL, NULL); }

inline struct ds__DSAKeyValueType * soap_new_req_ds__DSAKeyValueType(struct soap *soap, char *Y, char *P, char *Q, char *Seed, char *PgenCounter) { struct ds__DSAKeyValueType *_p = soap_instantiate_ds__DSAKeyValueType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__DSAKeyValueType(soap, _p); _p->Y = Y; _p->P = P; _p->Q = Q; _p->Seed = Seed; _p->PgenCounter = PgenCounter; } return _p; }

inline struct ds__DSAKeyValueType * soap_new_set_ds__DSAKeyValueType(struct soap *soap, char *G, char *Y, char *J, char *P, char *Q, char *Seed, char *PgenCounter) { struct ds__DSAKeyValueType *_p = soap_instantiate_ds__DSAKeyValueType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__DSAKeyValueType(soap, _p); _p->G = G; _p->Y = Y; _p->J = J; _p->P = P; _p->Q = Q; _p->Seed = Seed; _p->PgenCounter = PgenCounter; } return _p; }

inline void soap_delete_ds__DSAKeyValueType(struct soap *soap, struct ds__DSAKeyValueType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ds__DSAKeyValueType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ds__X509IssuerSerialType
#define SOAP_TYPE_ds__X509IssuerSerialType (98)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__X509IssuerSerialType(struct soap*, struct ds__X509IssuerSerialType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__X509IssuerSerialType(struct soap*, const struct ds__X509IssuerSerialType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__X509IssuerSerialType(struct soap*, const char*, int, const struct ds__X509IssuerSerialType *, const char*);
SOAP_FMAC3 struct ds__X509IssuerSerialType * SOAP_FMAC4 soap_in_ds__X509IssuerSerialType(struct soap*, const char*, struct ds__X509IssuerSerialType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__X509IssuerSerialType(struct soap*, const struct ds__X509IssuerSerialType *, const char*, const char*);

#ifndef soap_write_ds__X509IssuerSerialType
#define soap_write_ds__X509IssuerSerialType(soap, data) ( soap_begin(soap), soap_serialize_ds__X509IssuerSerialType(soap, data), soap_begin_send(soap) || soap_put_ds__X509IssuerSerialType(soap, data, "ds:X509IssuerSerialType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__X509IssuerSerialType * SOAP_FMAC4 soap_get_ds__X509IssuerSerialType(struct soap*, struct ds__X509IssuerSerialType *, const char*, const char*);

#ifndef soap_read_ds__X509IssuerSerialType
#define soap_read_ds__X509IssuerSerialType(soap, data) ( soap_begin_recv(soap) || !soap_get_ds__X509IssuerSerialType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ds__X509IssuerSerialType * SOAP_FMAC2 soap_instantiate_ds__X509IssuerSerialType(struct soap*, int, const char*, const char*, size_t*);

inline struct ds__X509IssuerSerialType * soap_new_ds__X509IssuerSerialType(struct soap *soap, int n = -1) { return soap_instantiate_ds__X509IssuerSerialType(soap, n, NULL, NULL, NULL); }

inline struct ds__X509IssuerSerialType * soap_new_req_ds__X509IssuerSerialType(struct soap *soap, char *X509IssuerName, char *X509SerialNumber) { struct ds__X509IssuerSerialType *_p = soap_instantiate_ds__X509IssuerSerialType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__X509IssuerSerialType(soap, _p); _p->X509IssuerName = X509IssuerName; _p->X509SerialNumber = X509SerialNumber; } return _p; }

inline struct ds__X509IssuerSerialType * soap_new_set_ds__X509IssuerSerialType(struct soap *soap, char *X509IssuerName, char *X509SerialNumber) { struct ds__X509IssuerSerialType *_p = soap_instantiate_ds__X509IssuerSerialType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__X509IssuerSerialType(soap, _p); _p->X509IssuerName = X509IssuerName; _p->X509SerialNumber = X509SerialNumber; } return _p; }

inline void soap_delete_ds__X509IssuerSerialType(struct soap *soap, struct ds__X509IssuerSerialType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ds__X509IssuerSerialType(struct soap*, int, int, void*, size_t, const void*, size_t);

/* _ds__KeyInfo is a typedef element/attribute synonym for ds__KeyInfoType */

#ifndef SOAP_TYPE__ds__KeyInfo
#define SOAP_TYPE__ds__KeyInfo (97)
#endif

#define soap_default__ds__KeyInfo(soap, a) soap_default_ds__KeyInfoType(soap, a)


#define soap_serialize__ds__KeyInfo soap_serialize_ds__KeyInfoType


#define soap_out__ds__KeyInfo soap_out_ds__KeyInfoType


#define soap_in__ds__KeyInfo soap_in_ds__KeyInfoType


#define soap_put__ds__KeyInfo soap_put_ds__KeyInfoType


#define soap_get__ds__KeyInfo soap_get_ds__KeyInfoType


#define soap_instantiate__ds__KeyInfo soap_instantiate_ds__KeyInfoType


#define soap_copy__ds__KeyInfo soap_copy_ds__KeyInfoType

#ifndef SOAP_TYPE_ds__RetrievalMethodType
#define SOAP_TYPE_ds__RetrievalMethodType (94)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__RetrievalMethodType(struct soap*, struct ds__RetrievalMethodType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__RetrievalMethodType(struct soap*, const struct ds__RetrievalMethodType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__RetrievalMethodType(struct soap*, const char*, int, const struct ds__RetrievalMethodType *, const char*);
SOAP_FMAC3 struct ds__RetrievalMethodType * SOAP_FMAC4 soap_in_ds__RetrievalMethodType(struct soap*, const char*, struct ds__RetrievalMethodType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__RetrievalMethodType(struct soap*, const struct ds__RetrievalMethodType *, const char*, const char*);

#ifndef soap_write_ds__RetrievalMethodType
#define soap_write_ds__RetrievalMethodType(soap, data) ( soap_begin(soap), soap_serialize_ds__RetrievalMethodType(soap, data), soap_begin_send(soap) || soap_put_ds__RetrievalMethodType(soap, data, "ds:RetrievalMethodType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__RetrievalMethodType * SOAP_FMAC4 soap_get_ds__RetrievalMethodType(struct soap*, struct ds__RetrievalMethodType *, const char*, const char*);

#ifndef soap_read_ds__RetrievalMethodType
#define soap_read_ds__RetrievalMethodType(soap, data) ( soap_begin_recv(soap) || !soap_get_ds__RetrievalMethodType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ds__RetrievalMethodType * SOAP_FMAC2 soap_instantiate_ds__RetrievalMethodType(struct soap*, int, const char*, const char*, size_t*);

inline struct ds__RetrievalMethodType * soap_new_ds__RetrievalMethodType(struct soap *soap, int n = -1) { return soap_instantiate_ds__RetrievalMethodType(soap, n, NULL, NULL, NULL); }

inline struct ds__RetrievalMethodType * soap_new_req_ds__RetrievalMethodType(struct soap *soap) { struct ds__RetrievalMethodType *_p = soap_instantiate_ds__RetrievalMethodType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__RetrievalMethodType(soap, _p); } return _p; }

inline struct ds__RetrievalMethodType * soap_new_set_ds__RetrievalMethodType(struct soap *soap, struct ds__TransformsType *Transforms, char *URI, char *Type) { struct ds__RetrievalMethodType *_p = soap_instantiate_ds__RetrievalMethodType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__RetrievalMethodType(soap, _p); _p->Transforms = Transforms; _p->URI = URI; _p->Type = Type; } return _p; }

inline void soap_delete_ds__RetrievalMethodType(struct soap *soap, struct ds__RetrievalMethodType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ds__RetrievalMethodType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ds__KeyValueType
#define SOAP_TYPE_ds__KeyValueType (92)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__KeyValueType(struct soap*, struct ds__KeyValueType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__KeyValueType(struct soap*, const struct ds__KeyValueType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__KeyValueType(struct soap*, const char*, int, const struct ds__KeyValueType *, const char*);
SOAP_FMAC3 struct ds__KeyValueType * SOAP_FMAC4 soap_in_ds__KeyValueType(struct soap*, const char*, struct ds__KeyValueType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__KeyValueType(struct soap*, const struct ds__KeyValueType *, const char*, const char*);

#ifndef soap_write_ds__KeyValueType
#define soap_write_ds__KeyValueType(soap, data) ( soap_begin(soap), soap_serialize_ds__KeyValueType(soap, data), soap_begin_send(soap) || soap_put_ds__KeyValueType(soap, data, "ds:KeyValueType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__KeyValueType * SOAP_FMAC4 soap_get_ds__KeyValueType(struct soap*, struct ds__KeyValueType *, const char*, const char*);

#ifndef soap_read_ds__KeyValueType
#define soap_read_ds__KeyValueType(soap, data) ( soap_begin_recv(soap) || !soap_get_ds__KeyValueType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ds__KeyValueType * SOAP_FMAC2 soap_instantiate_ds__KeyValueType(struct soap*, int, const char*, const char*, size_t*);

inline struct ds__KeyValueType * soap_new_ds__KeyValueType(struct soap *soap, int n = -1) { return soap_instantiate_ds__KeyValueType(soap, n, NULL, NULL, NULL); }

inline struct ds__KeyValueType * soap_new_req_ds__KeyValueType(struct soap *soap) { struct ds__KeyValueType *_p = soap_instantiate_ds__KeyValueType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__KeyValueType(soap, _p); } return _p; }

inline struct ds__KeyValueType * soap_new_set_ds__KeyValueType(struct soap *soap, struct ds__DSAKeyValueType *DSAKeyValue, struct ds__RSAKeyValueType *RSAKeyValue) { struct ds__KeyValueType *_p = soap_instantiate_ds__KeyValueType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__KeyValueType(soap, _p); _p->DSAKeyValue = DSAKeyValue; _p->RSAKeyValue = RSAKeyValue; } return _p; }

inline void soap_delete_ds__KeyValueType(struct soap *soap, struct ds__KeyValueType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ds__KeyValueType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ds__DigestMethodType
#define SOAP_TYPE_ds__DigestMethodType (91)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__DigestMethodType(struct soap*, struct ds__DigestMethodType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__DigestMethodType(struct soap*, const struct ds__DigestMethodType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__DigestMethodType(struct soap*, const char*, int, const struct ds__DigestMethodType *, const char*);
SOAP_FMAC3 struct ds__DigestMethodType * SOAP_FMAC4 soap_in_ds__DigestMethodType(struct soap*, const char*, struct ds__DigestMethodType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__DigestMethodType(struct soap*, const struct ds__DigestMethodType *, const char*, const char*);

#ifndef soap_write_ds__DigestMethodType
#define soap_write_ds__DigestMethodType(soap, data) ( soap_begin(soap), soap_serialize_ds__DigestMethodType(soap, data), soap_begin_send(soap) || soap_put_ds__DigestMethodType(soap, data, "ds:DigestMethodType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__DigestMethodType * SOAP_FMAC4 soap_get_ds__DigestMethodType(struct soap*, struct ds__DigestMethodType *, const char*, const char*);

#ifndef soap_read_ds__DigestMethodType
#define soap_read_ds__DigestMethodType(soap, data) ( soap_begin_recv(soap) || !soap_get_ds__DigestMethodType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ds__DigestMethodType * SOAP_FMAC2 soap_instantiate_ds__DigestMethodType(struct soap*, int, const char*, const char*, size_t*);

inline struct ds__DigestMethodType * soap_new_ds__DigestMethodType(struct soap *soap, int n = -1) { return soap_instantiate_ds__DigestMethodType(soap, n, NULL, NULL, NULL); }

inline struct ds__DigestMethodType * soap_new_req_ds__DigestMethodType(struct soap *soap, char *Algorithm) { struct ds__DigestMethodType *_p = soap_instantiate_ds__DigestMethodType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__DigestMethodType(soap, _p); _p->Algorithm = Algorithm; } return _p; }

inline struct ds__DigestMethodType * soap_new_set_ds__DigestMethodType(struct soap *soap, char *Algorithm) { struct ds__DigestMethodType *_p = soap_instantiate_ds__DigestMethodType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__DigestMethodType(soap, _p); _p->Algorithm = Algorithm; } return _p; }

inline void soap_delete_ds__DigestMethodType(struct soap *soap, struct ds__DigestMethodType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ds__DigestMethodType(struct soap*, int, int, void*, size_t, const void*, size_t);

/* _ds__Transform is a typedef element/attribute synonym for ds__TransformType */

#ifndef SOAP_TYPE__ds__Transform
#define SOAP_TYPE__ds__Transform (90)
#endif

#define soap_default__ds__Transform(soap, a) soap_default_ds__TransformType(soap, a)


#define soap_serialize__ds__Transform soap_serialize_ds__TransformType


#define soap_out__ds__Transform soap_out_ds__TransformType


#define soap_in__ds__Transform soap_in_ds__TransformType


#define soap_put__ds__Transform soap_put_ds__TransformType


#define soap_get__ds__Transform soap_get_ds__TransformType


#define soap_instantiate__ds__Transform soap_instantiate_ds__TransformType


#define soap_copy__ds__Transform soap_copy_ds__TransformType

#ifndef SOAP_TYPE_ds__TransformType
#define SOAP_TYPE_ds__TransformType (88)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__TransformType(struct soap*, struct ds__TransformType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__TransformType(struct soap*, const struct ds__TransformType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__TransformType(struct soap*, const char*, int, const struct ds__TransformType *, const char*);
SOAP_FMAC3 struct ds__TransformType * SOAP_FMAC4 soap_in_ds__TransformType(struct soap*, const char*, struct ds__TransformType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__TransformType(struct soap*, const struct ds__TransformType *, const char*, const char*);

#ifndef soap_write_ds__TransformType
#define soap_write_ds__TransformType(soap, data) ( soap_begin(soap), soap_serialize_ds__TransformType(soap, data), soap_begin_send(soap) || soap_put_ds__TransformType(soap, data, "ds:TransformType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__TransformType * SOAP_FMAC4 soap_get_ds__TransformType(struct soap*, struct ds__TransformType *, const char*, const char*);

#ifndef soap_read_ds__TransformType
#define soap_read_ds__TransformType(soap, data) ( soap_begin_recv(soap) || !soap_get_ds__TransformType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ds__TransformType * SOAP_FMAC2 soap_instantiate_ds__TransformType(struct soap*, int, const char*, const char*, size_t*);

inline struct ds__TransformType * soap_new_ds__TransformType(struct soap *soap, int n = -1) { return soap_instantiate_ds__TransformType(soap, n, NULL, NULL, NULL); }

inline struct ds__TransformType * soap_new_req_ds__TransformType(struct soap *soap) { struct ds__TransformType *_p = soap_instantiate_ds__TransformType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__TransformType(soap, _p); } return _p; }

inline struct ds__TransformType * soap_new_set_ds__TransformType(struct soap *soap, struct _c14n__InclusiveNamespaces *c14n__InclusiveNamespaces, char *__any, char *Algorithm) { struct ds__TransformType *_p = soap_instantiate_ds__TransformType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__TransformType(soap, _p); _p->c14n__InclusiveNamespaces = c14n__InclusiveNamespaces; _p->__any = __any; _p->Algorithm = Algorithm; } return _p; }

inline void soap_delete_ds__TransformType(struct soap *soap, struct ds__TransformType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ds__TransformType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__c14n__InclusiveNamespaces
#define SOAP_TYPE__c14n__InclusiveNamespaces (87)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__c14n__InclusiveNamespaces(struct soap*, struct _c14n__InclusiveNamespaces *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__c14n__InclusiveNamespaces(struct soap*, const struct _c14n__InclusiveNamespaces *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__c14n__InclusiveNamespaces(struct soap*, const char*, int, const struct _c14n__InclusiveNamespaces *, const char*);
SOAP_FMAC3 struct _c14n__InclusiveNamespaces * SOAP_FMAC4 soap_in__c14n__InclusiveNamespaces(struct soap*, const char*, struct _c14n__InclusiveNamespaces *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put__c14n__InclusiveNamespaces(struct soap*, const struct _c14n__InclusiveNamespaces *, const char*, const char*);

#ifndef soap_write__c14n__InclusiveNamespaces
#define soap_write__c14n__InclusiveNamespaces(soap, data) ( soap_begin(soap), soap_serialize__c14n__InclusiveNamespaces(soap, data), soap_begin_send(soap) || soap_put__c14n__InclusiveNamespaces(soap, data, "c14n:InclusiveNamespaces", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _c14n__InclusiveNamespaces * SOAP_FMAC4 soap_get__c14n__InclusiveNamespaces(struct soap*, struct _c14n__InclusiveNamespaces *, const char*, const char*);

#ifndef soap_read__c14n__InclusiveNamespaces
#define soap_read__c14n__InclusiveNamespaces(soap, data) ( soap_begin_recv(soap) || !soap_get__c14n__InclusiveNamespaces(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct _c14n__InclusiveNamespaces * SOAP_FMAC2 soap_instantiate__c14n__InclusiveNamespaces(struct soap*, int, const char*, const char*, size_t*);

inline struct _c14n__InclusiveNamespaces * soap_new__c14n__InclusiveNamespaces(struct soap *soap, int n = -1) { return soap_instantiate__c14n__InclusiveNamespaces(soap, n, NULL, NULL, NULL); }

inline struct _c14n__InclusiveNamespaces * soap_new_req__c14n__InclusiveNamespaces(struct soap *soap) { struct _c14n__InclusiveNamespaces *_p = soap_instantiate__c14n__InclusiveNamespaces(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__c14n__InclusiveNamespaces(soap, _p); } return _p; }

inline struct _c14n__InclusiveNamespaces * soap_new_set__c14n__InclusiveNamespaces(struct soap *soap, char *PrefixList) { struct _c14n__InclusiveNamespaces *_p = soap_instantiate__c14n__InclusiveNamespaces(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__c14n__InclusiveNamespaces(soap, _p); _p->PrefixList = PrefixList; } return _p; }

inline void soap_delete__c14n__InclusiveNamespaces(struct soap *soap, struct _c14n__InclusiveNamespaces *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__c14n__InclusiveNamespaces(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ds__TransformsType
#define SOAP_TYPE_ds__TransformsType (86)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__TransformsType(struct soap*, struct ds__TransformsType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__TransformsType(struct soap*, const struct ds__TransformsType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__TransformsType(struct soap*, const char*, int, const struct ds__TransformsType *, const char*);
SOAP_FMAC3 struct ds__TransformsType * SOAP_FMAC4 soap_in_ds__TransformsType(struct soap*, const char*, struct ds__TransformsType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__TransformsType(struct soap*, const struct ds__TransformsType *, const char*, const char*);

#ifndef soap_write_ds__TransformsType
#define soap_write_ds__TransformsType(soap, data) ( soap_begin(soap), soap_serialize_ds__TransformsType(soap, data), soap_begin_send(soap) || soap_put_ds__TransformsType(soap, data, "ds:TransformsType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__TransformsType * SOAP_FMAC4 soap_get_ds__TransformsType(struct soap*, struct ds__TransformsType *, const char*, const char*);

#ifndef soap_read_ds__TransformsType
#define soap_read_ds__TransformsType(soap, data) ( soap_begin_recv(soap) || !soap_get_ds__TransformsType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ds__TransformsType * SOAP_FMAC2 soap_instantiate_ds__TransformsType(struct soap*, int, const char*, const char*, size_t*);

inline struct ds__TransformsType * soap_new_ds__TransformsType(struct soap *soap, int n = -1) { return soap_instantiate_ds__TransformsType(soap, n, NULL, NULL, NULL); }

inline struct ds__TransformsType * soap_new_req_ds__TransformsType(struct soap *soap, int __sizeTransform, struct ds__TransformType *Transform) { struct ds__TransformsType *_p = soap_instantiate_ds__TransformsType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__TransformsType(soap, _p); _p->__sizeTransform = __sizeTransform; _p->Transform = Transform; } return _p; }

inline struct ds__TransformsType * soap_new_set_ds__TransformsType(struct soap *soap, int __sizeTransform, struct ds__TransformType *Transform) { struct ds__TransformsType *_p = soap_instantiate_ds__TransformsType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__TransformsType(soap, _p); _p->__sizeTransform = __sizeTransform; _p->Transform = Transform; } return _p; }

inline void soap_delete_ds__TransformsType(struct soap *soap, struct ds__TransformsType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ds__TransformsType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ds__ReferenceType
#define SOAP_TYPE_ds__ReferenceType (85)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__ReferenceType(struct soap*, struct ds__ReferenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__ReferenceType(struct soap*, const struct ds__ReferenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__ReferenceType(struct soap*, const char*, int, const struct ds__ReferenceType *, const char*);
SOAP_FMAC3 struct ds__ReferenceType * SOAP_FMAC4 soap_in_ds__ReferenceType(struct soap*, const char*, struct ds__ReferenceType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__ReferenceType(struct soap*, const struct ds__ReferenceType *, const char*, const char*);

#ifndef soap_write_ds__ReferenceType
#define soap_write_ds__ReferenceType(soap, data) ( soap_begin(soap), soap_serialize_ds__ReferenceType(soap, data), soap_begin_send(soap) || soap_put_ds__ReferenceType(soap, data, "ds:ReferenceType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__ReferenceType * SOAP_FMAC4 soap_get_ds__ReferenceType(struct soap*, struct ds__ReferenceType *, const char*, const char*);

#ifndef soap_read_ds__ReferenceType
#define soap_read_ds__ReferenceType(soap, data) ( soap_begin_recv(soap) || !soap_get_ds__ReferenceType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ds__ReferenceType * SOAP_FMAC2 soap_instantiate_ds__ReferenceType(struct soap*, int, const char*, const char*, size_t*);

inline struct ds__ReferenceType * soap_new_ds__ReferenceType(struct soap *soap, int n = -1) { return soap_instantiate_ds__ReferenceType(soap, n, NULL, NULL, NULL); }

inline struct ds__ReferenceType * soap_new_req_ds__ReferenceType(struct soap *soap, struct ds__DigestMethodType *DigestMethod, char *DigestValue) { struct ds__ReferenceType *_p = soap_instantiate_ds__ReferenceType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__ReferenceType(soap, _p); _p->DigestMethod = DigestMethod; _p->DigestValue = DigestValue; } return _p; }

inline struct ds__ReferenceType * soap_new_set_ds__ReferenceType(struct soap *soap, struct ds__TransformsType *Transforms, struct ds__DigestMethodType *DigestMethod, char *DigestValue, char *Id, char *URI, char *Type) { struct ds__ReferenceType *_p = soap_instantiate_ds__ReferenceType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__ReferenceType(soap, _p); _p->Transforms = Transforms; _p->DigestMethod = DigestMethod; _p->DigestValue = DigestValue; _p->Id = Id; _p->URI = URI; _p->Type = Type; } return _p; }

inline void soap_delete_ds__ReferenceType(struct soap *soap, struct ds__ReferenceType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ds__ReferenceType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ds__SignatureMethodType
#define SOAP_TYPE_ds__SignatureMethodType (84)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__SignatureMethodType(struct soap*, struct ds__SignatureMethodType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__SignatureMethodType(struct soap*, const struct ds__SignatureMethodType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__SignatureMethodType(struct soap*, const char*, int, const struct ds__SignatureMethodType *, const char*);
SOAP_FMAC3 struct ds__SignatureMethodType * SOAP_FMAC4 soap_in_ds__SignatureMethodType(struct soap*, const char*, struct ds__SignatureMethodType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__SignatureMethodType(struct soap*, const struct ds__SignatureMethodType *, const char*, const char*);

#ifndef soap_write_ds__SignatureMethodType
#define soap_write_ds__SignatureMethodType(soap, data) ( soap_begin(soap), soap_serialize_ds__SignatureMethodType(soap, data), soap_begin_send(soap) || soap_put_ds__SignatureMethodType(soap, data, "ds:SignatureMethodType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__SignatureMethodType * SOAP_FMAC4 soap_get_ds__SignatureMethodType(struct soap*, struct ds__SignatureMethodType *, const char*, const char*);

#ifndef soap_read_ds__SignatureMethodType
#define soap_read_ds__SignatureMethodType(soap, data) ( soap_begin_recv(soap) || !soap_get_ds__SignatureMethodType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ds__SignatureMethodType * SOAP_FMAC2 soap_instantiate_ds__SignatureMethodType(struct soap*, int, const char*, const char*, size_t*);

inline struct ds__SignatureMethodType * soap_new_ds__SignatureMethodType(struct soap *soap, int n = -1) { return soap_instantiate_ds__SignatureMethodType(soap, n, NULL, NULL, NULL); }

inline struct ds__SignatureMethodType * soap_new_req_ds__SignatureMethodType(struct soap *soap, char *Algorithm) { struct ds__SignatureMethodType *_p = soap_instantiate_ds__SignatureMethodType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__SignatureMethodType(soap, _p); _p->Algorithm = Algorithm; } return _p; }

inline struct ds__SignatureMethodType * soap_new_set_ds__SignatureMethodType(struct soap *soap, int *HMACOutputLength, char *Algorithm) { struct ds__SignatureMethodType *_p = soap_instantiate_ds__SignatureMethodType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__SignatureMethodType(soap, _p); _p->HMACOutputLength = HMACOutputLength; _p->Algorithm = Algorithm; } return _p; }

inline void soap_delete_ds__SignatureMethodType(struct soap *soap, struct ds__SignatureMethodType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ds__SignatureMethodType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ds__CanonicalizationMethodType
#define SOAP_TYPE_ds__CanonicalizationMethodType (83)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__CanonicalizationMethodType(struct soap*, struct ds__CanonicalizationMethodType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__CanonicalizationMethodType(struct soap*, const struct ds__CanonicalizationMethodType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__CanonicalizationMethodType(struct soap*, const char*, int, const struct ds__CanonicalizationMethodType *, const char*);
SOAP_FMAC3 struct ds__CanonicalizationMethodType * SOAP_FMAC4 soap_in_ds__CanonicalizationMethodType(struct soap*, const char*, struct ds__CanonicalizationMethodType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__CanonicalizationMethodType(struct soap*, const struct ds__CanonicalizationMethodType *, const char*, const char*);

#ifndef soap_write_ds__CanonicalizationMethodType
#define soap_write_ds__CanonicalizationMethodType(soap, data) ( soap_begin(soap), soap_serialize_ds__CanonicalizationMethodType(soap, data), soap_begin_send(soap) || soap_put_ds__CanonicalizationMethodType(soap, data, "ds:CanonicalizationMethodType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__CanonicalizationMethodType * SOAP_FMAC4 soap_get_ds__CanonicalizationMethodType(struct soap*, struct ds__CanonicalizationMethodType *, const char*, const char*);

#ifndef soap_read_ds__CanonicalizationMethodType
#define soap_read_ds__CanonicalizationMethodType(soap, data) ( soap_begin_recv(soap) || !soap_get_ds__CanonicalizationMethodType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ds__CanonicalizationMethodType * SOAP_FMAC2 soap_instantiate_ds__CanonicalizationMethodType(struct soap*, int, const char*, const char*, size_t*);

inline struct ds__CanonicalizationMethodType * soap_new_ds__CanonicalizationMethodType(struct soap *soap, int n = -1) { return soap_instantiate_ds__CanonicalizationMethodType(soap, n, NULL, NULL, NULL); }

inline struct ds__CanonicalizationMethodType * soap_new_req_ds__CanonicalizationMethodType(struct soap *soap, char *Algorithm) { struct ds__CanonicalizationMethodType *_p = soap_instantiate_ds__CanonicalizationMethodType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__CanonicalizationMethodType(soap, _p); _p->Algorithm = Algorithm; } return _p; }

inline struct ds__CanonicalizationMethodType * soap_new_set_ds__CanonicalizationMethodType(struct soap *soap, char *Algorithm, struct _c14n__InclusiveNamespaces *c14n__InclusiveNamespaces) { struct ds__CanonicalizationMethodType *_p = soap_instantiate_ds__CanonicalizationMethodType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__CanonicalizationMethodType(soap, _p); _p->Algorithm = Algorithm; _p->c14n__InclusiveNamespaces = c14n__InclusiveNamespaces; } return _p; }

inline void soap_delete_ds__CanonicalizationMethodType(struct soap *soap, struct ds__CanonicalizationMethodType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ds__CanonicalizationMethodType(struct soap*, int, int, void*, size_t, const void*, size_t);

/* _ds__Signature is a typedef element/attribute synonym for ds__SignatureType */

#ifndef SOAP_TYPE__ds__Signature
#define SOAP_TYPE__ds__Signature (82)
#endif

#define soap_default__ds__Signature(soap, a) soap_default_ds__SignatureType(soap, a)


#define soap_serialize__ds__Signature soap_serialize_ds__SignatureType


#define soap_out__ds__Signature soap_out_ds__SignatureType


#define soap_in__ds__Signature soap_in_ds__SignatureType


#define soap_put__ds__Signature soap_put_ds__SignatureType


#define soap_get__ds__Signature soap_get_ds__SignatureType


#define soap_instantiate__ds__Signature soap_instantiate_ds__SignatureType


#define soap_copy__ds__Signature soap_copy_ds__SignatureType

#ifndef SOAP_TYPE_ds__KeyInfoType
#define SOAP_TYPE_ds__KeyInfoType (80)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__KeyInfoType(struct soap*, struct ds__KeyInfoType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__KeyInfoType(struct soap*, const struct ds__KeyInfoType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__KeyInfoType(struct soap*, const char*, int, const struct ds__KeyInfoType *, const char*);
SOAP_FMAC3 struct ds__KeyInfoType * SOAP_FMAC4 soap_in_ds__KeyInfoType(struct soap*, const char*, struct ds__KeyInfoType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__KeyInfoType(struct soap*, const struct ds__KeyInfoType *, const char*, const char*);

#ifndef soap_write_ds__KeyInfoType
#define soap_write_ds__KeyInfoType(soap, data) ( soap_begin(soap), soap_serialize_ds__KeyInfoType(soap, data), soap_begin_send(soap) || soap_put_ds__KeyInfoType(soap, data, "ds:KeyInfoType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__KeyInfoType * SOAP_FMAC4 soap_get_ds__KeyInfoType(struct soap*, struct ds__KeyInfoType *, const char*, const char*);

#ifndef soap_read_ds__KeyInfoType
#define soap_read_ds__KeyInfoType(soap, data) ( soap_begin_recv(soap) || !soap_get_ds__KeyInfoType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ds__KeyInfoType * SOAP_FMAC2 soap_instantiate_ds__KeyInfoType(struct soap*, int, const char*, const char*, size_t*);

inline struct ds__KeyInfoType * soap_new_ds__KeyInfoType(struct soap *soap, int n = -1) { return soap_instantiate_ds__KeyInfoType(soap, n, NULL, NULL, NULL); }

inline struct ds__KeyInfoType * soap_new_req_ds__KeyInfoType(struct soap *soap) { struct ds__KeyInfoType *_p = soap_instantiate_ds__KeyInfoType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__KeyInfoType(soap, _p); } return _p; }

inline struct ds__KeyInfoType * soap_new_set_ds__KeyInfoType(struct soap *soap, char *KeyName, struct ds__KeyValueType *KeyValue, struct ds__RetrievalMethodType *RetrievalMethod, struct ds__X509DataType *X509Data, struct _wsse__SecurityTokenReference *wsse__SecurityTokenReference, char *Id) { struct ds__KeyInfoType *_p = soap_instantiate_ds__KeyInfoType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__KeyInfoType(soap, _p); _p->KeyName = KeyName; _p->KeyValue = KeyValue; _p->RetrievalMethod = RetrievalMethod; _p->X509Data = X509Data; _p->wsse__SecurityTokenReference = wsse__SecurityTokenReference; _p->Id = Id; } return _p; }

inline void soap_delete_ds__KeyInfoType(struct soap *soap, struct ds__KeyInfoType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ds__KeyInfoType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ds__SignedInfoType
#define SOAP_TYPE_ds__SignedInfoType (78)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__SignedInfoType(struct soap*, struct ds__SignedInfoType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__SignedInfoType(struct soap*, const struct ds__SignedInfoType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__SignedInfoType(struct soap*, const char*, int, const struct ds__SignedInfoType *, const char*);
SOAP_FMAC3 struct ds__SignedInfoType * SOAP_FMAC4 soap_in_ds__SignedInfoType(struct soap*, const char*, struct ds__SignedInfoType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__SignedInfoType(struct soap*, const struct ds__SignedInfoType *, const char*, const char*);

#ifndef soap_write_ds__SignedInfoType
#define soap_write_ds__SignedInfoType(soap, data) ( soap_begin(soap), soap_serialize_ds__SignedInfoType(soap, data), soap_begin_send(soap) || soap_put_ds__SignedInfoType(soap, data, "ds:SignedInfoType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__SignedInfoType * SOAP_FMAC4 soap_get_ds__SignedInfoType(struct soap*, struct ds__SignedInfoType *, const char*, const char*);

#ifndef soap_read_ds__SignedInfoType
#define soap_read_ds__SignedInfoType(soap, data) ( soap_begin_recv(soap) || !soap_get_ds__SignedInfoType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ds__SignedInfoType * SOAP_FMAC2 soap_instantiate_ds__SignedInfoType(struct soap*, int, const char*, const char*, size_t*);

inline struct ds__SignedInfoType * soap_new_ds__SignedInfoType(struct soap *soap, int n = -1) { return soap_instantiate_ds__SignedInfoType(soap, n, NULL, NULL, NULL); }

inline struct ds__SignedInfoType * soap_new_req_ds__SignedInfoType(struct soap *soap, struct ds__CanonicalizationMethodType *CanonicalizationMethod, struct ds__SignatureMethodType *SignatureMethod, int __sizeReference, struct ds__ReferenceType **Reference) { struct ds__SignedInfoType *_p = soap_instantiate_ds__SignedInfoType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__SignedInfoType(soap, _p); _p->CanonicalizationMethod = CanonicalizationMethod; _p->SignatureMethod = SignatureMethod; _p->__sizeReference = __sizeReference; _p->Reference = Reference; } return _p; }

inline struct ds__SignedInfoType * soap_new_set_ds__SignedInfoType(struct soap *soap, struct ds__CanonicalizationMethodType *CanonicalizationMethod, struct ds__SignatureMethodType *SignatureMethod, int __sizeReference, struct ds__ReferenceType **Reference, char *Id) { struct ds__SignedInfoType *_p = soap_instantiate_ds__SignedInfoType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__SignedInfoType(soap, _p); _p->CanonicalizationMethod = CanonicalizationMethod; _p->SignatureMethod = SignatureMethod; _p->__sizeReference = __sizeReference; _p->Reference = Reference; _p->Id = Id; } return _p; }

inline void soap_delete_ds__SignedInfoType(struct soap *soap, struct ds__SignedInfoType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ds__SignedInfoType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ds__SignatureType
#define SOAP_TYPE_ds__SignatureType (77)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__SignatureType(struct soap*, struct ds__SignatureType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__SignatureType(struct soap*, const struct ds__SignatureType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__SignatureType(struct soap*, const char*, int, const struct ds__SignatureType *, const char*);
SOAP_FMAC3 struct ds__SignatureType * SOAP_FMAC4 soap_in_ds__SignatureType(struct soap*, const char*, struct ds__SignatureType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__SignatureType(struct soap*, const struct ds__SignatureType *, const char*, const char*);

#ifndef soap_write_ds__SignatureType
#define soap_write_ds__SignatureType(soap, data) ( soap_begin(soap), soap_serialize_ds__SignatureType(soap, data), soap_begin_send(soap) || soap_put_ds__SignatureType(soap, data, "ds:SignatureType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__SignatureType * SOAP_FMAC4 soap_get_ds__SignatureType(struct soap*, struct ds__SignatureType *, const char*, const char*);

#ifndef soap_read_ds__SignatureType
#define soap_read_ds__SignatureType(soap, data) ( soap_begin_recv(soap) || !soap_get_ds__SignatureType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ds__SignatureType * SOAP_FMAC2 soap_instantiate_ds__SignatureType(struct soap*, int, const char*, const char*, size_t*);

inline struct ds__SignatureType * soap_new_ds__SignatureType(struct soap *soap, int n = -1) { return soap_instantiate_ds__SignatureType(soap, n, NULL, NULL, NULL); }

inline struct ds__SignatureType * soap_new_req_ds__SignatureType(struct soap *soap) { struct ds__SignatureType *_p = soap_instantiate_ds__SignatureType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__SignatureType(soap, _p); } return _p; }

inline struct ds__SignatureType * soap_new_set_ds__SignatureType(struct soap *soap, struct ds__SignedInfoType *SignedInfo, char *SignatureValue, struct ds__KeyInfoType *KeyInfo, char *Id) { struct ds__SignatureType *_p = soap_instantiate_ds__SignatureType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__SignatureType(soap, _p); _p->SignedInfo = SignedInfo; _p->SignatureValue = SignatureValue; _p->KeyInfo = KeyInfo; _p->Id = Id; } return _p; }

inline void soap_delete_ds__SignatureType(struct soap *soap, struct ds__SignatureType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ds__SignatureType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ds__X509DataType
#define SOAP_TYPE_ds__X509DataType (75)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__X509DataType(struct soap*, struct ds__X509DataType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__X509DataType(struct soap*, const struct ds__X509DataType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__X509DataType(struct soap*, const char*, int, const struct ds__X509DataType *, const char*);
SOAP_FMAC3 struct ds__X509DataType * SOAP_FMAC4 soap_in_ds__X509DataType(struct soap*, const char*, struct ds__X509DataType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__X509DataType(struct soap*, const struct ds__X509DataType *, const char*, const char*);

#ifndef soap_write_ds__X509DataType
#define soap_write_ds__X509DataType(soap, data) ( soap_begin(soap), soap_serialize_ds__X509DataType(soap, data), soap_begin_send(soap) || soap_put_ds__X509DataType(soap, data, "ds:X509DataType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__X509DataType * SOAP_FMAC4 soap_get_ds__X509DataType(struct soap*, struct ds__X509DataType *, const char*, const char*);

#ifndef soap_read_ds__X509DataType
#define soap_read_ds__X509DataType(soap, data) ( soap_begin_recv(soap) || !soap_get_ds__X509DataType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ds__X509DataType * SOAP_FMAC2 soap_instantiate_ds__X509DataType(struct soap*, int, const char*, const char*, size_t*);

inline struct ds__X509DataType * soap_new_ds__X509DataType(struct soap *soap, int n = -1) { return soap_instantiate_ds__X509DataType(soap, n, NULL, NULL, NULL); }

inline struct ds__X509DataType * soap_new_req_ds__X509DataType(struct soap *soap) { struct ds__X509DataType *_p = soap_instantiate_ds__X509DataType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__X509DataType(soap, _p); } return _p; }

inline struct ds__X509DataType * soap_new_set_ds__X509DataType(struct soap *soap, struct ds__X509IssuerSerialType *X509IssuerSerial, char *X509SKI, char *X509SubjectName, char *X509Certificate, char *X509CRL) { struct ds__X509DataType *_p = soap_instantiate_ds__X509DataType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ds__X509DataType(soap, _p); _p->X509IssuerSerial = X509IssuerSerial; _p->X509SKI = X509SKI; _p->X509SubjectName = X509SubjectName; _p->X509Certificate = X509Certificate; _p->X509CRL = X509CRL; } return _p; }

inline void soap_delete_ds__X509DataType(struct soap *soap, struct ds__X509DataType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ds__X509DataType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsse__SecurityTokenReference
#define SOAP_TYPE__wsse__SecurityTokenReference (71)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsse__SecurityTokenReference(struct soap*, struct _wsse__SecurityTokenReference *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsse__SecurityTokenReference(struct soap*, const struct _wsse__SecurityTokenReference *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsse__SecurityTokenReference(struct soap*, const char*, int, const struct _wsse__SecurityTokenReference *, const char*);
SOAP_FMAC3 struct _wsse__SecurityTokenReference * SOAP_FMAC4 soap_in__wsse__SecurityTokenReference(struct soap*, const char*, struct _wsse__SecurityTokenReference *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsse__SecurityTokenReference(struct soap*, const struct _wsse__SecurityTokenReference *, const char*, const char*);

#ifndef soap_write__wsse__SecurityTokenReference
#define soap_write__wsse__SecurityTokenReference(soap, data) ( soap_begin(soap), soap_serialize__wsse__SecurityTokenReference(soap, data), soap_begin_send(soap) || soap_put__wsse__SecurityTokenReference(soap, data, "wsse:SecurityTokenReference", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _wsse__SecurityTokenReference * SOAP_FMAC4 soap_get__wsse__SecurityTokenReference(struct soap*, struct _wsse__SecurityTokenReference *, const char*, const char*);

#ifndef soap_read__wsse__SecurityTokenReference
#define soap_read__wsse__SecurityTokenReference(soap, data) ( soap_begin_recv(soap) || !soap_get__wsse__SecurityTokenReference(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct _wsse__SecurityTokenReference * SOAP_FMAC2 soap_instantiate__wsse__SecurityTokenReference(struct soap*, int, const char*, const char*, size_t*);

inline struct _wsse__SecurityTokenReference * soap_new__wsse__SecurityTokenReference(struct soap *soap, int n = -1) { return soap_instantiate__wsse__SecurityTokenReference(soap, n, NULL, NULL, NULL); }

inline struct _wsse__SecurityTokenReference * soap_new_req__wsse__SecurityTokenReference(struct soap *soap) { struct _wsse__SecurityTokenReference *_p = soap_instantiate__wsse__SecurityTokenReference(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__wsse__SecurityTokenReference(soap, _p); } return _p; }

inline struct _wsse__SecurityTokenReference * soap_new_set__wsse__SecurityTokenReference(struct soap *soap, struct _wsse__Reference *Reference, struct _wsse__KeyIdentifier *KeyIdentifier, struct _wsse__Embedded *Embedded, struct ds__X509DataType *ds__X509Data, char *wsu__Id, char *wsc__Instance, char *Usage) { struct _wsse__SecurityTokenReference *_p = soap_instantiate__wsse__SecurityTokenReference(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__wsse__SecurityTokenReference(soap, _p); _p->Reference = Reference; _p->KeyIdentifier = KeyIdentifier; _p->Embedded = Embedded; _p->ds__X509Data = ds__X509Data; _p->wsu__Id = wsu__Id; _p->wsc__Instance = wsc__Instance; _p->Usage = Usage; } return _p; }

inline void soap_delete__wsse__SecurityTokenReference(struct soap *soap, struct _wsse__SecurityTokenReference *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsse__SecurityTokenReference(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsse__KeyIdentifier
#define SOAP_TYPE__wsse__KeyIdentifier (70)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsse__KeyIdentifier(struct soap*, struct _wsse__KeyIdentifier *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsse__KeyIdentifier(struct soap*, const struct _wsse__KeyIdentifier *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsse__KeyIdentifier(struct soap*, const char*, int, const struct _wsse__KeyIdentifier *, const char*);
SOAP_FMAC3 struct _wsse__KeyIdentifier * SOAP_FMAC4 soap_in__wsse__KeyIdentifier(struct soap*, const char*, struct _wsse__KeyIdentifier *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsse__KeyIdentifier(struct soap*, const struct _wsse__KeyIdentifier *, const char*, const char*);

#ifndef soap_write__wsse__KeyIdentifier
#define soap_write__wsse__KeyIdentifier(soap, data) ( soap_begin(soap), soap_serialize__wsse__KeyIdentifier(soap, data), soap_begin_send(soap) || soap_put__wsse__KeyIdentifier(soap, data, "wsse:KeyIdentifier", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _wsse__KeyIdentifier * SOAP_FMAC4 soap_get__wsse__KeyIdentifier(struct soap*, struct _wsse__KeyIdentifier *, const char*, const char*);

#ifndef soap_read__wsse__KeyIdentifier
#define soap_read__wsse__KeyIdentifier(soap, data) ( soap_begin_recv(soap) || !soap_get__wsse__KeyIdentifier(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct _wsse__KeyIdentifier * SOAP_FMAC2 soap_instantiate__wsse__KeyIdentifier(struct soap*, int, const char*, const char*, size_t*);

inline struct _wsse__KeyIdentifier * soap_new__wsse__KeyIdentifier(struct soap *soap, int n = -1) { return soap_instantiate__wsse__KeyIdentifier(soap, n, NULL, NULL, NULL); }

inline struct _wsse__KeyIdentifier * soap_new_req__wsse__KeyIdentifier(struct soap *soap) { struct _wsse__KeyIdentifier *_p = soap_instantiate__wsse__KeyIdentifier(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__wsse__KeyIdentifier(soap, _p); } return _p; }

inline struct _wsse__KeyIdentifier * soap_new_set__wsse__KeyIdentifier(struct soap *soap, char *__item, char *wsu__Id, char *ValueType, char *EncodingType) { struct _wsse__KeyIdentifier *_p = soap_instantiate__wsse__KeyIdentifier(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__wsse__KeyIdentifier(soap, _p); _p->__item = __item; _p->wsu__Id = wsu__Id; _p->ValueType = ValueType; _p->EncodingType = EncodingType; } return _p; }

inline void soap_delete__wsse__KeyIdentifier(struct soap *soap, struct _wsse__KeyIdentifier *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsse__KeyIdentifier(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsse__Embedded
#define SOAP_TYPE__wsse__Embedded (69)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsse__Embedded(struct soap*, struct _wsse__Embedded *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsse__Embedded(struct soap*, const struct _wsse__Embedded *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsse__Embedded(struct soap*, const char*, int, const struct _wsse__Embedded *, const char*);
SOAP_FMAC3 struct _wsse__Embedded * SOAP_FMAC4 soap_in__wsse__Embedded(struct soap*, const char*, struct _wsse__Embedded *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsse__Embedded(struct soap*, const struct _wsse__Embedded *, const char*, const char*);

#ifndef soap_write__wsse__Embedded
#define soap_write__wsse__Embedded(soap, data) ( soap_begin(soap), soap_serialize__wsse__Embedded(soap, data), soap_begin_send(soap) || soap_put__wsse__Embedded(soap, data, "wsse:Embedded", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _wsse__Embedded * SOAP_FMAC4 soap_get__wsse__Embedded(struct soap*, struct _wsse__Embedded *, const char*, const char*);

#ifndef soap_read__wsse__Embedded
#define soap_read__wsse__Embedded(soap, data) ( soap_begin_recv(soap) || !soap_get__wsse__Embedded(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct _wsse__Embedded * SOAP_FMAC2 soap_instantiate__wsse__Embedded(struct soap*, int, const char*, const char*, size_t*);

inline struct _wsse__Embedded * soap_new__wsse__Embedded(struct soap *soap, int n = -1) { return soap_instantiate__wsse__Embedded(soap, n, NULL, NULL, NULL); }

inline struct _wsse__Embedded * soap_new_req__wsse__Embedded(struct soap *soap) { struct _wsse__Embedded *_p = soap_instantiate__wsse__Embedded(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__wsse__Embedded(soap, _p); } return _p; }

inline struct _wsse__Embedded * soap_new_set__wsse__Embedded(struct soap *soap, char *wsu__Id, char *ValueType) { struct _wsse__Embedded *_p = soap_instantiate__wsse__Embedded(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__wsse__Embedded(soap, _p); _p->wsu__Id = wsu__Id; _p->ValueType = ValueType; } return _p; }

inline void soap_delete__wsse__Embedded(struct soap *soap, struct _wsse__Embedded *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsse__Embedded(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsse__Reference
#define SOAP_TYPE__wsse__Reference (68)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsse__Reference(struct soap*, struct _wsse__Reference *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsse__Reference(struct soap*, const struct _wsse__Reference *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsse__Reference(struct soap*, const char*, int, const struct _wsse__Reference *, const char*);
SOAP_FMAC3 struct _wsse__Reference * SOAP_FMAC4 soap_in__wsse__Reference(struct soap*, const char*, struct _wsse__Reference *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsse__Reference(struct soap*, const struct _wsse__Reference *, const char*, const char*);

#ifndef soap_write__wsse__Reference
#define soap_write__wsse__Reference(soap, data) ( soap_begin(soap), soap_serialize__wsse__Reference(soap, data), soap_begin_send(soap) || soap_put__wsse__Reference(soap, data, "wsse:Reference", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _wsse__Reference * SOAP_FMAC4 soap_get__wsse__Reference(struct soap*, struct _wsse__Reference *, const char*, const char*);

#ifndef soap_read__wsse__Reference
#define soap_read__wsse__Reference(soap, data) ( soap_begin_recv(soap) || !soap_get__wsse__Reference(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct _wsse__Reference * SOAP_FMAC2 soap_instantiate__wsse__Reference(struct soap*, int, const char*, const char*, size_t*);

inline struct _wsse__Reference * soap_new__wsse__Reference(struct soap *soap, int n = -1) { return soap_instantiate__wsse__Reference(soap, n, NULL, NULL, NULL); }

inline struct _wsse__Reference * soap_new_req__wsse__Reference(struct soap *soap) { struct _wsse__Reference *_p = soap_instantiate__wsse__Reference(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__wsse__Reference(soap, _p); } return _p; }

inline struct _wsse__Reference * soap_new_set__wsse__Reference(struct soap *soap, char *URI, char *ValueType) { struct _wsse__Reference *_p = soap_instantiate__wsse__Reference(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__wsse__Reference(soap, _p); _p->URI = URI; _p->ValueType = ValueType; } return _p; }

inline void soap_delete__wsse__Reference(struct soap *soap, struct _wsse__Reference *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsse__Reference(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsse__BinarySecurityToken
#define SOAP_TYPE__wsse__BinarySecurityToken (67)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsse__BinarySecurityToken(struct soap*, struct _wsse__BinarySecurityToken *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsse__BinarySecurityToken(struct soap*, const struct _wsse__BinarySecurityToken *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsse__BinarySecurityToken(struct soap*, const char*, int, const struct _wsse__BinarySecurityToken *, const char*);
SOAP_FMAC3 struct _wsse__BinarySecurityToken * SOAP_FMAC4 soap_in__wsse__BinarySecurityToken(struct soap*, const char*, struct _wsse__BinarySecurityToken *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsse__BinarySecurityToken(struct soap*, const struct _wsse__BinarySecurityToken *, const char*, const char*);

#ifndef soap_write__wsse__BinarySecurityToken
#define soap_write__wsse__BinarySecurityToken(soap, data) ( soap_begin(soap), soap_serialize__wsse__BinarySecurityToken(soap, data), soap_begin_send(soap) || soap_put__wsse__BinarySecurityToken(soap, data, "wsse:BinarySecurityToken", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _wsse__BinarySecurityToken * SOAP_FMAC4 soap_get__wsse__BinarySecurityToken(struct soap*, struct _wsse__BinarySecurityToken *, const char*, const char*);

#ifndef soap_read__wsse__BinarySecurityToken
#define soap_read__wsse__BinarySecurityToken(soap, data) ( soap_begin_recv(soap) || !soap_get__wsse__BinarySecurityToken(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct _wsse__BinarySecurityToken * SOAP_FMAC2 soap_instantiate__wsse__BinarySecurityToken(struct soap*, int, const char*, const char*, size_t*);

inline struct _wsse__BinarySecurityToken * soap_new__wsse__BinarySecurityToken(struct soap *soap, int n = -1) { return soap_instantiate__wsse__BinarySecurityToken(soap, n, NULL, NULL, NULL); }

inline struct _wsse__BinarySecurityToken * soap_new_req__wsse__BinarySecurityToken(struct soap *soap) { struct _wsse__BinarySecurityToken *_p = soap_instantiate__wsse__BinarySecurityToken(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__wsse__BinarySecurityToken(soap, _p); } return _p; }

inline struct _wsse__BinarySecurityToken * soap_new_set__wsse__BinarySecurityToken(struct soap *soap, char *__item, char *wsu__Id, char *ValueType, char *EncodingType) { struct _wsse__BinarySecurityToken *_p = soap_instantiate__wsse__BinarySecurityToken(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__wsse__BinarySecurityToken(soap, _p); _p->__item = __item; _p->wsu__Id = wsu__Id; _p->ValueType = ValueType; _p->EncodingType = EncodingType; } return _p; }

inline void soap_delete__wsse__BinarySecurityToken(struct soap *soap, struct _wsse__BinarySecurityToken *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsse__BinarySecurityToken(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsse__Password
#define SOAP_TYPE__wsse__Password (65)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsse__Password(struct soap*, struct _wsse__Password *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsse__Password(struct soap*, const struct _wsse__Password *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsse__Password(struct soap*, const char*, int, const struct _wsse__Password *, const char*);
SOAP_FMAC3 struct _wsse__Password * SOAP_FMAC4 soap_in__wsse__Password(struct soap*, const char*, struct _wsse__Password *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsse__Password(struct soap*, const struct _wsse__Password *, const char*, const char*);

#ifndef soap_write__wsse__Password
#define soap_write__wsse__Password(soap, data) ( soap_begin(soap), soap_serialize__wsse__Password(soap, data), soap_begin_send(soap) || soap_put__wsse__Password(soap, data, "wsse:Password", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _wsse__Password * SOAP_FMAC4 soap_get__wsse__Password(struct soap*, struct _wsse__Password *, const char*, const char*);

#ifndef soap_read__wsse__Password
#define soap_read__wsse__Password(soap, data) ( soap_begin_recv(soap) || !soap_get__wsse__Password(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct _wsse__Password * SOAP_FMAC2 soap_instantiate__wsse__Password(struct soap*, int, const char*, const char*, size_t*);

inline struct _wsse__Password * soap_new__wsse__Password(struct soap *soap, int n = -1) { return soap_instantiate__wsse__Password(soap, n, NULL, NULL, NULL); }

inline struct _wsse__Password * soap_new_req__wsse__Password(struct soap *soap) { struct _wsse__Password *_p = soap_instantiate__wsse__Password(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__wsse__Password(soap, _p); } return _p; }

inline struct _wsse__Password * soap_new_set__wsse__Password(struct soap *soap, char *__item, char *Type) { struct _wsse__Password *_p = soap_instantiate__wsse__Password(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__wsse__Password(soap, _p); _p->__item = __item; _p->Type = Type; } return _p; }

inline void soap_delete__wsse__Password(struct soap *soap, struct _wsse__Password *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsse__Password(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsse__UsernameToken
#define SOAP_TYPE__wsse__UsernameToken (64)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsse__UsernameToken(struct soap*, struct _wsse__UsernameToken *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsse__UsernameToken(struct soap*, const struct _wsse__UsernameToken *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsse__UsernameToken(struct soap*, const char*, int, const struct _wsse__UsernameToken *, const char*);
SOAP_FMAC3 struct _wsse__UsernameToken * SOAP_FMAC4 soap_in__wsse__UsernameToken(struct soap*, const char*, struct _wsse__UsernameToken *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsse__UsernameToken(struct soap*, const struct _wsse__UsernameToken *, const char*, const char*);

#ifndef soap_write__wsse__UsernameToken
#define soap_write__wsse__UsernameToken(soap, data) ( soap_begin(soap), soap_serialize__wsse__UsernameToken(soap, data), soap_begin_send(soap) || soap_put__wsse__UsernameToken(soap, data, "wsse:UsernameToken", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _wsse__UsernameToken * SOAP_FMAC4 soap_get__wsse__UsernameToken(struct soap*, struct _wsse__UsernameToken *, const char*, const char*);

#ifndef soap_read__wsse__UsernameToken
#define soap_read__wsse__UsernameToken(soap, data) ( soap_begin_recv(soap) || !soap_get__wsse__UsernameToken(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct _wsse__UsernameToken * SOAP_FMAC2 soap_instantiate__wsse__UsernameToken(struct soap*, int, const char*, const char*, size_t*);

inline struct _wsse__UsernameToken * soap_new__wsse__UsernameToken(struct soap *soap, int n = -1) { return soap_instantiate__wsse__UsernameToken(soap, n, NULL, NULL, NULL); }

inline struct _wsse__UsernameToken * soap_new_req__wsse__UsernameToken(struct soap *soap) { struct _wsse__UsernameToken *_p = soap_instantiate__wsse__UsernameToken(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__wsse__UsernameToken(soap, _p); } return _p; }

inline struct _wsse__UsernameToken * soap_new_set__wsse__UsernameToken(struct soap *soap, char *Username, struct _wsse__Password *Password, char *Nonce, char *wsu__Created, char *wsu__Id) { struct _wsse__UsernameToken *_p = soap_instantiate__wsse__UsernameToken(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__wsse__UsernameToken(soap, _p); _p->Username = Username; _p->Password = Password; _p->Nonce = Nonce; _p->wsu__Created = wsu__Created; _p->wsu__Id = wsu__Id; } return _p; }

inline void soap_delete__wsse__UsernameToken(struct soap *soap, struct _wsse__UsernameToken *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsse__UsernameToken(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsu__Timestamp
#define SOAP_TYPE__wsu__Timestamp (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsu__Timestamp(struct soap*, struct _wsu__Timestamp *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsu__Timestamp(struct soap*, const struct _wsu__Timestamp *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsu__Timestamp(struct soap*, const char*, int, const struct _wsu__Timestamp *, const char*);
SOAP_FMAC3 struct _wsu__Timestamp * SOAP_FMAC4 soap_in__wsu__Timestamp(struct soap*, const char*, struct _wsu__Timestamp *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsu__Timestamp(struct soap*, const struct _wsu__Timestamp *, const char*, const char*);

#ifndef soap_write__wsu__Timestamp
#define soap_write__wsu__Timestamp(soap, data) ( soap_begin(soap), soap_serialize__wsu__Timestamp(soap, data), soap_begin_send(soap) || soap_put__wsu__Timestamp(soap, data, "wsu:Timestamp", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _wsu__Timestamp * SOAP_FMAC4 soap_get__wsu__Timestamp(struct soap*, struct _wsu__Timestamp *, const char*, const char*);

#ifndef soap_read__wsu__Timestamp
#define soap_read__wsu__Timestamp(soap, data) ( soap_begin_recv(soap) || !soap_get__wsu__Timestamp(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct _wsu__Timestamp * SOAP_FMAC2 soap_instantiate__wsu__Timestamp(struct soap*, int, const char*, const char*, size_t*);

inline struct _wsu__Timestamp * soap_new__wsu__Timestamp(struct soap *soap, int n = -1) { return soap_instantiate__wsu__Timestamp(soap, n, NULL, NULL, NULL); }

inline struct _wsu__Timestamp * soap_new_req__wsu__Timestamp(struct soap *soap) { struct _wsu__Timestamp *_p = soap_instantiate__wsu__Timestamp(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__wsu__Timestamp(soap, _p); } return _p; }

inline struct _wsu__Timestamp * soap_new_set__wsu__Timestamp(struct soap *soap, char *wsu__Id, char *Created, char *Expires) { struct _wsu__Timestamp *_p = soap_instantiate__wsu__Timestamp(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__wsu__Timestamp(soap, _p); _p->wsu__Id = wsu__Id; _p->Created = Created; _p->Expires = Expires; } return _p; }

inline void soap_delete__wsu__Timestamp(struct soap *soap, struct _wsu__Timestamp *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsu__Timestamp(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__getUserNonce
#define SOAP_TYPE___ns1__getUserNonce (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getUserNonce(struct soap*, struct __ns1__getUserNonce *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getUserNonce(struct soap*, const struct __ns1__getUserNonce *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getUserNonce(struct soap*, const char*, int, const struct __ns1__getUserNonce *, const char*);
SOAP_FMAC3 struct __ns1__getUserNonce * SOAP_FMAC4 soap_in___ns1__getUserNonce(struct soap*, const char*, struct __ns1__getUserNonce *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getUserNonce(struct soap*, const struct __ns1__getUserNonce *, const char*, const char*);

#ifndef soap_write___ns1__getUserNonce
#define soap_write___ns1__getUserNonce(soap, data) ( soap_begin(soap), soap_serialize___ns1__getUserNonce(soap, data), soap_begin_send(soap) || soap_put___ns1__getUserNonce(soap, data, "-ns1:getUserNonce", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__getUserNonce * SOAP_FMAC4 soap_get___ns1__getUserNonce(struct soap*, struct __ns1__getUserNonce *, const char*, const char*);

#ifndef soap_read___ns1__getUserNonce
#define soap_read___ns1__getUserNonce(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getUserNonce(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__getUserNonce * SOAP_FMAC2 soap_instantiate___ns1__getUserNonce(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__getUserNonce * soap_new___ns1__getUserNonce(struct soap *soap, int n = -1) { return soap_instantiate___ns1__getUserNonce(soap, n, NULL, NULL, NULL); }

inline struct __ns1__getUserNonce * soap_new_req___ns1__getUserNonce(struct soap *soap) { struct __ns1__getUserNonce *_p = soap_instantiate___ns1__getUserNonce(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__getUserNonce(soap, _p); } return _p; }

inline struct __ns1__getUserNonce * soap_new_set___ns1__getUserNonce(struct soap *soap, ns1__getUserNonce *ns1__getUserNonce_) { struct __ns1__getUserNonce *_p = soap_instantiate___ns1__getUserNonce(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__getUserNonce(soap, _p); _p->ns1__getUserNonce_ = ns1__getUserNonce_; } return _p; }

inline void soap_delete___ns1__getUserNonce(struct soap *soap, struct __ns1__getUserNonce *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getUserNonce(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__hasActiveSession
#define SOAP_TYPE___ns1__hasActiveSession (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__hasActiveSession(struct soap*, struct __ns1__hasActiveSession *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__hasActiveSession(struct soap*, const struct __ns1__hasActiveSession *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__hasActiveSession(struct soap*, const char*, int, const struct __ns1__hasActiveSession *, const char*);
SOAP_FMAC3 struct __ns1__hasActiveSession * SOAP_FMAC4 soap_in___ns1__hasActiveSession(struct soap*, const char*, struct __ns1__hasActiveSession *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__hasActiveSession(struct soap*, const struct __ns1__hasActiveSession *, const char*, const char*);

#ifndef soap_write___ns1__hasActiveSession
#define soap_write___ns1__hasActiveSession(soap, data) ( soap_begin(soap), soap_serialize___ns1__hasActiveSession(soap, data), soap_begin_send(soap) || soap_put___ns1__hasActiveSession(soap, data, "-ns1:hasActiveSession", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__hasActiveSession * SOAP_FMAC4 soap_get___ns1__hasActiveSession(struct soap*, struct __ns1__hasActiveSession *, const char*, const char*);

#ifndef soap_read___ns1__hasActiveSession
#define soap_read___ns1__hasActiveSession(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__hasActiveSession(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__hasActiveSession * SOAP_FMAC2 soap_instantiate___ns1__hasActiveSession(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__hasActiveSession * soap_new___ns1__hasActiveSession(struct soap *soap, int n = -1) { return soap_instantiate___ns1__hasActiveSession(soap, n, NULL, NULL, NULL); }

inline struct __ns1__hasActiveSession * soap_new_req___ns1__hasActiveSession(struct soap *soap) { struct __ns1__hasActiveSession *_p = soap_instantiate___ns1__hasActiveSession(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__hasActiveSession(soap, _p); } return _p; }

inline struct __ns1__hasActiveSession * soap_new_set___ns1__hasActiveSession(struct soap *soap, ns1__hasActiveSession *ns1__hasActiveSession_) { struct __ns1__hasActiveSession *_p = soap_instantiate___ns1__hasActiveSession(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__hasActiveSession(soap, _p); _p->ns1__hasActiveSession_ = ns1__hasActiveSession_; } return _p; }

inline void soap_delete___ns1__hasActiveSession(struct soap *soap, struct __ns1__hasActiveSession *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__hasActiveSession(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__sessionsByIp
#define SOAP_TYPE___ns1__sessionsByIp (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__sessionsByIp(struct soap*, struct __ns1__sessionsByIp *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__sessionsByIp(struct soap*, const struct __ns1__sessionsByIp *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__sessionsByIp(struct soap*, const char*, int, const struct __ns1__sessionsByIp *, const char*);
SOAP_FMAC3 struct __ns1__sessionsByIp * SOAP_FMAC4 soap_in___ns1__sessionsByIp(struct soap*, const char*, struct __ns1__sessionsByIp *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__sessionsByIp(struct soap*, const struct __ns1__sessionsByIp *, const char*, const char*);

#ifndef soap_write___ns1__sessionsByIp
#define soap_write___ns1__sessionsByIp(soap, data) ( soap_begin(soap), soap_serialize___ns1__sessionsByIp(soap, data), soap_begin_send(soap) || soap_put___ns1__sessionsByIp(soap, data, "-ns1:sessionsByIp", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__sessionsByIp * SOAP_FMAC4 soap_get___ns1__sessionsByIp(struct soap*, struct __ns1__sessionsByIp *, const char*, const char*);

#ifndef soap_read___ns1__sessionsByIp
#define soap_read___ns1__sessionsByIp(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__sessionsByIp(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__sessionsByIp * SOAP_FMAC2 soap_instantiate___ns1__sessionsByIp(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__sessionsByIp * soap_new___ns1__sessionsByIp(struct soap *soap, int n = -1) { return soap_instantiate___ns1__sessionsByIp(soap, n, NULL, NULL, NULL); }

inline struct __ns1__sessionsByIp * soap_new_req___ns1__sessionsByIp(struct soap *soap) { struct __ns1__sessionsByIp *_p = soap_instantiate___ns1__sessionsByIp(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__sessionsByIp(soap, _p); } return _p; }

inline struct __ns1__sessionsByIp * soap_new_set___ns1__sessionsByIp(struct soap *soap, ns1__sessionsByIp *ns1__sessionsByIp_) { struct __ns1__sessionsByIp *_p = soap_instantiate___ns1__sessionsByIp(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__sessionsByIp(soap, _p); _p->ns1__sessionsByIp_ = ns1__sessionsByIp_; } return _p; }

inline void soap_delete___ns1__sessionsByIp(struct soap *soap, struct __ns1__sessionsByIp *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__sessionsByIp(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__singleSignOn
#define SOAP_TYPE___ns1__singleSignOn (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__singleSignOn(struct soap*, struct __ns1__singleSignOn *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__singleSignOn(struct soap*, const struct __ns1__singleSignOn *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__singleSignOn(struct soap*, const char*, int, const struct __ns1__singleSignOn *, const char*);
SOAP_FMAC3 struct __ns1__singleSignOn * SOAP_FMAC4 soap_in___ns1__singleSignOn(struct soap*, const char*, struct __ns1__singleSignOn *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__singleSignOn(struct soap*, const struct __ns1__singleSignOn *, const char*, const char*);

#ifndef soap_write___ns1__singleSignOn
#define soap_write___ns1__singleSignOn(soap, data) ( soap_begin(soap), soap_serialize___ns1__singleSignOn(soap, data), soap_begin_send(soap) || soap_put___ns1__singleSignOn(soap, data, "-ns1:singleSignOn", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__singleSignOn * SOAP_FMAC4 soap_get___ns1__singleSignOn(struct soap*, struct __ns1__singleSignOn *, const char*, const char*);

#ifndef soap_read___ns1__singleSignOn
#define soap_read___ns1__singleSignOn(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__singleSignOn(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__singleSignOn * SOAP_FMAC2 soap_instantiate___ns1__singleSignOn(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__singleSignOn * soap_new___ns1__singleSignOn(struct soap *soap, int n = -1) { return soap_instantiate___ns1__singleSignOn(soap, n, NULL, NULL, NULL); }

inline struct __ns1__singleSignOn * soap_new_req___ns1__singleSignOn(struct soap *soap) { struct __ns1__singleSignOn *_p = soap_instantiate___ns1__singleSignOn(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__singleSignOn(soap, _p); } return _p; }

inline struct __ns1__singleSignOn * soap_new_set___ns1__singleSignOn(struct soap *soap, ns1__singleSignOn *ns1__singleSignOn_) { struct __ns1__singleSignOn *_p = soap_instantiate___ns1__singleSignOn(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__singleSignOn(soap, _p); _p->ns1__singleSignOn_ = ns1__singleSignOn_; } return _p; }

inline void soap_delete___ns1__singleSignOn(struct soap *soap, struct __ns1__singleSignOn *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__singleSignOn(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__logout
#define SOAP_TYPE___ns1__logout (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__logout(struct soap*, struct __ns1__logout *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__logout(struct soap*, const struct __ns1__logout *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__logout(struct soap*, const char*, int, const struct __ns1__logout *, const char*);
SOAP_FMAC3 struct __ns1__logout * SOAP_FMAC4 soap_in___ns1__logout(struct soap*, const char*, struct __ns1__logout *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__logout(struct soap*, const struct __ns1__logout *, const char*, const char*);

#ifndef soap_write___ns1__logout
#define soap_write___ns1__logout(soap, data) ( soap_begin(soap), soap_serialize___ns1__logout(soap, data), soap_begin_send(soap) || soap_put___ns1__logout(soap, data, "-ns1:logout", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__logout * SOAP_FMAC4 soap_get___ns1__logout(struct soap*, struct __ns1__logout *, const char*, const char*);

#ifndef soap_read___ns1__logout
#define soap_read___ns1__logout(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__logout(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__logout * SOAP_FMAC2 soap_instantiate___ns1__logout(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__logout * soap_new___ns1__logout(struct soap *soap, int n = -1) { return soap_instantiate___ns1__logout(soap, n, NULL, NULL, NULL); }

inline struct __ns1__logout * soap_new_req___ns1__logout(struct soap *soap) { struct __ns1__logout *_p = soap_instantiate___ns1__logout(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__logout(soap, _p); } return _p; }

inline struct __ns1__logout * soap_new_set___ns1__logout(struct soap *soap, ns1__logout *ns1__logout_) { struct __ns1__logout *_p = soap_instantiate___ns1__logout(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__logout(soap, _p); _p->ns1__logout_ = ns1__logout_; } return _p; }

inline void soap_delete___ns1__logout(struct soap *soap, struct __ns1__logout *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__logout(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__login
#define SOAP_TYPE___ns1__login (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__login(struct soap*, struct __ns1__login *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__login(struct soap*, const struct __ns1__login *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__login(struct soap*, const char*, int, const struct __ns1__login *, const char*);
SOAP_FMAC3 struct __ns1__login * SOAP_FMAC4 soap_in___ns1__login(struct soap*, const char*, struct __ns1__login *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__login(struct soap*, const struct __ns1__login *, const char*, const char*);

#ifndef soap_write___ns1__login
#define soap_write___ns1__login(soap, data) ( soap_begin(soap), soap_serialize___ns1__login(soap, data), soap_begin_send(soap) || soap_put___ns1__login(soap, data, "-ns1:login", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__login * SOAP_FMAC4 soap_get___ns1__login(struct soap*, struct __ns1__login *, const char*, const char*);

#ifndef soap_read___ns1__login
#define soap_read___ns1__login(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__login(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__login * SOAP_FMAC2 soap_instantiate___ns1__login(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__login * soap_new___ns1__login(struct soap *soap, int n = -1) { return soap_instantiate___ns1__login(soap, n, NULL, NULL, NULL); }

inline struct __ns1__login * soap_new_req___ns1__login(struct soap *soap) { struct __ns1__login *_p = soap_instantiate___ns1__login(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__login(soap, _p); } return _p; }

inline struct __ns1__login * soap_new_set___ns1__login(struct soap *soap, ns1__login *ns1__login_) { struct __ns1__login *_p = soap_instantiate___ns1__login(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__login(soap, _p); _p->ns1__login_ = ns1__login_; } return _p; }

inline void soap_delete___ns1__login(struct soap *soap, struct __ns1__login *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__login(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Detail(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, ns1__DecoderException *ns1__DecoderException_, ns1__UnsupportedEncodingException *ns1__UnsupportedEncodingException_, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->ns1__DecoderException_ = ns1__DecoderException_; _p->ns1__UnsupportedEncodingException_ = ns1__UnsupportedEncodingException_; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE__wsc__union_DerivedKeyTokenType
#define SOAP_TYPE__wsc__union_DerivedKeyTokenType (142)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsc__union_DerivedKeyTokenType(struct soap*, int, const union _wsc__union_DerivedKeyTokenType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsc__union_DerivedKeyTokenType(struct soap*, int, const union _wsc__union_DerivedKeyTokenType *);
SOAP_FMAC3 union _wsc__union_DerivedKeyTokenType * SOAP_FMAC4 soap_in__wsc__union_DerivedKeyTokenType(struct soap*, int*, union _wsc__union_DerivedKeyTokenType *);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (191)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin(soap), soap_serialize_PointerToSOAP_ENV__Reason(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (189)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin(soap), soap_serialize_PointerToSOAP_ENV__Code(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (187)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin(soap), soap_serialize_PointerToSOAP_ENV__Detail(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTochan__ChannelInstanceType
#define SOAP_TYPE_PointerTochan__ChannelInstanceType (186)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTochan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTochan__ChannelInstanceType(struct soap*, const char *, int, struct chan__ChannelInstanceType *const*, const char *);
SOAP_FMAC3 struct chan__ChannelInstanceType ** SOAP_FMAC4 soap_in_PointerTochan__ChannelInstanceType(struct soap*, const char*, struct chan__ChannelInstanceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTochan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *const*, const char*, const char*);

#ifndef soap_write_PointerTochan__ChannelInstanceType
#define soap_write_PointerTochan__ChannelInstanceType(soap, data) ( soap_begin(soap), soap_serialize_PointerTochan__ChannelInstanceType(soap, data), soap_begin_send(soap) || soap_put_PointerTochan__ChannelInstanceType(soap, data, "chan:ChannelInstanceType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct chan__ChannelInstanceType ** SOAP_FMAC4 soap_get_PointerTochan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType **, const char*, const char*);

#ifndef soap_read_PointerTochan__ChannelInstanceType
#define soap_read_PointerTochan__ChannelInstanceType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTochan__ChannelInstanceType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsa5__FaultTo
#define SOAP_TYPE_PointerTo_wsa5__FaultTo (185)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__FaultTo(struct soap*, struct wsa5__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__FaultTo(struct soap*, const char *, int, struct wsa5__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__FaultTo(struct soap*, const char*, struct wsa5__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__FaultTo(struct soap*, struct wsa5__EndpointReferenceType *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsa5__FaultTo
#define soap_write_PointerTo_wsa5__FaultTo(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_wsa5__FaultTo(soap, data), soap_begin_send(soap) || soap_put_PointerTo_wsa5__FaultTo(soap, data, "wsa5:FaultTo", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__FaultTo(struct soap*, struct wsa5__EndpointReferenceType **, const char*, const char*);

#ifndef soap_read_PointerTo_wsa5__FaultTo
#define soap_read_PointerTo_wsa5__FaultTo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_wsa5__FaultTo(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsa5__ReplyTo
#define SOAP_TYPE_PointerTo_wsa5__ReplyTo (184)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__ReplyTo(struct soap*, struct wsa5__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__ReplyTo(struct soap*, const char *, int, struct wsa5__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__ReplyTo(struct soap*, const char*, struct wsa5__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__ReplyTo(struct soap*, struct wsa5__EndpointReferenceType *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsa5__ReplyTo
#define soap_write_PointerTo_wsa5__ReplyTo(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_wsa5__ReplyTo(soap, data), soap_begin_send(soap) || soap_put_PointerTo_wsa5__ReplyTo(soap, data, "wsa5:ReplyTo", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__ReplyTo(struct soap*, struct wsa5__EndpointReferenceType **, const char*, const char*);

#ifndef soap_read_PointerTo_wsa5__ReplyTo
#define soap_read_PointerTo_wsa5__ReplyTo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_wsa5__ReplyTo(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsa5__From
#define SOAP_TYPE_PointerTo_wsa5__From (183)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__From(struct soap*, struct wsa5__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__From(struct soap*, const char *, int, struct wsa5__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__From(struct soap*, const char*, struct wsa5__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__From(struct soap*, struct wsa5__EndpointReferenceType *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsa5__From
#define soap_write_PointerTo_wsa5__From(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_wsa5__From(soap, data), soap_begin_send(soap) || soap_put_PointerTo_wsa5__From(soap, data, "wsa5:From", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__From(struct soap*, struct wsa5__EndpointReferenceType **, const char*, const char*);

#ifndef soap_read_PointerTo_wsa5__From
#define soap_read_PointerTo_wsa5__From(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_wsa5__From(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsa5__RelatesTo
#define SOAP_TYPE_PointerTo_wsa5__RelatesTo (182)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__RelatesTo(struct soap*, struct wsa5__RelatesToType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__RelatesTo(struct soap*, const char *, int, struct wsa5__RelatesToType *const*, const char *);
SOAP_FMAC3 struct wsa5__RelatesToType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__RelatesTo(struct soap*, const char*, struct wsa5__RelatesToType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__RelatesTo(struct soap*, struct wsa5__RelatesToType *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsa5__RelatesTo
#define soap_write_PointerTo_wsa5__RelatesTo(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_wsa5__RelatesTo(soap, data), soap_begin_send(soap) || soap_put_PointerTo_wsa5__RelatesTo(soap, data, "wsa5:RelatesTo", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct wsa5__RelatesToType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__RelatesTo(struct soap*, struct wsa5__RelatesToType **, const char*, const char*);

#ifndef soap_read_PointerTo_wsa5__RelatesTo
#define soap_read_PointerTo_wsa5__RelatesTo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_wsa5__RelatesTo(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


/* _wsa5__ProblemIRI is a typedef element/attribute synonym for string */

#ifndef SOAP_TYPE__wsa5__ProblemIRI
#define SOAP_TYPE__wsa5__ProblemIRI (178)
#endif

#define soap_default__wsa5__ProblemIRI(soap, a) soap_default_string(soap, a)


#define soap_serialize__wsa5__ProblemIRI soap_serialize_string


#define soap_out__wsa5__ProblemIRI soap_out_string


#define soap_in__wsa5__ProblemIRI soap_in_string


#define soap_put__wsa5__ProblemIRI soap_put_string


#define soap_get__wsa5__ProblemIRI soap_get_string


#ifndef SOAP_TYPE__wsa5__ProblemHeaderQName
#define SOAP_TYPE__wsa5__ProblemHeaderQName (177)
#endif

#define soap_default__wsa5__ProblemHeaderQName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsa5__ProblemHeaderQName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsa5__ProblemHeaderQName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__wsa5__ProblemHeaderQName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__ProblemHeaderQName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__wsa5__ProblemHeaderQName
#define soap_write__wsa5__ProblemHeaderQName(soap, data) ( soap_begin(soap), soap_serialize__wsa5__ProblemHeaderQName(soap, data), soap_begin_send(soap) || soap_put__wsa5__ProblemHeaderQName(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__wsa5__ProblemHeaderQName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__wsa5__ProblemHeaderQName
#define soap_read__wsa5__ProblemHeaderQName(soap, data) ( soap_begin_recv(soap) || !soap_get__wsa5__ProblemHeaderQName(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


/* _wsa5__Action is a typedef element/attribute synonym for string */

#ifndef SOAP_TYPE__wsa5__Action
#define SOAP_TYPE__wsa5__Action (175)
#endif

#define soap_default__wsa5__Action(soap, a) soap_default_string(soap, a)


#define soap_serialize__wsa5__Action soap_serialize_string


#define soap_out__wsa5__Action soap_out_string


#define soap_in__wsa5__Action soap_in_string


#define soap_put__wsa5__Action soap_put_string


#define soap_get__wsa5__Action soap_get_string


/* _wsa5__To is a typedef element/attribute synonym for string */

#ifndef SOAP_TYPE__wsa5__To
#define SOAP_TYPE__wsa5__To (174)
#endif

#define soap_default__wsa5__To(soap, a) soap_default_string(soap, a)


#define soap_serialize__wsa5__To soap_serialize_string


#define soap_out__wsa5__To soap_out_string


#define soap_in__wsa5__To soap_in_string


#define soap_put__wsa5__To soap_put_string


#define soap_get__wsa5__To soap_get_string


/* _wsa5__MessageID is a typedef element/attribute synonym for string */

#ifndef SOAP_TYPE__wsa5__MessageID
#define SOAP_TYPE__wsa5__MessageID (169)
#endif

#define soap_default__wsa5__MessageID(soap, a) soap_default_string(soap, a)


#define soap_serialize__wsa5__MessageID soap_serialize_string


#define soap_out__wsa5__MessageID soap_out_string


#define soap_in__wsa5__MessageID soap_in_string


#define soap_put__wsa5__MessageID soap_put_string


#define soap_get__wsa5__MessageID soap_get_string


#ifndef SOAP_TYPE_PointerTowsa5__MetadataType
#define SOAP_TYPE_PointerTowsa5__MetadataType (164)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsa5__MetadataType(struct soap*, struct wsa5__MetadataType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsa5__MetadataType(struct soap*, const char *, int, struct wsa5__MetadataType *const*, const char *);
SOAP_FMAC3 struct wsa5__MetadataType ** SOAP_FMAC4 soap_in_PointerTowsa5__MetadataType(struct soap*, const char*, struct wsa5__MetadataType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsa5__MetadataType(struct soap*, struct wsa5__MetadataType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsa5__MetadataType
#define soap_write_PointerTowsa5__MetadataType(soap, data) ( soap_begin(soap), soap_serialize_PointerTowsa5__MetadataType(soap, data), soap_begin_send(soap) || soap_put_PointerTowsa5__MetadataType(soap, data, "wsa5:MetadataType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct wsa5__MetadataType ** SOAP_FMAC4 soap_get_PointerTowsa5__MetadataType(struct soap*, struct wsa5__MetadataType **, const char*, const char*);

#ifndef soap_read_PointerTowsa5__MetadataType
#define soap_read_PointerTowsa5__MetadataType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsa5__MetadataType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTowsa5__ReferenceParametersType
#define SOAP_TYPE_PointerTowsa5__ReferenceParametersType (163)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsa5__ReferenceParametersType(struct soap*, const char *, int, struct wsa5__ReferenceParametersType *const*, const char *);
SOAP_FMAC3 struct wsa5__ReferenceParametersType ** SOAP_FMAC4 soap_in_PointerTowsa5__ReferenceParametersType(struct soap*, const char*, struct wsa5__ReferenceParametersType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsa5__ReferenceParametersType
#define soap_write_PointerTowsa5__ReferenceParametersType(soap, data) ( soap_begin(soap), soap_serialize_PointerTowsa5__ReferenceParametersType(soap, data), soap_begin_send(soap) || soap_put_PointerTowsa5__ReferenceParametersType(soap, data, "wsa5:ReferenceParametersType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct wsa5__ReferenceParametersType ** SOAP_FMAC4 soap_get_PointerTowsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType **, const char*, const char*);

#ifndef soap_read_PointerTowsa5__ReferenceParametersType
#define soap_read_PointerTowsa5__ReferenceParametersType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsa5__ReferenceParametersType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_wsa5__FaultCodesOpenEnumType
#define SOAP_TYPE_wsa5__FaultCodesOpenEnumType (160)
#endif

#define soap_default_wsa5__FaultCodesOpenEnumType(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__FaultCodesOpenEnumType(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__FaultCodesOpenEnumType(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wsa5__FaultCodesOpenEnumType(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__FaultCodesOpenEnumType(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wsa5__FaultCodesOpenEnumType
#define soap_write_wsa5__FaultCodesOpenEnumType(soap, data) ( soap_begin(soap), soap_serialize_wsa5__FaultCodesOpenEnumType(soap, data), soap_begin_send(soap) || soap_put_wsa5__FaultCodesOpenEnumType(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wsa5__FaultCodesOpenEnumType(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wsa5__FaultCodesOpenEnumType
#define soap_read_wsa5__FaultCodesOpenEnumType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__FaultCodesOpenEnumType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_wsa5__RelationshipTypeOpenEnum
#define SOAP_TYPE_wsa5__RelationshipTypeOpenEnum (159)
#endif

#define soap_default_wsa5__RelationshipTypeOpenEnum(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__RelationshipTypeOpenEnum(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__RelationshipTypeOpenEnum(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wsa5__RelationshipTypeOpenEnum(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__RelationshipTypeOpenEnum(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wsa5__RelationshipTypeOpenEnum
#define soap_write_wsa5__RelationshipTypeOpenEnum(soap, data) ( soap_begin(soap), soap_serialize_wsa5__RelationshipTypeOpenEnum(soap, data), soap_begin_send(soap) || soap_put_wsa5__RelationshipTypeOpenEnum(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wsa5__RelationshipTypeOpenEnum(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wsa5__RelationshipTypeOpenEnum
#define soap_read_wsa5__RelationshipTypeOpenEnum(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__RelationshipTypeOpenEnum(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsse__Security
#define SOAP_TYPE_PointerTo_wsse__Security (153)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsse__Security(struct soap*, struct _wsse__Security *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsse__Security(struct soap*, const char *, int, struct _wsse__Security *const*, const char *);
SOAP_FMAC3 struct _wsse__Security ** SOAP_FMAC4 soap_in_PointerTo_wsse__Security(struct soap*, const char*, struct _wsse__Security **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsse__Security(struct soap*, struct _wsse__Security *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsse__Security
#define soap_write_PointerTo_wsse__Security(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_wsse__Security(soap, data), soap_begin_send(soap) || soap_put_PointerTo_wsse__Security(soap, data, "wsse:Security", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _wsse__Security ** SOAP_FMAC4 soap_get_PointerTo_wsse__Security(struct soap*, struct _wsse__Security **, const char*, const char*);

#ifndef soap_read_PointerTo_wsse__Security
#define soap_read_PointerTo_wsse__Security(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_wsse__Security(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTods__SignatureType
#define SOAP_TYPE_PointerTods__SignatureType (151)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__SignatureType(struct soap*, struct ds__SignatureType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__SignatureType(struct soap*, const char *, int, struct ds__SignatureType *const*, const char *);
SOAP_FMAC3 struct ds__SignatureType ** SOAP_FMAC4 soap_in_PointerTods__SignatureType(struct soap*, const char*, struct ds__SignatureType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__SignatureType(struct soap*, struct ds__SignatureType *const*, const char*, const char*);

#ifndef soap_write_PointerTods__SignatureType
#define soap_write_PointerTods__SignatureType(soap, data) ( soap_begin(soap), soap_serialize_PointerTods__SignatureType(soap, data), soap_begin_send(soap) || soap_put_PointerTods__SignatureType(soap, data, "ds:SignatureType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__SignatureType ** SOAP_FMAC4 soap_get_PointerTods__SignatureType(struct soap*, struct ds__SignatureType **, const char*, const char*);

#ifndef soap_read_PointerTods__SignatureType
#define soap_read_PointerTods__SignatureType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTods__SignatureType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTowsc__SecurityContextTokenType
#define SOAP_TYPE_PointerTowsc__SecurityContextTokenType (150)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsc__SecurityContextTokenType(struct soap*, struct wsc__SecurityContextTokenType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsc__SecurityContextTokenType(struct soap*, const char *, int, struct wsc__SecurityContextTokenType *const*, const char *);
SOAP_FMAC3 struct wsc__SecurityContextTokenType ** SOAP_FMAC4 soap_in_PointerTowsc__SecurityContextTokenType(struct soap*, const char*, struct wsc__SecurityContextTokenType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsc__SecurityContextTokenType(struct soap*, struct wsc__SecurityContextTokenType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsc__SecurityContextTokenType
#define soap_write_PointerTowsc__SecurityContextTokenType(soap, data) ( soap_begin(soap), soap_serialize_PointerTowsc__SecurityContextTokenType(soap, data), soap_begin_send(soap) || soap_put_PointerTowsc__SecurityContextTokenType(soap, data, "wsc:SecurityContextTokenType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct wsc__SecurityContextTokenType ** SOAP_FMAC4 soap_get_PointerTowsc__SecurityContextTokenType(struct soap*, struct wsc__SecurityContextTokenType **, const char*, const char*);

#ifndef soap_read_PointerTowsc__SecurityContextTokenType
#define soap_read_PointerTowsc__SecurityContextTokenType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsc__SecurityContextTokenType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerToxenc__EncryptedKeyType
#define SOAP_TYPE_PointerToxenc__EncryptedKeyType (149)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxenc__EncryptedKeyType(struct soap*, struct xenc__EncryptedKeyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxenc__EncryptedKeyType(struct soap*, const char *, int, struct xenc__EncryptedKeyType *const*, const char *);
SOAP_FMAC3 struct xenc__EncryptedKeyType ** SOAP_FMAC4 soap_in_PointerToxenc__EncryptedKeyType(struct soap*, const char*, struct xenc__EncryptedKeyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxenc__EncryptedKeyType(struct soap*, struct xenc__EncryptedKeyType *const*, const char*, const char*);

#ifndef soap_write_PointerToxenc__EncryptedKeyType
#define soap_write_PointerToxenc__EncryptedKeyType(soap, data) ( soap_begin(soap), soap_serialize_PointerToxenc__EncryptedKeyType(soap, data), soap_begin_send(soap) || soap_put_PointerToxenc__EncryptedKeyType(soap, data, "xenc:EncryptedKeyType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct xenc__EncryptedKeyType ** SOAP_FMAC4 soap_get_PointerToxenc__EncryptedKeyType(struct soap*, struct xenc__EncryptedKeyType **, const char*, const char*);

#ifndef soap_read_PointerToxenc__EncryptedKeyType
#define soap_read_PointerToxenc__EncryptedKeyType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxenc__EncryptedKeyType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsse__BinarySecurityToken
#define SOAP_TYPE_PointerTo_wsse__BinarySecurityToken (148)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsse__BinarySecurityToken(struct soap*, struct _wsse__BinarySecurityToken *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsse__BinarySecurityToken(struct soap*, const char *, int, struct _wsse__BinarySecurityToken *const*, const char *);
SOAP_FMAC3 struct _wsse__BinarySecurityToken ** SOAP_FMAC4 soap_in_PointerTo_wsse__BinarySecurityToken(struct soap*, const char*, struct _wsse__BinarySecurityToken **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsse__BinarySecurityToken(struct soap*, struct _wsse__BinarySecurityToken *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsse__BinarySecurityToken
#define soap_write_PointerTo_wsse__BinarySecurityToken(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_wsse__BinarySecurityToken(soap, data), soap_begin_send(soap) || soap_put_PointerTo_wsse__BinarySecurityToken(soap, data, "wsse:BinarySecurityToken", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _wsse__BinarySecurityToken ** SOAP_FMAC4 soap_get_PointerTo_wsse__BinarySecurityToken(struct soap*, struct _wsse__BinarySecurityToken **, const char*, const char*);

#ifndef soap_read_PointerTo_wsse__BinarySecurityToken
#define soap_read_PointerTo_wsse__BinarySecurityToken(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_wsse__BinarySecurityToken(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsse__UsernameToken
#define SOAP_TYPE_PointerTo_wsse__UsernameToken (147)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsse__UsernameToken(struct soap*, struct _wsse__UsernameToken *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsse__UsernameToken(struct soap*, const char *, int, struct _wsse__UsernameToken *const*, const char *);
SOAP_FMAC3 struct _wsse__UsernameToken ** SOAP_FMAC4 soap_in_PointerTo_wsse__UsernameToken(struct soap*, const char*, struct _wsse__UsernameToken **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsse__UsernameToken(struct soap*, struct _wsse__UsernameToken *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsse__UsernameToken
#define soap_write_PointerTo_wsse__UsernameToken(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_wsse__UsernameToken(soap, data), soap_begin_send(soap) || soap_put_PointerTo_wsse__UsernameToken(soap, data, "wsse:UsernameToken", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _wsse__UsernameToken ** SOAP_FMAC4 soap_get_PointerTo_wsse__UsernameToken(struct soap*, struct _wsse__UsernameToken **, const char*, const char*);

#ifndef soap_read_PointerTo_wsse__UsernameToken
#define soap_read_PointerTo_wsse__UsernameToken(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_wsse__UsernameToken(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsu__Timestamp
#define SOAP_TYPE_PointerTo_wsu__Timestamp (146)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsu__Timestamp(struct soap*, struct _wsu__Timestamp *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsu__Timestamp(struct soap*, const char *, int, struct _wsu__Timestamp *const*, const char *);
SOAP_FMAC3 struct _wsu__Timestamp ** SOAP_FMAC4 soap_in_PointerTo_wsu__Timestamp(struct soap*, const char*, struct _wsu__Timestamp **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsu__Timestamp(struct soap*, struct _wsu__Timestamp *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsu__Timestamp
#define soap_write_PointerTo_wsu__Timestamp(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_wsu__Timestamp(soap, data), soap_begin_send(soap) || soap_put_PointerTo_wsu__Timestamp(soap, data, "wsu:Timestamp", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _wsu__Timestamp ** SOAP_FMAC4 soap_get_PointerTo_wsu__Timestamp(struct soap*, struct _wsu__Timestamp **, const char*, const char*);

#ifndef soap_read_PointerTo_wsu__Timestamp
#define soap_read_PointerTo_wsu__Timestamp(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_wsu__Timestamp(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo__wsc__DerivedKeyTokenType_sequence
#define SOAP_TYPE_PointerTo__wsc__DerivedKeyTokenType_sequence (144)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__wsc__DerivedKeyTokenType_sequence(struct soap*, struct __wsc__DerivedKeyTokenType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__wsc__DerivedKeyTokenType_sequence(struct soap*, const char *, int, struct __wsc__DerivedKeyTokenType_sequence *const*, const char *);
SOAP_FMAC3 struct __wsc__DerivedKeyTokenType_sequence ** SOAP_FMAC4 soap_in_PointerTo__wsc__DerivedKeyTokenType_sequence(struct soap*, const char*, struct __wsc__DerivedKeyTokenType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__wsc__DerivedKeyTokenType_sequence(struct soap*, struct __wsc__DerivedKeyTokenType_sequence *const*, const char*, const char*);

#ifndef soap_write_PointerTo__wsc__DerivedKeyTokenType_sequence
#define soap_write_PointerTo__wsc__DerivedKeyTokenType_sequence(soap, data) ( soap_begin(soap), soap_serialize_PointerTo__wsc__DerivedKeyTokenType_sequence(soap, data), soap_begin_send(soap) || soap_put_PointerTo__wsc__DerivedKeyTokenType_sequence(soap, data, "-wsc:DerivedKeyTokenType-sequence", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __wsc__DerivedKeyTokenType_sequence ** SOAP_FMAC4 soap_get_PointerTo__wsc__DerivedKeyTokenType_sequence(struct soap*, struct __wsc__DerivedKeyTokenType_sequence **, const char*, const char*);

#ifndef soap_read_PointerTo__wsc__DerivedKeyTokenType_sequence
#define soap_read_PointerTo__wsc__DerivedKeyTokenType_sequence(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo__wsc__DerivedKeyTokenType_sequence(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTounsignedLONG64
#define SOAP_TYPE_PointerTounsignedLONG64 (143)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTounsignedLONG64(struct soap*, ULONG64 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTounsignedLONG64(struct soap*, const char *, int, ULONG64 *const*, const char *);
SOAP_FMAC3 ULONG64 ** SOAP_FMAC4 soap_in_PointerTounsignedLONG64(struct soap*, const char*, ULONG64 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTounsignedLONG64(struct soap*, ULONG64 *const*, const char*, const char*);

#ifndef soap_write_PointerTounsignedLONG64
#define soap_write_PointerTounsignedLONG64(soap, data) ( soap_begin(soap), soap_serialize_PointerTounsignedLONG64(soap, data), soap_begin_send(soap) || soap_put_PointerTounsignedLONG64(soap, data, "unsignedLong", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ULONG64 ** SOAP_FMAC4 soap_get_PointerTounsignedLONG64(struct soap*, ULONG64 **, const char*, const char*);

#ifndef soap_read_PointerTounsignedLONG64
#define soap_read_PointerTounsignedLONG64(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTounsignedLONG64(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTowsc__PropertiesType
#define SOAP_TYPE_PointerTowsc__PropertiesType (139)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsc__PropertiesType(struct soap*, struct wsc__PropertiesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsc__PropertiesType(struct soap*, const char *, int, struct wsc__PropertiesType *const*, const char *);
SOAP_FMAC3 struct wsc__PropertiesType ** SOAP_FMAC4 soap_in_PointerTowsc__PropertiesType(struct soap*, const char*, struct wsc__PropertiesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsc__PropertiesType(struct soap*, struct wsc__PropertiesType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsc__PropertiesType
#define soap_write_PointerTowsc__PropertiesType(soap, data) ( soap_begin(soap), soap_serialize_PointerTowsc__PropertiesType(soap, data), soap_begin_send(soap) || soap_put_PointerTowsc__PropertiesType(soap, data, "wsc:PropertiesType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct wsc__PropertiesType ** SOAP_FMAC4 soap_get_PointerTowsc__PropertiesType(struct soap*, struct wsc__PropertiesType **, const char*, const char*);

#ifndef soap_read_PointerTowsc__PropertiesType
#define soap_read_PointerTowsc__PropertiesType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsc__PropertiesType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_wsc__FaultCodeOpenEnumType
#define SOAP_TYPE_wsc__FaultCodeOpenEnumType (134)
#endif

#define soap_default_wsc__FaultCodeOpenEnumType(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsc__FaultCodeOpenEnumType(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsc__FaultCodeOpenEnumType(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wsc__FaultCodeOpenEnumType(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsc__FaultCodeOpenEnumType(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wsc__FaultCodeOpenEnumType
#define soap_write_wsc__FaultCodeOpenEnumType(soap, data) ( soap_begin(soap), soap_serialize_wsc__FaultCodeOpenEnumType(soap, data), soap_begin_send(soap) || soap_put_wsc__FaultCodeOpenEnumType(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wsc__FaultCodeOpenEnumType(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wsc__FaultCodeOpenEnumType
#define soap_read_wsc__FaultCodeOpenEnumType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsc__FaultCodeOpenEnumType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_xenc__ReferenceList
#define SOAP_TYPE_PointerTo_xenc__ReferenceList (133)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_xenc__ReferenceList(struct soap*, struct _xenc__ReferenceList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_xenc__ReferenceList(struct soap*, const char *, int, struct _xenc__ReferenceList *const*, const char *);
SOAP_FMAC3 struct _xenc__ReferenceList ** SOAP_FMAC4 soap_in_PointerTo_xenc__ReferenceList(struct soap*, const char*, struct _xenc__ReferenceList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_xenc__ReferenceList(struct soap*, struct _xenc__ReferenceList *const*, const char*, const char*);

#ifndef soap_write_PointerTo_xenc__ReferenceList
#define soap_write_PointerTo_xenc__ReferenceList(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_xenc__ReferenceList(soap, data), soap_begin_send(soap) || soap_put_PointerTo_xenc__ReferenceList(soap, data, "xenc:ReferenceList", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _xenc__ReferenceList ** SOAP_FMAC4 soap_get_PointerTo_xenc__ReferenceList(struct soap*, struct _xenc__ReferenceList **, const char*, const char*);

#ifndef soap_read_PointerTo_xenc__ReferenceList
#define soap_read_PointerTo_xenc__ReferenceList(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_xenc__ReferenceList(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo__xenc__union_ReferenceList
#define SOAP_TYPE_PointerTo__xenc__union_ReferenceList (132)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__xenc__union_ReferenceList(struct soap*, struct __xenc__union_ReferenceList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__xenc__union_ReferenceList(struct soap*, const char *, int, struct __xenc__union_ReferenceList *const*, const char *);
SOAP_FMAC3 struct __xenc__union_ReferenceList ** SOAP_FMAC4 soap_in_PointerTo__xenc__union_ReferenceList(struct soap*, const char*, struct __xenc__union_ReferenceList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__xenc__union_ReferenceList(struct soap*, struct __xenc__union_ReferenceList *const*, const char*, const char*);

#ifndef soap_write_PointerTo__xenc__union_ReferenceList
#define soap_write_PointerTo__xenc__union_ReferenceList(soap, data) ( soap_begin(soap), soap_serialize_PointerTo__xenc__union_ReferenceList(soap, data), soap_begin_send(soap) || soap_put_PointerTo__xenc__union_ReferenceList(soap, data, "-xenc:union-ReferenceList", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __xenc__union_ReferenceList ** SOAP_FMAC4 soap_get_PointerTo__xenc__union_ReferenceList(struct soap*, struct __xenc__union_ReferenceList **, const char*, const char*);

#ifndef soap_read_PointerTo__xenc__union_ReferenceList
#define soap_read_PointerTo__xenc__union_ReferenceList(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo__xenc__union_ReferenceList(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerToxenc__ReferenceType
#define SOAP_TYPE_PointerToxenc__ReferenceType (131)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxenc__ReferenceType(struct soap*, struct xenc__ReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxenc__ReferenceType(struct soap*, const char *, int, struct xenc__ReferenceType *const*, const char *);
SOAP_FMAC3 struct xenc__ReferenceType ** SOAP_FMAC4 soap_in_PointerToxenc__ReferenceType(struct soap*, const char*, struct xenc__ReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxenc__ReferenceType(struct soap*, struct xenc__ReferenceType *const*, const char*, const char*);

#ifndef soap_write_PointerToxenc__ReferenceType
#define soap_write_PointerToxenc__ReferenceType(soap, data) ( soap_begin(soap), soap_serialize_PointerToxenc__ReferenceType(soap, data), soap_begin_send(soap) || soap_put_PointerToxenc__ReferenceType(soap, data, "xenc:ReferenceType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct xenc__ReferenceType ** SOAP_FMAC4 soap_get_PointerToxenc__ReferenceType(struct soap*, struct xenc__ReferenceType **, const char*, const char*);

#ifndef soap_read_PointerToxenc__ReferenceType
#define soap_read_PointerToxenc__ReferenceType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxenc__ReferenceType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerToxenc__EncryptionPropertyType
#define SOAP_TYPE_PointerToxenc__EncryptionPropertyType (129)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxenc__EncryptionPropertyType(struct soap*, struct xenc__EncryptionPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxenc__EncryptionPropertyType(struct soap*, const char *, int, struct xenc__EncryptionPropertyType *const*, const char *);
SOAP_FMAC3 struct xenc__EncryptionPropertyType ** SOAP_FMAC4 soap_in_PointerToxenc__EncryptionPropertyType(struct soap*, const char*, struct xenc__EncryptionPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxenc__EncryptionPropertyType(struct soap*, struct xenc__EncryptionPropertyType *const*, const char*, const char*);

#ifndef soap_write_PointerToxenc__EncryptionPropertyType
#define soap_write_PointerToxenc__EncryptionPropertyType(soap, data) ( soap_begin(soap), soap_serialize_PointerToxenc__EncryptionPropertyType(soap, data), soap_begin_send(soap) || soap_put_PointerToxenc__EncryptionPropertyType(soap, data, "xenc:EncryptionPropertyType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct xenc__EncryptionPropertyType ** SOAP_FMAC4 soap_get_PointerToxenc__EncryptionPropertyType(struct soap*, struct xenc__EncryptionPropertyType **, const char*, const char*);

#ifndef soap_read_PointerToxenc__EncryptionPropertyType
#define soap_read_PointerToxenc__EncryptionPropertyType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxenc__EncryptionPropertyType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerToxenc__TransformsType
#define SOAP_TYPE_PointerToxenc__TransformsType (128)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxenc__TransformsType(struct soap*, struct xenc__TransformsType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxenc__TransformsType(struct soap*, const char *, int, struct xenc__TransformsType *const*, const char *);
SOAP_FMAC3 struct xenc__TransformsType ** SOAP_FMAC4 soap_in_PointerToxenc__TransformsType(struct soap*, const char*, struct xenc__TransformsType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxenc__TransformsType(struct soap*, struct xenc__TransformsType *const*, const char*, const char*);

#ifndef soap_write_PointerToxenc__TransformsType
#define soap_write_PointerToxenc__TransformsType(soap, data) ( soap_begin(soap), soap_serialize_PointerToxenc__TransformsType(soap, data), soap_begin_send(soap) || soap_put_PointerToxenc__TransformsType(soap, data, "xenc:TransformsType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct xenc__TransformsType ** SOAP_FMAC4 soap_get_PointerToxenc__TransformsType(struct soap*, struct xenc__TransformsType **, const char*, const char*);

#ifndef soap_read_PointerToxenc__TransformsType
#define soap_read_PointerToxenc__TransformsType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxenc__TransformsType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerToxenc__CipherReferenceType
#define SOAP_TYPE_PointerToxenc__CipherReferenceType (127)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxenc__CipherReferenceType(struct soap*, struct xenc__CipherReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxenc__CipherReferenceType(struct soap*, const char *, int, struct xenc__CipherReferenceType *const*, const char *);
SOAP_FMAC3 struct xenc__CipherReferenceType ** SOAP_FMAC4 soap_in_PointerToxenc__CipherReferenceType(struct soap*, const char*, struct xenc__CipherReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxenc__CipherReferenceType(struct soap*, struct xenc__CipherReferenceType *const*, const char*, const char*);

#ifndef soap_write_PointerToxenc__CipherReferenceType
#define soap_write_PointerToxenc__CipherReferenceType(soap, data) ( soap_begin(soap), soap_serialize_PointerToxenc__CipherReferenceType(soap, data), soap_begin_send(soap) || soap_put_PointerToxenc__CipherReferenceType(soap, data, "xenc:CipherReferenceType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct xenc__CipherReferenceType ** SOAP_FMAC4 soap_get_PointerToxenc__CipherReferenceType(struct soap*, struct xenc__CipherReferenceType **, const char*, const char*);

#ifndef soap_read_PointerToxenc__CipherReferenceType
#define soap_read_PointerToxenc__CipherReferenceType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxenc__CipherReferenceType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerToxenc__EncryptionPropertiesType
#define SOAP_TYPE_PointerToxenc__EncryptionPropertiesType (126)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxenc__EncryptionPropertiesType(struct soap*, struct xenc__EncryptionPropertiesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxenc__EncryptionPropertiesType(struct soap*, const char *, int, struct xenc__EncryptionPropertiesType *const*, const char *);
SOAP_FMAC3 struct xenc__EncryptionPropertiesType ** SOAP_FMAC4 soap_in_PointerToxenc__EncryptionPropertiesType(struct soap*, const char*, struct xenc__EncryptionPropertiesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxenc__EncryptionPropertiesType(struct soap*, struct xenc__EncryptionPropertiesType *const*, const char*, const char*);

#ifndef soap_write_PointerToxenc__EncryptionPropertiesType
#define soap_write_PointerToxenc__EncryptionPropertiesType(soap, data) ( soap_begin(soap), soap_serialize_PointerToxenc__EncryptionPropertiesType(soap, data), soap_begin_send(soap) || soap_put_PointerToxenc__EncryptionPropertiesType(soap, data, "xenc:EncryptionPropertiesType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct xenc__EncryptionPropertiesType ** SOAP_FMAC4 soap_get_PointerToxenc__EncryptionPropertiesType(struct soap*, struct xenc__EncryptionPropertiesType **, const char*, const char*);

#ifndef soap_read_PointerToxenc__EncryptionPropertiesType
#define soap_read_PointerToxenc__EncryptionPropertiesType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxenc__EncryptionPropertiesType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerToxenc__CipherDataType
#define SOAP_TYPE_PointerToxenc__CipherDataType (125)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxenc__CipherDataType(struct soap*, struct xenc__CipherDataType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxenc__CipherDataType(struct soap*, const char *, int, struct xenc__CipherDataType *const*, const char *);
SOAP_FMAC3 struct xenc__CipherDataType ** SOAP_FMAC4 soap_in_PointerToxenc__CipherDataType(struct soap*, const char*, struct xenc__CipherDataType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxenc__CipherDataType(struct soap*, struct xenc__CipherDataType *const*, const char*, const char*);

#ifndef soap_write_PointerToxenc__CipherDataType
#define soap_write_PointerToxenc__CipherDataType(soap, data) ( soap_begin(soap), soap_serialize_PointerToxenc__CipherDataType(soap, data), soap_begin_send(soap) || soap_put_PointerToxenc__CipherDataType(soap, data, "xenc:CipherDataType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct xenc__CipherDataType ** SOAP_FMAC4 soap_get_PointerToxenc__CipherDataType(struct soap*, struct xenc__CipherDataType **, const char*, const char*);

#ifndef soap_read_PointerToxenc__CipherDataType
#define soap_read_PointerToxenc__CipherDataType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxenc__CipherDataType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ds__KeyInfo
#define SOAP_TYPE_PointerTo_ds__KeyInfo (124)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ds__KeyInfo(struct soap*, struct ds__KeyInfoType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ds__KeyInfo(struct soap*, const char *, int, struct ds__KeyInfoType *const*, const char *);
SOAP_FMAC3 struct ds__KeyInfoType ** SOAP_FMAC4 soap_in_PointerTo_ds__KeyInfo(struct soap*, const char*, struct ds__KeyInfoType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ds__KeyInfo(struct soap*, struct ds__KeyInfoType *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ds__KeyInfo
#define soap_write_PointerTo_ds__KeyInfo(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ds__KeyInfo(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ds__KeyInfo(soap, data, "ds:KeyInfo", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__KeyInfoType ** SOAP_FMAC4 soap_get_PointerTo_ds__KeyInfo(struct soap*, struct ds__KeyInfoType **, const char*, const char*);

#ifndef soap_read_PointerTo_ds__KeyInfo
#define soap_read_PointerTo_ds__KeyInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ds__KeyInfo(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerToxenc__EncryptionMethodType
#define SOAP_TYPE_PointerToxenc__EncryptionMethodType (123)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxenc__EncryptionMethodType(struct soap*, struct xenc__EncryptionMethodType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxenc__EncryptionMethodType(struct soap*, const char *, int, struct xenc__EncryptionMethodType *const*, const char *);
SOAP_FMAC3 struct xenc__EncryptionMethodType ** SOAP_FMAC4 soap_in_PointerToxenc__EncryptionMethodType(struct soap*, const char*, struct xenc__EncryptionMethodType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxenc__EncryptionMethodType(struct soap*, struct xenc__EncryptionMethodType *const*, const char*, const char*);

#ifndef soap_write_PointerToxenc__EncryptionMethodType
#define soap_write_PointerToxenc__EncryptionMethodType(soap, data) ( soap_begin(soap), soap_serialize_PointerToxenc__EncryptionMethodType(soap, data), soap_begin_send(soap) || soap_put_PointerToxenc__EncryptionMethodType(soap, data, "xenc:EncryptionMethodType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct xenc__EncryptionMethodType ** SOAP_FMAC4 soap_get_PointerToxenc__EncryptionMethodType(struct soap*, struct xenc__EncryptionMethodType **, const char*, const char*);

#ifndef soap_read_PointerToxenc__EncryptionMethodType
#define soap_read_PointerToxenc__EncryptionMethodType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxenc__EncryptionMethodType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTods__X509IssuerSerialType
#define SOAP_TYPE_PointerTods__X509IssuerSerialType (110)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__X509IssuerSerialType(struct soap*, struct ds__X509IssuerSerialType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__X509IssuerSerialType(struct soap*, const char *, int, struct ds__X509IssuerSerialType *const*, const char *);
SOAP_FMAC3 struct ds__X509IssuerSerialType ** SOAP_FMAC4 soap_in_PointerTods__X509IssuerSerialType(struct soap*, const char*, struct ds__X509IssuerSerialType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__X509IssuerSerialType(struct soap*, struct ds__X509IssuerSerialType *const*, const char*, const char*);

#ifndef soap_write_PointerTods__X509IssuerSerialType
#define soap_write_PointerTods__X509IssuerSerialType(soap, data) ( soap_begin(soap), soap_serialize_PointerTods__X509IssuerSerialType(soap, data), soap_begin_send(soap) || soap_put_PointerTods__X509IssuerSerialType(soap, data, "ds:X509IssuerSerialType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__X509IssuerSerialType ** SOAP_FMAC4 soap_get_PointerTods__X509IssuerSerialType(struct soap*, struct ds__X509IssuerSerialType **, const char*, const char*);

#ifndef soap_read_PointerTods__X509IssuerSerialType
#define soap_read_PointerTods__X509IssuerSerialType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTods__X509IssuerSerialType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTods__RSAKeyValueType
#define SOAP_TYPE_PointerTods__RSAKeyValueType (109)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__RSAKeyValueType(struct soap*, struct ds__RSAKeyValueType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__RSAKeyValueType(struct soap*, const char *, int, struct ds__RSAKeyValueType *const*, const char *);
SOAP_FMAC3 struct ds__RSAKeyValueType ** SOAP_FMAC4 soap_in_PointerTods__RSAKeyValueType(struct soap*, const char*, struct ds__RSAKeyValueType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__RSAKeyValueType(struct soap*, struct ds__RSAKeyValueType *const*, const char*, const char*);

#ifndef soap_write_PointerTods__RSAKeyValueType
#define soap_write_PointerTods__RSAKeyValueType(soap, data) ( soap_begin(soap), soap_serialize_PointerTods__RSAKeyValueType(soap, data), soap_begin_send(soap) || soap_put_PointerTods__RSAKeyValueType(soap, data, "ds:RSAKeyValueType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__RSAKeyValueType ** SOAP_FMAC4 soap_get_PointerTods__RSAKeyValueType(struct soap*, struct ds__RSAKeyValueType **, const char*, const char*);

#ifndef soap_read_PointerTods__RSAKeyValueType
#define soap_read_PointerTods__RSAKeyValueType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTods__RSAKeyValueType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTods__DSAKeyValueType
#define SOAP_TYPE_PointerTods__DSAKeyValueType (108)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__DSAKeyValueType(struct soap*, struct ds__DSAKeyValueType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__DSAKeyValueType(struct soap*, const char *, int, struct ds__DSAKeyValueType *const*, const char *);
SOAP_FMAC3 struct ds__DSAKeyValueType ** SOAP_FMAC4 soap_in_PointerTods__DSAKeyValueType(struct soap*, const char*, struct ds__DSAKeyValueType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__DSAKeyValueType(struct soap*, struct ds__DSAKeyValueType *const*, const char*, const char*);

#ifndef soap_write_PointerTods__DSAKeyValueType
#define soap_write_PointerTods__DSAKeyValueType(soap, data) ( soap_begin(soap), soap_serialize_PointerTods__DSAKeyValueType(soap, data), soap_begin_send(soap) || soap_put_PointerTods__DSAKeyValueType(soap, data, "ds:DSAKeyValueType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__DSAKeyValueType ** SOAP_FMAC4 soap_get_PointerTods__DSAKeyValueType(struct soap*, struct ds__DSAKeyValueType **, const char*, const char*);

#ifndef soap_read_PointerTods__DSAKeyValueType
#define soap_read_PointerTods__DSAKeyValueType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTods__DSAKeyValueType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTods__TransformType
#define SOAP_TYPE_PointerTods__TransformType (107)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__TransformType(struct soap*, struct ds__TransformType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__TransformType(struct soap*, const char *, int, struct ds__TransformType *const*, const char *);
SOAP_FMAC3 struct ds__TransformType ** SOAP_FMAC4 soap_in_PointerTods__TransformType(struct soap*, const char*, struct ds__TransformType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__TransformType(struct soap*, struct ds__TransformType *const*, const char*, const char*);

#ifndef soap_write_PointerTods__TransformType
#define soap_write_PointerTods__TransformType(soap, data) ( soap_begin(soap), soap_serialize_PointerTods__TransformType(soap, data), soap_begin_send(soap) || soap_put_PointerTods__TransformType(soap, data, "ds:TransformType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__TransformType ** SOAP_FMAC4 soap_get_PointerTods__TransformType(struct soap*, struct ds__TransformType **, const char*, const char*);

#ifndef soap_read_PointerTods__TransformType
#define soap_read_PointerTods__TransformType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTods__TransformType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTods__DigestMethodType
#define SOAP_TYPE_PointerTods__DigestMethodType (106)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__DigestMethodType(struct soap*, struct ds__DigestMethodType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__DigestMethodType(struct soap*, const char *, int, struct ds__DigestMethodType *const*, const char *);
SOAP_FMAC3 struct ds__DigestMethodType ** SOAP_FMAC4 soap_in_PointerTods__DigestMethodType(struct soap*, const char*, struct ds__DigestMethodType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__DigestMethodType(struct soap*, struct ds__DigestMethodType *const*, const char*, const char*);

#ifndef soap_write_PointerTods__DigestMethodType
#define soap_write_PointerTods__DigestMethodType(soap, data) ( soap_begin(soap), soap_serialize_PointerTods__DigestMethodType(soap, data), soap_begin_send(soap) || soap_put_PointerTods__DigestMethodType(soap, data, "ds:DigestMethodType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__DigestMethodType ** SOAP_FMAC4 soap_get_PointerTods__DigestMethodType(struct soap*, struct ds__DigestMethodType **, const char*, const char*);

#ifndef soap_read_PointerTods__DigestMethodType
#define soap_read_PointerTods__DigestMethodType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTods__DigestMethodType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTods__TransformsType
#define SOAP_TYPE_PointerTods__TransformsType (105)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__TransformsType(struct soap*, struct ds__TransformsType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__TransformsType(struct soap*, const char *, int, struct ds__TransformsType *const*, const char *);
SOAP_FMAC3 struct ds__TransformsType ** SOAP_FMAC4 soap_in_PointerTods__TransformsType(struct soap*, const char*, struct ds__TransformsType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__TransformsType(struct soap*, struct ds__TransformsType *const*, const char*, const char*);

#ifndef soap_write_PointerTods__TransformsType
#define soap_write_PointerTods__TransformsType(soap, data) ( soap_begin(soap), soap_serialize_PointerTods__TransformsType(soap, data), soap_begin_send(soap) || soap_put_PointerTods__TransformsType(soap, data, "ds:TransformsType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__TransformsType ** SOAP_FMAC4 soap_get_PointerTods__TransformsType(struct soap*, struct ds__TransformsType **, const char*, const char*);

#ifndef soap_read_PointerTods__TransformsType
#define soap_read_PointerTods__TransformsType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTods__TransformsType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerToPointerTods__ReferenceType
#define SOAP_TYPE_PointerToPointerTods__ReferenceType (104)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerTods__ReferenceType(struct soap*, struct ds__ReferenceType **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerTods__ReferenceType(struct soap*, const char *, int, struct ds__ReferenceType **const*, const char *);
SOAP_FMAC3 struct ds__ReferenceType *** SOAP_FMAC4 soap_in_PointerToPointerTods__ReferenceType(struct soap*, const char*, struct ds__ReferenceType ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerTods__ReferenceType(struct soap*, struct ds__ReferenceType **const*, const char*, const char*);

#ifndef soap_write_PointerToPointerTods__ReferenceType
#define soap_write_PointerToPointerTods__ReferenceType(soap, data) ( soap_begin(soap), soap_serialize_PointerToPointerTods__ReferenceType(soap, data), soap_begin_send(soap) || soap_put_PointerToPointerTods__ReferenceType(soap, data, "ds:ReferenceType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__ReferenceType *** SOAP_FMAC4 soap_get_PointerToPointerTods__ReferenceType(struct soap*, struct ds__ReferenceType ***, const char*, const char*);

#ifndef soap_read_PointerToPointerTods__ReferenceType
#define soap_read_PointerToPointerTods__ReferenceType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToPointerTods__ReferenceType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTods__ReferenceType
#define SOAP_TYPE_PointerTods__ReferenceType (103)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__ReferenceType(struct soap*, struct ds__ReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__ReferenceType(struct soap*, const char *, int, struct ds__ReferenceType *const*, const char *);
SOAP_FMAC3 struct ds__ReferenceType ** SOAP_FMAC4 soap_in_PointerTods__ReferenceType(struct soap*, const char*, struct ds__ReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__ReferenceType(struct soap*, struct ds__ReferenceType *const*, const char*, const char*);

#ifndef soap_write_PointerTods__ReferenceType
#define soap_write_PointerTods__ReferenceType(soap, data) ( soap_begin(soap), soap_serialize_PointerTods__ReferenceType(soap, data), soap_begin_send(soap) || soap_put_PointerTods__ReferenceType(soap, data, "ds:ReferenceType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__ReferenceType ** SOAP_FMAC4 soap_get_PointerTods__ReferenceType(struct soap*, struct ds__ReferenceType **, const char*, const char*);

#ifndef soap_read_PointerTods__ReferenceType
#define soap_read_PointerTods__ReferenceType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTods__ReferenceType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTods__SignatureMethodType
#define SOAP_TYPE_PointerTods__SignatureMethodType (102)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__SignatureMethodType(struct soap*, struct ds__SignatureMethodType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__SignatureMethodType(struct soap*, const char *, int, struct ds__SignatureMethodType *const*, const char *);
SOAP_FMAC3 struct ds__SignatureMethodType ** SOAP_FMAC4 soap_in_PointerTods__SignatureMethodType(struct soap*, const char*, struct ds__SignatureMethodType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__SignatureMethodType(struct soap*, struct ds__SignatureMethodType *const*, const char*, const char*);

#ifndef soap_write_PointerTods__SignatureMethodType
#define soap_write_PointerTods__SignatureMethodType(soap, data) ( soap_begin(soap), soap_serialize_PointerTods__SignatureMethodType(soap, data), soap_begin_send(soap) || soap_put_PointerTods__SignatureMethodType(soap, data, "ds:SignatureMethodType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__SignatureMethodType ** SOAP_FMAC4 soap_get_PointerTods__SignatureMethodType(struct soap*, struct ds__SignatureMethodType **, const char*, const char*);

#ifndef soap_read_PointerTods__SignatureMethodType
#define soap_read_PointerTods__SignatureMethodType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTods__SignatureMethodType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTods__CanonicalizationMethodType
#define SOAP_TYPE_PointerTods__CanonicalizationMethodType (101)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__CanonicalizationMethodType(struct soap*, struct ds__CanonicalizationMethodType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__CanonicalizationMethodType(struct soap*, const char *, int, struct ds__CanonicalizationMethodType *const*, const char *);
SOAP_FMAC3 struct ds__CanonicalizationMethodType ** SOAP_FMAC4 soap_in_PointerTods__CanonicalizationMethodType(struct soap*, const char*, struct ds__CanonicalizationMethodType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__CanonicalizationMethodType(struct soap*, struct ds__CanonicalizationMethodType *const*, const char*, const char*);

#ifndef soap_write_PointerTods__CanonicalizationMethodType
#define soap_write_PointerTods__CanonicalizationMethodType(soap, data) ( soap_begin(soap), soap_serialize_PointerTods__CanonicalizationMethodType(soap, data), soap_begin_send(soap) || soap_put_PointerTods__CanonicalizationMethodType(soap, data, "ds:CanonicalizationMethodType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__CanonicalizationMethodType ** SOAP_FMAC4 soap_get_PointerTods__CanonicalizationMethodType(struct soap*, struct ds__CanonicalizationMethodType **, const char*, const char*);

#ifndef soap_read_PointerTods__CanonicalizationMethodType
#define soap_read_PointerTods__CanonicalizationMethodType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTods__CanonicalizationMethodType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsse__SecurityTokenReference
#define SOAP_TYPE_PointerTo_wsse__SecurityTokenReference (96)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsse__SecurityTokenReference(struct soap*, struct _wsse__SecurityTokenReference *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsse__SecurityTokenReference(struct soap*, const char *, int, struct _wsse__SecurityTokenReference *const*, const char *);
SOAP_FMAC3 struct _wsse__SecurityTokenReference ** SOAP_FMAC4 soap_in_PointerTo_wsse__SecurityTokenReference(struct soap*, const char*, struct _wsse__SecurityTokenReference **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsse__SecurityTokenReference(struct soap*, struct _wsse__SecurityTokenReference *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsse__SecurityTokenReference
#define soap_write_PointerTo_wsse__SecurityTokenReference(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_wsse__SecurityTokenReference(soap, data), soap_begin_send(soap) || soap_put_PointerTo_wsse__SecurityTokenReference(soap, data, "wsse:SecurityTokenReference", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _wsse__SecurityTokenReference ** SOAP_FMAC4 soap_get_PointerTo_wsse__SecurityTokenReference(struct soap*, struct _wsse__SecurityTokenReference **, const char*, const char*);

#ifndef soap_read_PointerTo_wsse__SecurityTokenReference
#define soap_read_PointerTo_wsse__SecurityTokenReference(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_wsse__SecurityTokenReference(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTods__RetrievalMethodType
#define SOAP_TYPE_PointerTods__RetrievalMethodType (95)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__RetrievalMethodType(struct soap*, struct ds__RetrievalMethodType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__RetrievalMethodType(struct soap*, const char *, int, struct ds__RetrievalMethodType *const*, const char *);
SOAP_FMAC3 struct ds__RetrievalMethodType ** SOAP_FMAC4 soap_in_PointerTods__RetrievalMethodType(struct soap*, const char*, struct ds__RetrievalMethodType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__RetrievalMethodType(struct soap*, struct ds__RetrievalMethodType *const*, const char*, const char*);

#ifndef soap_write_PointerTods__RetrievalMethodType
#define soap_write_PointerTods__RetrievalMethodType(soap, data) ( soap_begin(soap), soap_serialize_PointerTods__RetrievalMethodType(soap, data), soap_begin_send(soap) || soap_put_PointerTods__RetrievalMethodType(soap, data, "ds:RetrievalMethodType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__RetrievalMethodType ** SOAP_FMAC4 soap_get_PointerTods__RetrievalMethodType(struct soap*, struct ds__RetrievalMethodType **, const char*, const char*);

#ifndef soap_read_PointerTods__RetrievalMethodType
#define soap_read_PointerTods__RetrievalMethodType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTods__RetrievalMethodType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTods__KeyValueType
#define SOAP_TYPE_PointerTods__KeyValueType (93)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__KeyValueType(struct soap*, struct ds__KeyValueType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__KeyValueType(struct soap*, const char *, int, struct ds__KeyValueType *const*, const char *);
SOAP_FMAC3 struct ds__KeyValueType ** SOAP_FMAC4 soap_in_PointerTods__KeyValueType(struct soap*, const char*, struct ds__KeyValueType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__KeyValueType(struct soap*, struct ds__KeyValueType *const*, const char*, const char*);

#ifndef soap_write_PointerTods__KeyValueType
#define soap_write_PointerTods__KeyValueType(soap, data) ( soap_begin(soap), soap_serialize_PointerTods__KeyValueType(soap, data), soap_begin_send(soap) || soap_put_PointerTods__KeyValueType(soap, data, "ds:KeyValueType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__KeyValueType ** SOAP_FMAC4 soap_get_PointerTods__KeyValueType(struct soap*, struct ds__KeyValueType **, const char*, const char*);

#ifndef soap_read_PointerTods__KeyValueType
#define soap_read_PointerTods__KeyValueType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTods__KeyValueType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_c14n__InclusiveNamespaces
#define SOAP_TYPE_PointerTo_c14n__InclusiveNamespaces (89)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_c14n__InclusiveNamespaces(struct soap*, struct _c14n__InclusiveNamespaces *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_c14n__InclusiveNamespaces(struct soap*, const char *, int, struct _c14n__InclusiveNamespaces *const*, const char *);
SOAP_FMAC3 struct _c14n__InclusiveNamespaces ** SOAP_FMAC4 soap_in_PointerTo_c14n__InclusiveNamespaces(struct soap*, const char*, struct _c14n__InclusiveNamespaces **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_c14n__InclusiveNamespaces(struct soap*, struct _c14n__InclusiveNamespaces *const*, const char*, const char*);

#ifndef soap_write_PointerTo_c14n__InclusiveNamespaces
#define soap_write_PointerTo_c14n__InclusiveNamespaces(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_c14n__InclusiveNamespaces(soap, data), soap_begin_send(soap) || soap_put_PointerTo_c14n__InclusiveNamespaces(soap, data, "c14n:InclusiveNamespaces", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _c14n__InclusiveNamespaces ** SOAP_FMAC4 soap_get_PointerTo_c14n__InclusiveNamespaces(struct soap*, struct _c14n__InclusiveNamespaces **, const char*, const char*);

#ifndef soap_read_PointerTo_c14n__InclusiveNamespaces
#define soap_read_PointerTo_c14n__InclusiveNamespaces(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_c14n__InclusiveNamespaces(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTods__KeyInfoType
#define SOAP_TYPE_PointerTods__KeyInfoType (81)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__KeyInfoType(struct soap*, struct ds__KeyInfoType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__KeyInfoType(struct soap*, const char *, int, struct ds__KeyInfoType *const*, const char *);
SOAP_FMAC3 struct ds__KeyInfoType ** SOAP_FMAC4 soap_in_PointerTods__KeyInfoType(struct soap*, const char*, struct ds__KeyInfoType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__KeyInfoType(struct soap*, struct ds__KeyInfoType *const*, const char*, const char*);

#ifndef soap_write_PointerTods__KeyInfoType
#define soap_write_PointerTods__KeyInfoType(soap, data) ( soap_begin(soap), soap_serialize_PointerTods__KeyInfoType(soap, data), soap_begin_send(soap) || soap_put_PointerTods__KeyInfoType(soap, data, "ds:KeyInfoType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__KeyInfoType ** SOAP_FMAC4 soap_get_PointerTods__KeyInfoType(struct soap*, struct ds__KeyInfoType **, const char*, const char*);

#ifndef soap_read_PointerTods__KeyInfoType
#define soap_read_PointerTods__KeyInfoType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTods__KeyInfoType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTods__SignedInfoType
#define SOAP_TYPE_PointerTods__SignedInfoType (79)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__SignedInfoType(struct soap*, struct ds__SignedInfoType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__SignedInfoType(struct soap*, const char *, int, struct ds__SignedInfoType *const*, const char *);
SOAP_FMAC3 struct ds__SignedInfoType ** SOAP_FMAC4 soap_in_PointerTods__SignedInfoType(struct soap*, const char*, struct ds__SignedInfoType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__SignedInfoType(struct soap*, struct ds__SignedInfoType *const*, const char*, const char*);

#ifndef soap_write_PointerTods__SignedInfoType
#define soap_write_PointerTods__SignedInfoType(soap, data) ( soap_begin(soap), soap_serialize_PointerTods__SignedInfoType(soap, data), soap_begin_send(soap) || soap_put_PointerTods__SignedInfoType(soap, data, "ds:SignedInfoType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__SignedInfoType ** SOAP_FMAC4 soap_get_PointerTods__SignedInfoType(struct soap*, struct ds__SignedInfoType **, const char*, const char*);

#ifndef soap_read_PointerTods__SignedInfoType
#define soap_read_PointerTods__SignedInfoType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTods__SignedInfoType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTods__X509DataType
#define SOAP_TYPE_PointerTods__X509DataType (76)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__X509DataType(struct soap*, struct ds__X509DataType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__X509DataType(struct soap*, const char *, int, struct ds__X509DataType *const*, const char *);
SOAP_FMAC3 struct ds__X509DataType ** SOAP_FMAC4 soap_in_PointerTods__X509DataType(struct soap*, const char*, struct ds__X509DataType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__X509DataType(struct soap*, struct ds__X509DataType *const*, const char*, const char*);

#ifndef soap_write_PointerTods__X509DataType
#define soap_write_PointerTods__X509DataType(soap, data) ( soap_begin(soap), soap_serialize_PointerTods__X509DataType(soap, data), soap_begin_send(soap) || soap_put_PointerTods__X509DataType(soap, data, "ds:X509DataType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ds__X509DataType ** SOAP_FMAC4 soap_get_PointerTods__X509DataType(struct soap*, struct ds__X509DataType **, const char*, const char*);

#ifndef soap_read_PointerTods__X509DataType
#define soap_read_PointerTods__X509DataType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTods__X509DataType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsse__Embedded
#define SOAP_TYPE_PointerTo_wsse__Embedded (74)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsse__Embedded(struct soap*, struct _wsse__Embedded *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsse__Embedded(struct soap*, const char *, int, struct _wsse__Embedded *const*, const char *);
SOAP_FMAC3 struct _wsse__Embedded ** SOAP_FMAC4 soap_in_PointerTo_wsse__Embedded(struct soap*, const char*, struct _wsse__Embedded **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsse__Embedded(struct soap*, struct _wsse__Embedded *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsse__Embedded
#define soap_write_PointerTo_wsse__Embedded(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_wsse__Embedded(soap, data), soap_begin_send(soap) || soap_put_PointerTo_wsse__Embedded(soap, data, "wsse:Embedded", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _wsse__Embedded ** SOAP_FMAC4 soap_get_PointerTo_wsse__Embedded(struct soap*, struct _wsse__Embedded **, const char*, const char*);

#ifndef soap_read_PointerTo_wsse__Embedded
#define soap_read_PointerTo_wsse__Embedded(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_wsse__Embedded(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsse__KeyIdentifier
#define SOAP_TYPE_PointerTo_wsse__KeyIdentifier (73)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsse__KeyIdentifier(struct soap*, struct _wsse__KeyIdentifier *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsse__KeyIdentifier(struct soap*, const char *, int, struct _wsse__KeyIdentifier *const*, const char *);
SOAP_FMAC3 struct _wsse__KeyIdentifier ** SOAP_FMAC4 soap_in_PointerTo_wsse__KeyIdentifier(struct soap*, const char*, struct _wsse__KeyIdentifier **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsse__KeyIdentifier(struct soap*, struct _wsse__KeyIdentifier *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsse__KeyIdentifier
#define soap_write_PointerTo_wsse__KeyIdentifier(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_wsse__KeyIdentifier(soap, data), soap_begin_send(soap) || soap_put_PointerTo_wsse__KeyIdentifier(soap, data, "wsse:KeyIdentifier", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _wsse__KeyIdentifier ** SOAP_FMAC4 soap_get_PointerTo_wsse__KeyIdentifier(struct soap*, struct _wsse__KeyIdentifier **, const char*, const char*);

#ifndef soap_read_PointerTo_wsse__KeyIdentifier
#define soap_read_PointerTo_wsse__KeyIdentifier(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_wsse__KeyIdentifier(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsse__Reference
#define SOAP_TYPE_PointerTo_wsse__Reference (72)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsse__Reference(struct soap*, struct _wsse__Reference *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsse__Reference(struct soap*, const char *, int, struct _wsse__Reference *const*, const char *);
SOAP_FMAC3 struct _wsse__Reference ** SOAP_FMAC4 soap_in_PointerTo_wsse__Reference(struct soap*, const char*, struct _wsse__Reference **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsse__Reference(struct soap*, struct _wsse__Reference *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsse__Reference
#define soap_write_PointerTo_wsse__Reference(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_wsse__Reference(soap, data), soap_begin_send(soap) || soap_put_PointerTo_wsse__Reference(soap, data, "wsse:Reference", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _wsse__Reference ** SOAP_FMAC4 soap_get_PointerTo_wsse__Reference(struct soap*, struct _wsse__Reference **, const char*, const char*);

#ifndef soap_read_PointerTo_wsse__Reference
#define soap_read_PointerTo_wsse__Reference(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_wsse__Reference(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsse__Password
#define SOAP_TYPE_PointerTo_wsse__Password (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsse__Password(struct soap*, struct _wsse__Password *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsse__Password(struct soap*, const char *, int, struct _wsse__Password *const*, const char *);
SOAP_FMAC3 struct _wsse__Password ** SOAP_FMAC4 soap_in_PointerTo_wsse__Password(struct soap*, const char*, struct _wsse__Password **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsse__Password(struct soap*, struct _wsse__Password *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsse__Password
#define soap_write_PointerTo_wsse__Password(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_wsse__Password(soap, data), soap_begin_send(soap) || soap_put_PointerTo_wsse__Password(soap, data, "wsse:Password", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _wsse__Password ** SOAP_FMAC4 soap_get_PointerTo_wsse__Password(struct soap*, struct _wsse__Password **, const char*, const char*);

#ifndef soap_read_PointerTo_wsse__Password
#define soap_read_PointerTo_wsse__Password(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_wsse__Password(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__getUserNonceResponse
#define SOAP_TYPE_PointerTons1__getUserNonceResponse (58)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__getUserNonceResponse(struct soap*, ns1__getUserNonceResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getUserNonceResponse(struct soap*, const char *, int, ns1__getUserNonceResponse *const*, const char *);
SOAP_FMAC3 ns1__getUserNonceResponse ** SOAP_FMAC4 soap_in_PointerTons1__getUserNonceResponse(struct soap*, const char*, ns1__getUserNonceResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getUserNonceResponse(struct soap*, ns1__getUserNonceResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__getUserNonceResponse
#define soap_write_PointerTons1__getUserNonceResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTons1__getUserNonceResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTons1__getUserNonceResponse(soap, data, "ns1:getUserNonceResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__getUserNonceResponse ** SOAP_FMAC4 soap_get_PointerTons1__getUserNonceResponse(struct soap*, ns1__getUserNonceResponse **, const char*, const char*);

#ifndef soap_read_PointerTons1__getUserNonceResponse
#define soap_read_PointerTons1__getUserNonceResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__getUserNonceResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__getUserNonce
#define SOAP_TYPE_PointerTons1__getUserNonce (57)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__getUserNonce(struct soap*, ns1__getUserNonce *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getUserNonce(struct soap*, const char *, int, ns1__getUserNonce *const*, const char *);
SOAP_FMAC3 ns1__getUserNonce ** SOAP_FMAC4 soap_in_PointerTons1__getUserNonce(struct soap*, const char*, ns1__getUserNonce **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getUserNonce(struct soap*, ns1__getUserNonce *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__getUserNonce
#define soap_write_PointerTons1__getUserNonce(soap, data) ( soap_begin(soap), soap_serialize_PointerTons1__getUserNonce(soap, data), soap_begin_send(soap) || soap_put_PointerTons1__getUserNonce(soap, data, "ns1:getUserNonce", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__getUserNonce ** SOAP_FMAC4 soap_get_PointerTons1__getUserNonce(struct soap*, ns1__getUserNonce **, const char*, const char*);

#ifndef soap_read_PointerTons1__getUserNonce
#define soap_read_PointerTons1__getUserNonce(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__getUserNonce(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__hasActiveSessionResponse
#define SOAP_TYPE_PointerTons1__hasActiveSessionResponse (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__hasActiveSessionResponse(struct soap*, ns1__hasActiveSessionResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__hasActiveSessionResponse(struct soap*, const char *, int, ns1__hasActiveSessionResponse *const*, const char *);
SOAP_FMAC3 ns1__hasActiveSessionResponse ** SOAP_FMAC4 soap_in_PointerTons1__hasActiveSessionResponse(struct soap*, const char*, ns1__hasActiveSessionResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__hasActiveSessionResponse(struct soap*, ns1__hasActiveSessionResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__hasActiveSessionResponse
#define soap_write_PointerTons1__hasActiveSessionResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTons1__hasActiveSessionResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTons1__hasActiveSessionResponse(soap, data, "ns1:hasActiveSessionResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__hasActiveSessionResponse ** SOAP_FMAC4 soap_get_PointerTons1__hasActiveSessionResponse(struct soap*, ns1__hasActiveSessionResponse **, const char*, const char*);

#ifndef soap_read_PointerTons1__hasActiveSessionResponse
#define soap_read_PointerTons1__hasActiveSessionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__hasActiveSessionResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__hasActiveSession
#define SOAP_TYPE_PointerTons1__hasActiveSession (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__hasActiveSession(struct soap*, ns1__hasActiveSession *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__hasActiveSession(struct soap*, const char *, int, ns1__hasActiveSession *const*, const char *);
SOAP_FMAC3 ns1__hasActiveSession ** SOAP_FMAC4 soap_in_PointerTons1__hasActiveSession(struct soap*, const char*, ns1__hasActiveSession **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__hasActiveSession(struct soap*, ns1__hasActiveSession *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__hasActiveSession
#define soap_write_PointerTons1__hasActiveSession(soap, data) ( soap_begin(soap), soap_serialize_PointerTons1__hasActiveSession(soap, data), soap_begin_send(soap) || soap_put_PointerTons1__hasActiveSession(soap, data, "ns1:hasActiveSession", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__hasActiveSession ** SOAP_FMAC4 soap_get_PointerTons1__hasActiveSession(struct soap*, ns1__hasActiveSession **, const char*, const char*);

#ifndef soap_read_PointerTons1__hasActiveSession
#define soap_read_PointerTons1__hasActiveSession(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__hasActiveSession(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__sessionsByIpResponse
#define SOAP_TYPE_PointerTons1__sessionsByIpResponse (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__sessionsByIpResponse(struct soap*, ns1__sessionsByIpResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__sessionsByIpResponse(struct soap*, const char *, int, ns1__sessionsByIpResponse *const*, const char *);
SOAP_FMAC3 ns1__sessionsByIpResponse ** SOAP_FMAC4 soap_in_PointerTons1__sessionsByIpResponse(struct soap*, const char*, ns1__sessionsByIpResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__sessionsByIpResponse(struct soap*, ns1__sessionsByIpResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__sessionsByIpResponse
#define soap_write_PointerTons1__sessionsByIpResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTons1__sessionsByIpResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTons1__sessionsByIpResponse(soap, data, "ns1:sessionsByIpResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__sessionsByIpResponse ** SOAP_FMAC4 soap_get_PointerTons1__sessionsByIpResponse(struct soap*, ns1__sessionsByIpResponse **, const char*, const char*);

#ifndef soap_read_PointerTons1__sessionsByIpResponse
#define soap_read_PointerTons1__sessionsByIpResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__sessionsByIpResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__sessionsByIp
#define SOAP_TYPE_PointerTons1__sessionsByIp (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__sessionsByIp(struct soap*, ns1__sessionsByIp *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__sessionsByIp(struct soap*, const char *, int, ns1__sessionsByIp *const*, const char *);
SOAP_FMAC3 ns1__sessionsByIp ** SOAP_FMAC4 soap_in_PointerTons1__sessionsByIp(struct soap*, const char*, ns1__sessionsByIp **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__sessionsByIp(struct soap*, ns1__sessionsByIp *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__sessionsByIp
#define soap_write_PointerTons1__sessionsByIp(soap, data) ( soap_begin(soap), soap_serialize_PointerTons1__sessionsByIp(soap, data), soap_begin_send(soap) || soap_put_PointerTons1__sessionsByIp(soap, data, "ns1:sessionsByIp", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__sessionsByIp ** SOAP_FMAC4 soap_get_PointerTons1__sessionsByIp(struct soap*, ns1__sessionsByIp **, const char*, const char*);

#ifndef soap_read_PointerTons1__sessionsByIp
#define soap_read_PointerTons1__sessionsByIp(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__sessionsByIp(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__singleSignOnResponse
#define SOAP_TYPE_PointerTons1__singleSignOnResponse (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__singleSignOnResponse(struct soap*, ns1__singleSignOnResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__singleSignOnResponse(struct soap*, const char *, int, ns1__singleSignOnResponse *const*, const char *);
SOAP_FMAC3 ns1__singleSignOnResponse ** SOAP_FMAC4 soap_in_PointerTons1__singleSignOnResponse(struct soap*, const char*, ns1__singleSignOnResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__singleSignOnResponse(struct soap*, ns1__singleSignOnResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__singleSignOnResponse
#define soap_write_PointerTons1__singleSignOnResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTons1__singleSignOnResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTons1__singleSignOnResponse(soap, data, "ns1:singleSignOnResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__singleSignOnResponse ** SOAP_FMAC4 soap_get_PointerTons1__singleSignOnResponse(struct soap*, ns1__singleSignOnResponse **, const char*, const char*);

#ifndef soap_read_PointerTons1__singleSignOnResponse
#define soap_read_PointerTons1__singleSignOnResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__singleSignOnResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__singleSignOn
#define SOAP_TYPE_PointerTons1__singleSignOn (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__singleSignOn(struct soap*, ns1__singleSignOn *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__singleSignOn(struct soap*, const char *, int, ns1__singleSignOn *const*, const char *);
SOAP_FMAC3 ns1__singleSignOn ** SOAP_FMAC4 soap_in_PointerTons1__singleSignOn(struct soap*, const char*, ns1__singleSignOn **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__singleSignOn(struct soap*, ns1__singleSignOn *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__singleSignOn
#define soap_write_PointerTons1__singleSignOn(soap, data) ( soap_begin(soap), soap_serialize_PointerTons1__singleSignOn(soap, data), soap_begin_send(soap) || soap_put_PointerTons1__singleSignOn(soap, data, "ns1:singleSignOn", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__singleSignOn ** SOAP_FMAC4 soap_get_PointerTons1__singleSignOn(struct soap*, ns1__singleSignOn **, const char*, const char*);

#ifndef soap_read_PointerTons1__singleSignOn
#define soap_read_PointerTons1__singleSignOn(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__singleSignOn(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__logoutResponse
#define SOAP_TYPE_PointerTons1__logoutResponse (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__logoutResponse(struct soap*, ns1__logoutResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__logoutResponse(struct soap*, const char *, int, ns1__logoutResponse *const*, const char *);
SOAP_FMAC3 ns1__logoutResponse ** SOAP_FMAC4 soap_in_PointerTons1__logoutResponse(struct soap*, const char*, ns1__logoutResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__logoutResponse(struct soap*, ns1__logoutResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__logoutResponse
#define soap_write_PointerTons1__logoutResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTons1__logoutResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTons1__logoutResponse(soap, data, "ns1:logoutResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__logoutResponse ** SOAP_FMAC4 soap_get_PointerTons1__logoutResponse(struct soap*, ns1__logoutResponse **, const char*, const char*);

#ifndef soap_read_PointerTons1__logoutResponse
#define soap_read_PointerTons1__logoutResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__logoutResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__logout
#define SOAP_TYPE_PointerTons1__logout (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__logout(struct soap*, ns1__logout *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__logout(struct soap*, const char *, int, ns1__logout *const*, const char *);
SOAP_FMAC3 ns1__logout ** SOAP_FMAC4 soap_in_PointerTons1__logout(struct soap*, const char*, ns1__logout **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__logout(struct soap*, ns1__logout *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__logout
#define soap_write_PointerTons1__logout(soap, data) ( soap_begin(soap), soap_serialize_PointerTons1__logout(soap, data), soap_begin_send(soap) || soap_put_PointerTons1__logout(soap, data, "ns1:logout", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__logout ** SOAP_FMAC4 soap_get_PointerTons1__logout(struct soap*, ns1__logout **, const char*, const char*);

#ifndef soap_read_PointerTons1__logout
#define soap_read_PointerTons1__logout(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__logout(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__loginResponse
#define SOAP_TYPE_PointerTons1__loginResponse (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__loginResponse(struct soap*, ns1__loginResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__loginResponse(struct soap*, const char *, int, ns1__loginResponse *const*, const char *);
SOAP_FMAC3 ns1__loginResponse ** SOAP_FMAC4 soap_in_PointerTons1__loginResponse(struct soap*, const char*, ns1__loginResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__loginResponse(struct soap*, ns1__loginResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__loginResponse
#define soap_write_PointerTons1__loginResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTons1__loginResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTons1__loginResponse(soap, data, "ns1:loginResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__loginResponse ** SOAP_FMAC4 soap_get_PointerTons1__loginResponse(struct soap*, ns1__loginResponse **, const char*, const char*);

#ifndef soap_read_PointerTons1__loginResponse
#define soap_read_PointerTons1__loginResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__loginResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__login
#define SOAP_TYPE_PointerTons1__login (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__login(struct soap*, ns1__login *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__login(struct soap*, const char *, int, ns1__login *const*, const char *);
SOAP_FMAC3 ns1__login ** SOAP_FMAC4 soap_in_PointerTons1__login(struct soap*, const char*, ns1__login **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__login(struct soap*, ns1__login *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__login
#define soap_write_PointerTons1__login(soap, data) ( soap_begin(soap), soap_serialize_PointerTons1__login(soap, data), soap_begin_send(soap) || soap_put_PointerTons1__login(soap, data, "ns1:login", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__login ** SOAP_FMAC4 soap_get_PointerTons1__login(struct soap*, ns1__login **, const char*, const char*);

#ifndef soap_read_PointerTons1__login
#define soap_read_PointerTons1__login(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__login(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__UnsupportedEncodingException
#define SOAP_TYPE_PointerTons1__UnsupportedEncodingException (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__UnsupportedEncodingException(struct soap*, ns1__UnsupportedEncodingException *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__UnsupportedEncodingException(struct soap*, const char *, int, ns1__UnsupportedEncodingException *const*, const char *);
SOAP_FMAC3 ns1__UnsupportedEncodingException ** SOAP_FMAC4 soap_in_PointerTons1__UnsupportedEncodingException(struct soap*, const char*, ns1__UnsupportedEncodingException **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__UnsupportedEncodingException(struct soap*, ns1__UnsupportedEncodingException *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__UnsupportedEncodingException
#define soap_write_PointerTons1__UnsupportedEncodingException(soap, data) ( soap_begin(soap), soap_serialize_PointerTons1__UnsupportedEncodingException(soap, data), soap_begin_send(soap) || soap_put_PointerTons1__UnsupportedEncodingException(soap, data, "ns1:UnsupportedEncodingException", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__UnsupportedEncodingException ** SOAP_FMAC4 soap_get_PointerTons1__UnsupportedEncodingException(struct soap*, ns1__UnsupportedEncodingException **, const char*, const char*);

#ifndef soap_read_PointerTons1__UnsupportedEncodingException
#define soap_read_PointerTons1__UnsupportedEncodingException(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__UnsupportedEncodingException(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__DecoderException
#define SOAP_TYPE_PointerTons1__DecoderException (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__DecoderException(struct soap*, ns1__DecoderException *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__DecoderException(struct soap*, const char *, int, ns1__DecoderException *const*, const char *);
SOAP_FMAC3 ns1__DecoderException ** SOAP_FMAC4 soap_in_PointerTons1__DecoderException(struct soap*, const char*, ns1__DecoderException **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__DecoderException(struct soap*, ns1__DecoderException *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__DecoderException
#define soap_write_PointerTons1__DecoderException(soap, data) ( soap_begin(soap), soap_serialize_PointerTons1__DecoderException(soap, data), soap_begin_send(soap) || soap_put_PointerTons1__DecoderException(soap, data, "ns1:DecoderException", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__DecoderException ** SOAP_FMAC4 soap_get_PointerTons1__DecoderException(struct soap*, ns1__DecoderException **, const char*, const char*);

#ifndef soap_read_PointerTons1__DecoderException
#define soap_read_PointerTons1__DecoderException(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__DecoderException(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTobool
#define SOAP_TYPE_PointerTobool (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTobool(struct soap*, bool *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTobool(struct soap*, const char *, int, bool *const*, const char *);
SOAP_FMAC3 bool ** SOAP_FMAC4 soap_in_PointerTobool(struct soap*, const char*, bool **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTobool(struct soap*, bool *const*, const char*, const char*);

#ifndef soap_write_PointerTobool
#define soap_write_PointerTobool(soap, data) ( soap_begin(soap), soap_serialize_PointerTobool(soap, data), soap_begin_send(soap) || soap_put_PointerTobool(soap, data, "boolean", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 bool ** SOAP_FMAC4 soap_get_PointerTobool(struct soap*, bool **, const char*, const char*);

#ifndef soap_read_PointerTobool
#define soap_read_PointerTobool(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTobool(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerToLONG64
#define SOAP_TYPE_PointerToLONG64 (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToLONG64(struct soap*, LONG64 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToLONG64(struct soap*, const char *, int, LONG64 *const*, const char *);
SOAP_FMAC3 LONG64 ** SOAP_FMAC4 soap_in_PointerToLONG64(struct soap*, const char*, LONG64 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToLONG64(struct soap*, LONG64 *const*, const char*, const char*);

#ifndef soap_write_PointerToLONG64
#define soap_write_PointerToLONG64(soap, data) ( soap_begin(soap), soap_serialize_PointerToLONG64(soap, data), soap_begin_send(soap) || soap_put_PointerToLONG64(soap, data, "long", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 LONG64 ** SOAP_FMAC4 soap_get_PointerToLONG64(struct soap*, LONG64 **, const char*, const char*);

#ifndef soap_read_PointerToLONG64
#define soap_read_PointerToLONG64(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToLONG64(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerToint
#define SOAP_TYPE_PointerToint (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToint(struct soap*, int *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToint(struct soap*, const char *, int, int *const*, const char *);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_in_PointerToint(struct soap*, const char*, int **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToint(struct soap*, int *const*, const char*, const char*);

#ifndef soap_write_PointerToint
#define soap_write_PointerToint(soap, data) ( soap_begin(soap), soap_serialize_PointerToint(soap, data), soap_begin_send(soap) || soap_put_PointerToint(soap, data, "int", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 int ** SOAP_FMAC4 soap_get_PointerToint(struct soap*, int **, const char*, const char*);

#ifndef soap_read_PointerToint
#define soap_read_PointerToint(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToint(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__xfelSession
#define SOAP_TYPE_PointerTons1__xfelSession (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__xfelSession(struct soap*, ns1__xfelSession *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__xfelSession(struct soap*, const char *, int, ns1__xfelSession *const*, const char *);
SOAP_FMAC3 ns1__xfelSession ** SOAP_FMAC4 soap_in_PointerTons1__xfelSession(struct soap*, const char*, ns1__xfelSession **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__xfelSession(struct soap*, ns1__xfelSession *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__xfelSession
#define soap_write_PointerTons1__xfelSession(soap, data) ( soap_begin(soap), soap_serialize_PointerTons1__xfelSession(soap, data), soap_begin_send(soap) || soap_put_PointerTons1__xfelSession(soap, data, "ns1:xfelSession", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__xfelSession ** SOAP_FMAC4 soap_get_PointerTons1__xfelSession(struct soap*, ns1__xfelSession **, const char*, const char*);

#ifndef soap_read_PointerTons1__xfelSession
#define soap_read_PointerTons1__xfelSession(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__xfelSession(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__string
#define SOAP_TYPE_PointerTostd__string (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__string
#define soap_write_PointerTostd__string(soap, data) ( soap_begin(soap), soap_serialize_PointerTostd__string(soap, data), soap_begin_send(soap) || soap_put_PointerTostd__string(soap, data, "string", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTostd__string
#define soap_read_PointerTostd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__string(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin(soap), soap_serialize__QName(soap, data), soap_begin_send(soap) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin(soap), soap_serialize_string(soap, data), soap_begin_send(soap) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

/* End of soapH.h */
