# Copyright (c) 2007 Ian Bicking and Contributors
# Copyright (c) 2009 Ian Bicking, The Open Planning Project
# Copyright (c) 2011-2015 The virtualenv developers
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# This file must be used with "source bin/activate" *from bash*
# you cannot run it directly

deactivate () {
    # reset old environment variables
    if [ -n "$_OLD_KARABO_PATH" ] ; then
        PATH="$_OLD_KARABO_PATH"
        export PATH
        unset _OLD_KARABO_PATH
    fi
    if [ -n "$_OLD_KARABO_PYTHONHOME" ] ; then
        PYTHONHOME="$_OLD_KARABO_PYTHONHOME"
        export PYTHONHOME
        unset _OLD_KARABO_PYTHONHOME
    fi

    # remove .karabo/karaboFramework file
    if [ -e "$HOME/.karabo/karaboFramework" ] ; then
        rm -f "$HOME/.karabo/karaboFramework"
    fi

    # This should detect bash and zsh, which have a hash command that must
    # be called to get it to forget past commands.  Without forgetting
    # past commands the $PATH changes we made may not be respected
    if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
        hash -r
    fi

    if [ ! "$1" = "nondestructive" ] ; then
        # Self destruct!
        pushd "$KARABO/var/environment" >/dev/null
        for var in *
        do
           unset $var
        done
        popd >/dev/null
        unset -f deactivate
    fi
    unset KARABO
}

# unset irrelevant variables
deactivate nondestructive

KARABO="__VENV_DIR__"
export KARABO

if [ ! -e "$KARABO/var/service" ]
then
  cp -r "$KARABO/service.in" "$KARABO/var/service"
fi

if [ ! -e "$KARABO/var/environment" ]
then
  cp -r "$KARABO/environment.in" "$KARABO/var/environment"
fi

pushd "$KARABO/var/environment" >/dev/null
for var in *
do
   export $var="$(cat $var)"
done
popd >/dev/null

_OLD_KARABO_PATH="$PATH"
PATH="$KARABO/bin:$KARABO/extern/bin:$PATH"
export PATH

# for backward compatibility (and NetBeans) set the path in .karabo/karaboFramework
echo $KARABO > $HOME/.karabo/karaboFramework

# unset PYTHONHOME if set
# this will fail if PYTHONHOME is set to the empty string (which is bad anyway)
# could use `if (set -u; : $PYTHONHOME) ;` in bash
if [ -n "$PYTHONHOME" ] ; then
    _OLD_KARABO_PYTHONHOME="$PYTHONHOME"
    unset PYTHONHOME
fi

# This should detect bash and zsh, which have a hash command that must
# be called to get it to forget past commands.  Without forgetting
# past commands the $PATH changes we made may not be respected
if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
    hash -r
fi
